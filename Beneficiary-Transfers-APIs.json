{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "API Reference",
    "version" : "v1"
  },
  "tags" : [ {
    "name" : "Beneficiary Transfers"
  } ],
  "paths" : {
    "/api/v1/ifi/{ifiID}/companies/{companyID}/beneficiaries/{beneficiaryID}/transfers" : {
      "post" : {
        "tags" : [ "Beneficiary Transfers" ],
        "summary" : "Perform transfer to a beneficiary account of an company",
        "operationId" : "transferToBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary transfer is being performed",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company who is performing the beneficiary transfer",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary to whom the transfer is being performed",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/BeneficiaryAccountTransactionFusionRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BeneficiaryTransactionFusionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/companies/{companyID}/beneficiaryTransfers" : {
      "get" : {
        "tags" : [ "Beneficiary Transfers" ],
        "summary" : "Get all the beneficiary transfers of an company",
        "operationId" : "getAllBeneficiaryTransfers",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary whose transfers are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiary transfers are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/companies/{companyID}/beneficiaryTransfers/{transferID}" : {
      "get" : {
        "tags" : [ "Beneficiary Transfers" ],
        "summary" : "Get the details of a transfer by ID",
        "operationId" : "getBeneficiaryTransferByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary transfer exists",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiary transfer details are being fetched",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "transferID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BeneficiaryTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaries/{beneficiaryID}/accounts/{accountID}/transfers" : {
      "post" : {
        "tags" : [ "Beneficiary Transfers" ],
        "summary" : "Transfer Funds to Beneficiary Account",
        "description" : "Perform transfer to a beneficiary account of an individual.",
        "operationId" : "transferToBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary transfer is being performed",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual who is performing the beneficiary transfer",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary to whom the transfer is being performed",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the beneficiary account to which the transfer is being performed",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/BeneficiaryAccountTransferRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BeneficiaryTransactionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaries/{beneficiaryID}/transfers" : {
      "post" : {
        "tags" : [ "Beneficiary Transfers" ],
        "description" : "Perform transfer to an individual beneficiary's default account",
        "operationId" : "transferToDefaultBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary transfer is being performed",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual who is performing the beneficiary transfer",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary to whom the transfer is being performed",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/BeneficiaryAccountTransferRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BeneficiaryTransactionResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaryTransfers" : {
      "get" : {
        "tags" : [ "Beneficiary Transfers" ],
        "description" : "Get all the beneficiary transfers of an individual.",
        "operationId" : "getAllBeneficiaryTransfers",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary whose transfers are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary transfers are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetBeneficiaryTransactionListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaryTransfers/{transferID}" : {
      "get" : {
        "tags" : [ "Beneficiary Transfers" ],
        "description" : "Get the details of a transfer by ID",
        "operationId" : "getBeneficiaryTransferByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary transfer exists",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary transfer details are being fetched",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "transferID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BeneficiaryTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/companies/{companyID}/beneficiaries/{beneficiaryID}/transfers" : {
      "post" : {
        "tags" : [ "Beneficiary Transfers" ],
        "summary" : "Perform transfer to a beneficiary account of an company",
        "operationId" : "transferToBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary transfer is being performed",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company who is performing the beneficiary transfer",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary to whom the transfer is being performed",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/BeneficiaryAccountTransactionFusionRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BeneficiaryTransactionFusionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/companies/{companyID}/beneficiaryTransfers" : {
      "get" : {
        "tags" : [ "Beneficiary Transfers" ],
        "summary" : "Get all the beneficiary transfers of an company",
        "operationId" : "getAllBeneficiaryTransfers",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary whose transfers are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiary transfers are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/companies/{companyID}/beneficiaryTransfers/{transferID}" : {
      "get" : {
        "tags" : [ "Beneficiary Transfers" ],
        "summary" : "Get the details of a transfer by ID",
        "operationId" : "getBeneficiaryTransferByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary transfer exists",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiary transfer details are being fetched",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "transferID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BeneficiaryTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/individuals/{individualID}/beneficiaries/{beneficiaryID}/accounts/{accountID}/transfers" : {
      "post" : {
        "tags" : [ "Beneficiary Transfers" ],
        "description" : "Perform transfer to a beneficiary account of an individual.",
        "operationId" : "transferToBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary transfer is being performed",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual who is performing the beneficiary transfer",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary to whom the transfer is being performed",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/BeneficiaryAccountTransactionFusionRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BeneficiaryTransactionFusionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/individuals/{individualID}/beneficiaryTransfers" : {
      "get" : {
        "tags" : [ "Beneficiary Transfers" ],
        "description" : "Get all the beneficiary transfers of an individual.",
        "operationId" : "getAllBeneficiaryTransfers",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary whose transfers are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary transfers are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/individuals/{individualID}/beneficiaryTransfers/{transferID}" : {
      "get" : {
        "tags" : [ "Beneficiary Transfers" ],
        "description" : "Get the details of a transfer by ID",
        "operationId" : "getBeneficiaryTransferByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary transfer exists",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary transfer details are being fetched",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "transferID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BeneficiaryTransaction"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "BeneficiaryAccountTransactionFusionRequest" : {
        "type" : "object",
        "properties" : {
          "currency" : {
            "type" : "string",
            "description" : "Currency in which money need to be transacted ",
            "example" : "INR"
          },
          "amount" : {
            "type" : "integer",
            "description" : "Amount that need to be transferred",
            "format" : "int64",
            "example" : 500
          },
          "transactionCode" : {
            "type" : "string",
            "description" : "TransactionCode regarding the transaction"
          },
          "debitAccountID" : {
            "type" : "string",
            "description" : "ID of the account from which money has to be deducted"
          },
          "beneficiaryAccountID" : {
            "type" : "string",
            "description" : "ID of the beneficiary's account in which money is being transferred"
          },
          "transactionTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "remarks" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Any additional information which you would like to provide"
          }
        }
      },
      "BeneficiaryAccountTransferRequest" : {
        "required" : [ "debitAccountID", "remarks", "transactionCode", "transactionTime" ],
        "type" : "object",
        "properties" : {
          "requestID" : {
            "type" : "string"
          },
          "transferAmount" : {
            "$ref" : "#/components/schemas/Money"
          },
          "currency" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "transactionCode" : {
            "type" : "string"
          },
          "debitAccountID" : {
            "type" : "string"
          },
          "transactionTime" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          },
          "remarks" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "BeneficiaryTransaction" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          },
          "requestID" : {
            "type" : "string"
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "currency" : {
            "type" : "string"
          },
          "transactionCode" : {
            "type" : "string"
          },
          "debitAccountID" : {
            "type" : "string"
          },
          "debitAccountHolderID" : {
            "type" : "string"
          },
          "beneficiaryID" : {
            "type" : "string"
          },
          "beneficiaryAccountID" : {
            "type" : "string"
          },
          "transactionTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "transferType" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "transactionID" : {
            "type" : "string"
          },
          "receiptID" : {
            "type" : "string"
          },
          "remarks" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "BeneficiaryTransactionFusionResponse" : {
        "type" : "object",
        "properties" : {
          "transactionID" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          }
        }
      },
      "BeneficiaryTransactionResponse" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "requestID" : {
            "type" : "string"
          },
          "transactionID" : {
            "type" : "string"
          },
          "paymentID" : {
            "type" : "string"
          },
          "receiptID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "transactionCode" : {
            "type" : "string"
          },
          "debits" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Posting"
            }
          },
          "reversedReceiptID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "time" : {
            "type" : "integer",
            "format" : "int64"
          },
          "towards" : {
            "type" : "string"
          },
          "transferAmount" : {
            "$ref" : "#/components/schemas/Money"
          },
          "payerInfo" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "payeeInfo" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "status" : {
            "type" : "string"
          },
          "transferType" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "statusDetails" : {
            "$ref" : "#/components/schemas/JsonObject"
          }
        }
      },
      "GetBeneficiaryTransactionListResponse" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "transactions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BeneficiaryTransaction"
            }
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "JsonArray" : {
        "type" : "object",
        "properties" : {
          "asBoolean" : {
            "type" : "boolean"
          },
          "asNumber" : {
            "$ref" : "#/components/schemas/Number"
          },
          "asDouble" : {
            "type" : "number",
            "format" : "double"
          },
          "asFloat" : {
            "type" : "number",
            "format" : "float"
          },
          "asLong" : {
            "type" : "integer",
            "format" : "int64"
          },
          "asInt" : {
            "type" : "integer",
            "format" : "int32"
          },
          "asByte" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "format" : "byte"
          },
          "asCharacter" : {
            "type" : "string"
          },
          "asBigDecimal" : {
            "type" : "number"
          },
          "asBigInteger" : {
            "type" : "integer"
          },
          "asShort" : {
            "type" : "integer",
            "format" : "int32"
          },
          "asString" : {
            "type" : "string"
          },
          "asJsonArray" : {
            "$ref" : "#/components/schemas/JsonArray"
          },
          "asJsonObject" : {
            "$ref" : "#/components/schemas/JsonObject"
          },
          "asJsonPrimitive" : {
            "$ref" : "#/components/schemas/JsonPrimitive"
          },
          "jsonArray" : {
            "type" : "boolean"
          },
          "jsonObject" : {
            "type" : "boolean"
          },
          "jsonPrimitive" : {
            "type" : "boolean"
          },
          "jsonNull" : {
            "type" : "boolean"
          },
          "asJsonNull" : {
            "$ref" : "#/components/schemas/JsonNull"
          }
        }
      },
      "JsonNull" : {
        "type" : "object",
        "properties" : {
          "asBoolean" : {
            "type" : "boolean"
          },
          "asJsonArray" : {
            "$ref" : "#/components/schemas/JsonArray"
          },
          "asJsonObject" : {
            "$ref" : "#/components/schemas/JsonObject"
          },
          "asJsonPrimitive" : {
            "$ref" : "#/components/schemas/JsonPrimitive"
          },
          "jsonArray" : {
            "type" : "boolean"
          },
          "jsonObject" : {
            "type" : "boolean"
          },
          "jsonPrimitive" : {
            "type" : "boolean"
          },
          "jsonNull" : {
            "type" : "boolean"
          },
          "asJsonNull" : {
            "$ref" : "#/components/schemas/JsonNull"
          },
          "asNumber" : {
            "$ref" : "#/components/schemas/Number"
          },
          "asDouble" : {
            "type" : "number",
            "format" : "double"
          },
          "asFloat" : {
            "type" : "number",
            "format" : "float"
          },
          "asLong" : {
            "type" : "integer",
            "format" : "int64"
          },
          "asInt" : {
            "type" : "integer",
            "format" : "int32"
          },
          "asByte" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "format" : "byte"
          },
          "asCharacter" : {
            "type" : "string"
          },
          "asBigDecimal" : {
            "type" : "number"
          },
          "asBigInteger" : {
            "type" : "integer"
          },
          "asShort" : {
            "type" : "integer",
            "format" : "int32"
          },
          "asString" : {
            "type" : "string"
          }
        }
      },
      "JsonObject" : {
        "type" : "object",
        "properties" : {
          "asBoolean" : {
            "type" : "boolean"
          },
          "asJsonArray" : {
            "$ref" : "#/components/schemas/JsonArray"
          },
          "asJsonObject" : {
            "$ref" : "#/components/schemas/JsonObject"
          },
          "asJsonPrimitive" : {
            "$ref" : "#/components/schemas/JsonPrimitive"
          },
          "jsonArray" : {
            "type" : "boolean"
          },
          "jsonObject" : {
            "type" : "boolean"
          },
          "jsonPrimitive" : {
            "type" : "boolean"
          },
          "jsonNull" : {
            "type" : "boolean"
          },
          "asJsonNull" : {
            "$ref" : "#/components/schemas/JsonNull"
          },
          "asNumber" : {
            "$ref" : "#/components/schemas/Number"
          },
          "asDouble" : {
            "type" : "number",
            "format" : "double"
          },
          "asFloat" : {
            "type" : "number",
            "format" : "float"
          },
          "asLong" : {
            "type" : "integer",
            "format" : "int64"
          },
          "asInt" : {
            "type" : "integer",
            "format" : "int32"
          },
          "asByte" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "format" : "byte"
          },
          "asCharacter" : {
            "type" : "string"
          },
          "asBigDecimal" : {
            "type" : "number"
          },
          "asBigInteger" : {
            "type" : "integer"
          },
          "asShort" : {
            "type" : "integer",
            "format" : "int32"
          },
          "asString" : {
            "type" : "string"
          }
        }
      },
      "JsonPrimitive" : {
        "type" : "object",
        "properties" : {
          "number" : {
            "type" : "boolean"
          },
          "asBoolean" : {
            "type" : "boolean"
          },
          "boolean" : {
            "type" : "boolean"
          },
          "asNumber" : {
            "$ref" : "#/components/schemas/Number"
          },
          "asDouble" : {
            "type" : "number",
            "format" : "double"
          },
          "asFloat" : {
            "type" : "number",
            "format" : "float"
          },
          "asLong" : {
            "type" : "integer",
            "format" : "int64"
          },
          "asInt" : {
            "type" : "integer",
            "format" : "int32"
          },
          "asByte" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "format" : "byte"
          },
          "asCharacter" : {
            "type" : "string"
          },
          "asBigDecimal" : {
            "type" : "number"
          },
          "asBigInteger" : {
            "type" : "integer"
          },
          "asShort" : {
            "type" : "integer",
            "format" : "int32"
          },
          "string" : {
            "type" : "boolean"
          },
          "asString" : {
            "type" : "string"
          },
          "asJsonArray" : {
            "$ref" : "#/components/schemas/JsonArray"
          },
          "asJsonObject" : {
            "$ref" : "#/components/schemas/JsonObject"
          },
          "asJsonPrimitive" : {
            "$ref" : "#/components/schemas/JsonPrimitive"
          },
          "jsonArray" : {
            "type" : "boolean"
          },
          "jsonObject" : {
            "type" : "boolean"
          },
          "jsonPrimitive" : {
            "type" : "boolean"
          },
          "jsonNull" : {
            "type" : "boolean"
          },
          "asJsonNull" : {
            "$ref" : "#/components/schemas/JsonNull"
          }
        }
      },
      "Money" : {
        "type" : "object",
        "properties" : {
          "currency" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "Number" : {
        "type" : "object"
      },
      "PageMetadata" : {
        "type" : "object",
        "properties" : {
          "size" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "number" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PagedModel" : {
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "metadata" : {
            "$ref" : "#/components/schemas/PageMetadata"
          }
        }
      },
      "Posting" : {
        "type" : "object",
        "properties" : {
          "postingID" : {
            "type" : "string"
          },
          "ifi" : {
            "type" : "integer",
            "format" : "int64"
          },
          "value" : {
            "$ref" : "#/components/schemas/Money"
          },
          "newBalance" : {
            "$ref" : "#/components/schemas/Money"
          },
          "instrumentType" : {
            "type" : "string"
          },
          "productType" : {
            "type" : "string"
          },
          "cardProgramID" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "coupons" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/JsonObject"
            }
          }
        }
      }
    }
  }
}
