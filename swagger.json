{
  "swagger" : "2.0",
  "info" : {
    "version" : "v1",
    "title" : "API Reference"
  },
  "tags" : [ {
    "name" : "Account Management"
  }, {
    "name" : "AccountHolder Management"
  }, {
    "name" : "Bundles"
  }, {
    "name" : "SupportCentre"
  } ],
  "paths" : {
    "/api/v1/ifi/{ifiID}/account/{accountID}/transactionPolicies" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "",
        "description" : "",
        "operationId" : "getTransactionPoliciesByAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the policies exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose policy details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAllTransactionPoliciesResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accountHolder/headless" : {
      "post" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Create a headless account holder",
        "description" : "",
        "operationId" : "createHeadlessAccountHolder",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the headless account holder is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateAccountHolderRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountHolderRelationListResponse"
            }
          },
          "201" : {
            "description" : ""
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accountHolders/{accountHolderID}" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get all details of the account holder",
        "description" : "",
        "operationId" : "getAccountHolderByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountHolderID",
          "in" : "path",
          "description" : "ID of the account holder whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolder"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get all accounts of IFI",
        "description" : "",
        "operationId" : "getAccounts",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the accounts exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "lastFetchedId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountListResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/update" : {
      "post" : {
        "tags" : [ "Account Management" ],
        "summary" : "Update all Accounts for a given real or headless account holder",
        "description" : "",
        "operationId" : "accountHolderUpdated",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ifiID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateProductForAllAccountsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EmptyPayload"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get specific account by ID",
        "description" : "",
        "operationId" : "getAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/accessors" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get all accessors for a given accountID",
        "description" : "",
        "operationId" : "getAccountAccessors",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account accessors exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose accessor details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountAccessorListResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Account Management" ],
        "summary" : "Create accessors for the given accountID",
        "description" : "",
        "operationId" : "createAccountAccessor",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account accessor is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account for which the accessor is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddAccountAccessorRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Accessor"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/accessors/{accessorID}" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get accessor for a given accountID by the ID",
        "description" : "",
        "operationId" : "getAccountAccessorByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account accessor exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose accessor details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "accessorID",
          "in" : "path",
          "description" : "ID of the accessor whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Accessor"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/balance" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get the balance of the accountID provided",
        "description" : "",
        "operationId" : "getBalance",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose balance details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountBalanceResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/relations" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get all relations of the given accountID",
        "description" : "",
        "operationId" : "getAccountRelations",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account relations exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose relation details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountRelationListResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Account Management" ],
        "summary" : "Create relation for the given accountID",
        "description" : "",
        "operationId" : "createAccountRelation",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account relation is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account for which relation is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddAccountRelationRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountRelation"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/relations/{relationID}" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get the relation of an account by the ID",
        "description" : "",
        "operationId" : "getAccountRelationByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account relation exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose relation details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "relationID",
          "in" : "path",
          "description" : "ID of the relation whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountRelation"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/transactions" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get all transactions of an account",
        "description" : "",
        "operationId" : "getTransactions",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account transactions exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose transaction details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountTransactionListResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/transactions/{transactionID}" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get information of a specific transaction as per ID",
        "description" : "",
        "operationId" : "getTransaction",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account transaction exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose transaction details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "transactionID",
          "in" : "path",
          "description" : "ID of the transaction whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountTransaction"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/vectors" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get all vectors of the given accountID",
        "description" : "",
        "operationId" : "getAccountVectors",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account vector exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose vector details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountVectorListResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Account Management" ],
        "summary" : "Create vector for the given accountID",
        "description" : "",
        "operationId" : "createAccountVector",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account vector is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose vector details are being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddAccountVectorRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountVector"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/vectors/{vectorID}" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get the vector of an account by ID",
        "description" : "",
        "operationId" : "getAccountVectorByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account vector exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose vector details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "vectorID",
          "in" : "path",
          "description" : "ID of the vector whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountVector"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accountsInfo/{accountID}" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "operationId" : "getAccountInfo",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountInfo"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/applications" : {
      "get" : {
        "summary" : "Get All Applications",
        "description" : "",
        "operationId" : "getAllApplications",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "status",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/applications/addCorporate" : {
      "post" : {
        "summary" : "Create an application for creating a new corporate",
        "description" : "",
        "operationId" : "createCorporateApplication",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateAddCorporateApplicationRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CreateApplicationResponse"
            }
          },
          "201" : {
            "description" : ""
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/applications/editCorporate" : {
      "post" : {
        "summary" : "Create an application for editing an existing corporate",
        "description" : "",
        "operationId" : "createEditCorporateApplication",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateEditCorporateApplicationRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericCreateApplicationResponse"
            }
          },
          "201" : {
            "description" : ""
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/applications/editIndividual" : {
      "post" : {
        "summary" : "Edit Individual Application",
        "description" : "",
        "operationId" : "editApplication",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/EditIndividualApplicationRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/applications/newIndividual" : {
      "post" : {
        "summary" : "Create Individual Application With Auto Approval",
        "description" : "",
        "operationId" : "createApplicationWithAutoApproval",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateAccountHolderWithAutoApprovalRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/applications/newIndividualApplication" : {
      "post" : {
        "summary" : "Create Individual Application",
        "description" : "",
        "operationId" : "createApplication",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateAccountHolderApplicationRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/applications/newIndividualDirect" : {
      "post" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Create an application for creating new individual",
        "description" : "",
        "operationId" : "createAccountHolder",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account holder is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateAccountHolderRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolder"
            }
          },
          "201" : {
            "description" : ""
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/applications/{applicationID}" : {
      "get" : {
        "summary" : "Get Individual Application",
        "description" : "",
        "operationId" : "getApplication",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update Individual Application",
        "description" : "",
        "operationId" : "updateApplication",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateAccountHolderApplicationRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete Individual Application",
        "description" : "",
        "operationId" : "deleteApplication",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/applications/{applicationID}/kycStatus/{kycStatus}" : {
      "put" : {
        "summary" : "Update Application Status",
        "description" : "",
        "operationId" : "updateApplicationKYCStatus",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "kycStatus",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateKycStatusRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/applications/{applicationID}/spool/{spoolID}" : {
      "put" : {
        "summary" : "Update Application Spool",
        "description" : "",
        "operationId" : "updateApplicationSpool",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "spoolID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/applications/{applicationID}/status/{newStatus}" : {
      "put" : {
        "summary" : "Update Application Status",
        "description" : "",
        "operationId" : "updateApplicationStatus",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "newStatus",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/createExtendedProduct" : {
      "post" : {
        "summary" : "CreateExtendedProduct api via fusion",
        "description" : "",
        "operationId" : "createExtendedProduct",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateExtendedProductRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Product"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/createExtendedProductFamily" : {
      "post" : {
        "summary" : "CreateExtendedProductFamily api via fusion",
        "description" : "",
        "operationId" : "createExtendedProductFamily",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateExtendedProductFamilyRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProductFamily"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/entity-policy-mapping" : {
      "post" : {
        "summary" : "Create Policy Mapping state",
        "description" : "",
        "operationId" : "createPolicyMapping",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreatePolicyMappingRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransactionPolicyResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/getAllTransactionPoliciesByIFI" : {
      "get" : {
        "summary" : "Get all transaction policies for a given IFI",
        "description" : "",
        "operationId" : "getAllTransactionPoliciesByIFI",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAllTransactionPoliciesResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/getCoaList" : {
      "get" : {
        "summary" : "Get all CoAs for a given IFI",
        "description" : "",
        "operationId" : "getCoaListByIFI",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetCoaListResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/getCoaNodes" : {
      "get" : {
        "summary" : "Get all CoA Nodes for a given IFI and CoAID",
        "description" : "",
        "operationId" : "getCoaNodesByIFIAndCoaID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "coaID",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetCoaNodesResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/getEntityGroupList" : {
      "get" : {
        "summary" : "Get EntityGrouplist for a given ifi and entityType",
        "description" : "",
        "operationId" : "getEntityGroupList",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "entityType",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ListEntityGroupResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/getPolicyMappings" : {
      "get" : {
        "summary" : "Get PolicyMappings for a given ifi, entityID, policyEntityType, policyType and PolicyId",
        "description" : "",
        "operationId" : "getPolicyMappings",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "entityID",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyEntityType",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyType",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyID",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetProductListResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/getProduct" : {
      "get" : {
        "summary" : "Get Product with a given IFI and ProductID",
        "description" : "",
        "operationId" : "getProductByIFIAndID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "id",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Product"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/getProductFamily" : {
      "get" : {
        "summary" : "Get ProductFamily for a given ifi and id",
        "description" : "",
        "operationId" : "getProductFamily",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "productFamilyId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123456789065434567
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProductFamily"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/getProductFamilyList" : {
      "get" : {
        "summary" : "Get ProductFamilyList for a given ifi",
        "description" : "",
        "operationId" : "getProductFamilyList",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetProductFamilyListResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/getProductList" : {
      "get" : {
        "summary" : "Get ProductList for a given ifi",
        "description" : "",
        "operationId" : "getProductList",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetProductListResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/getTransactionPolicyByID" : {
      "get" : {
        "summary" : "Get TransactionPolicy with a given ID",
        "description" : "",
        "operationId" : "getProductByIFIAndID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "id",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransactionPolicyResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/transaction-policy" : {
      "post" : {
        "summary" : "Create TransactionPolicy",
        "description" : "",
        "operationId" : "createTransactionPolicy",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Builder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransactionPolicyResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/transaction-policy/{transactionPolicyID}" : {
      "put" : {
        "summary" : "Replace Transaction Policy",
        "description" : "",
        "operationId" : "replaceTransactionPolicy",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "transactionPolicyID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ReplaceTransactionPolicyRequestPayload"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransactionPolicyResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/transaction-policy/{transactionPolicyId}" : {
      "patch" : {
        "summary" : "Update Transaction Policy State",
        "description" : "",
        "operationId" : "updateTransactionPolicyState",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "transactionPolicyId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateTransactionPolicyStateRequestPayload"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EmptyPayload"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles" : {
      "get" : {
        "tags" : [ "Bundles" ],
        "summary" : "Get all Bundles",
        "description" : "Get all Bundles available for an IFI. The response returns a unique identifier for each available Bundle.",
        "operationId" : "getAllBundles",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundles are being retrieved",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BundleResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Bundles" ],
        "summary" : "Create Bundle",
        "description" : "Creates a Bundle",
        "operationId" : "createBundle",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundle is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddBundleRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BundleResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles/{bundleID}" : {
      "get" : {
        "tags" : [ "Bundles" ],
        "summary" : "Get Bundle by Bundle ID",
        "description" : "Returns Bundle by bundleID for an IFI.",
        "operationId" : "getBundleByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundles are being retrieved by bundleID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose details are being retrieved",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BundleResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Bundles" ],
        "summary" : "Update Bundle",
        "description" : "Update Bundle details",
        "operationId" : "updateBundle",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundle is being updated",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose details are being updated",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateBundleRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BundleResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Bundles" ],
        "summary" : "Delete Bundle",
        "description" : "Delete a Bundle",
        "operationId" : "deleteBundle",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundle is being deleted",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle which is being deleted",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BundleResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles/{bundleID}/accountProducts" : {
      "post" : {
        "tags" : [ "Bundles" ],
        "summary" : "Add Account Product",
        "description" : "Adds an Account Product to a Bundle",
        "operationId" : "addAccountProductToBundle",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundle is being updated",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose details are being updated",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddAccountProductInBundleRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BundleResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles/{bundleID}/accountProducts/{accountProductID}" : {
      "delete" : {
        "tags" : [ "Bundles" ],
        "summary" : "Delete Account Product",
        "description" : "Deletes an Account Product from a Bundle",
        "operationId" : "deleteAccountProductFromBundle",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundle is being updated",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose details are being updated",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "accountProductID",
          "in" : "path",
          "description" : "ID for the account product which is to be removed from the bundle",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BundleResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles/{bundleID}/issueAccount" : {
      "post" : {
        "summary" : "Issue specific Account from a bundle ",
        "description" : "",
        "operationId" : "issueAccountProduct",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the Account is being issued",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose account product is being issued",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IssueAccountArtifactRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/IssueAccountArtifactResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles/{bundleID}/issueBundle" : {
      "post" : {
        "summary" : "Issue bundle to a specific individual/company",
        "description" : "",
        "operationId" : "issueBundle",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundle is being issued",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle which is being issued",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IssueBundleRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/IssueBundleResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles/{bundleID}/issueFormFactor" : {
      "post" : {
        "summary" : "Issue specific form factor of a resource to a specific individual/company",
        "description" : "",
        "operationId" : "issueFormFactor",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the form factor is being issued",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose form factor/card is being issued",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IssueFormFactorRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/IssueFormFactorResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles/{bundleID}/issueResource" : {
      "post" : {
        "summary" : "Issue specific resource of a bundle to a specific individual/company",
        "description" : "",
        "operationId" : "issueResource",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the resource is being issued",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose resource is being issued",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IssueResourceRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/IssueResourceResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles/{bundleID}/paymentProducts" : {
      "post" : {
        "tags" : [ "Bundles" ],
        "summary" : "Add Payment Product",
        "description" : "Adds a Payment Product to a Bundle",
        "operationId" : "addPaymentProductToBundle",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundle is being updated",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose details are being updated",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddPaymentProductInBundleRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BundleResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles/{bundleID}/paymentProducts/{paymentProductID}" : {
      "delete" : {
        "tags" : [ "Bundles" ],
        "summary" : "Delete Payment Product",
        "description" : "Deletes a Payment Product from a Bundle",
        "operationId" : "deletePaymentProductFromBundle",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundle is being updated.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose details are being updated",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "paymentProductID",
          "in" : "path",
          "description" : "ID for the payment product to be removed from the bundle",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BundleResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/cards/orders/{orderID}" : {
      "get" : {
        "summary" : "Get order details by ID",
        "description" : "",
        "operationId" : "getOrder",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "orderID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/OrderSummary"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/cards/{cguid}" : {
      "get" : {
        "summary" : "Get card details by ID",
        "description" : "",
        "operationId" : "getCard",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "cguid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Zeta-JWS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CardView"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/companies" : {
      "get" : {
        "summary" : "Get all the companies of a specific IFI",
        "description" : "",
        "operationId" : "getCompaniesByIFI",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          },
          "201" : {
            "description" : ""
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/companies/{companyID}" : {
      "get" : {
        "summary" : "Get details of a specific company by ID",
        "description" : "",
        "operationId" : "getCompanyById",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "companyID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Company"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/corporate/applications" : {
      "get" : {
        "summary" : "Get all the applications of an IFI of a specific applicationType ",
        "description" : "",
        "operationId" : "getApplicationsByIFI",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericFetchApplicationResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/corporate/applications/{applicationID}" : {
      "get" : {
        "summary" : "Get application details by ID",
        "description" : "",
        "operationId" : "getApplicationByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetApplicationDetailsResponse"
            }
          },
          "201" : {
            "description" : ""
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/corporate/applications/{applicationID}/action/{action}" : {
      "post" : {
        "summary" : "Perform action on the application",
        "description" : "",
        "operationId" : "actionOnApplication",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "action",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ActionOnApplicationRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EmptyPayload"
            }
          },
          "201" : {
            "description" : ""
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/corporate/applications/{applicationID}/addCompanySection/{addCompanySectionID}" : {
      "put" : {
        "summary" : "Perform action on the company section of the application",
        "description" : "",
        "operationId" : "addCompanySection",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "addCompanySectionID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ActionOnAddCompanySectionRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ActionOnSectionResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/corporate/applications/{applicationID}/addCompanySections/{addCompanySectionID}" : {
      "get" : {
        "summary" : "Get the company section of an application by ID",
        "description" : "",
        "operationId" : "getCompanySectionByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "addCompanySectionID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AddCompanyDataObject"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/corporate/applications/{applicationID}/addCorporateSection/{addCorporateSectionID}" : {
      "get" : {
        "summary" : "Get the corporate section of an application by ID",
        "description" : "",
        "operationId" : "getAddCorporateSectionByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "addCorporateSectionID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AddCorporateDataObject"
            }
          }
        }
      },
      "put" : {
        "summary" : "Perform action on the corporate section of the application",
        "description" : "",
        "operationId" : "addCorporateSection",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "addCorporateSectionID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ActionOnAddCorporateSectionRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ActionOnSectionResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/corporate/applications/{applicationID}/editCompanySection/{editCompanySectionID}" : {
      "put" : {
        "summary" : "Perform action on the company section of the application",
        "description" : "",
        "operationId" : "editCompanySection",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "editCompanySectionID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ActionOnEditCompanySectionRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetApplicationDetailsResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/corporate/applications/{applicationID}/editCompanySections/{editCompanySectionID}" : {
      "get" : {
        "summary" : "Get the company section of an application by ID",
        "description" : "",
        "operationId" : "getCompanySectionByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "editCompanySectionID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EditCompanySectionDataObject"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/corporate/applications/{applicationID}/editCorporateSection/{editCorporateSectionID}" : {
      "get" : {
        "summary" : "Get the corporate section of an application by ID",
        "description" : "",
        "operationId" : "getEditCorporateSectionByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "editCorporateSectionID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EditCorporateDataObject"
            }
          }
        }
      },
      "put" : {
        "summary" : "Perform action on the corporate section of the application",
        "description" : "",
        "operationId" : "editCorporateSection",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "editCorporateSectionID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ActionOnEditCorporateSectionRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetApplicationDetailsResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/corporate/{corporateID}" : {
      "get" : {
        "summary" : "Get details of a specific corporate",
        "description" : "",
        "operationId" : "getCorporateById",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "corporateID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeferredResultCorporate"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/corporate/{corporateID}/companies" : {
      "get" : {
        "summary" : "Get details of all the companies of a specific corporate",
        "description" : "",
        "operationId" : "getAllCompaniesOfCorporate",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "corporateID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeferredResultListCompany"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/corporate/{corporateID}/companies/{companyID}" : {
      "get" : {
        "summary" : "Get details of a specific company of a specific corporate",
        "description" : "",
        "operationId" : "getCompanyOfCorporateById",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "corporateID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "companyID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeferredResultCompany"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/form_factor_products/{formFactorProductID}" : {
      "get" : {
        "summary" : "Get Form Factor Product details by ID",
        "description" : "",
        "operationId" : "getFormFactorProduct",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "formFactorProductID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FormFactorProduct"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/getAllAccountHolders" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get paginated AccountHolders list of type belonging to ifi",
        "description" : "",
        "operationId" : "getAllAccountHolders",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the individual exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAllAccountHoldersResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individualApplications/{applicationID}" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get the application details for an individual by ID",
        "description" : "",
        "operationId" : "getAccountHolder",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the application exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application which is being fetched",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolder"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individualApplications/{applicationID}/pops" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get all the Point of Presence(POP)s of an individual",
        "description" : "",
        "operationId" : "getAccountHolderPops",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account holder POP exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application for which the account holder POP is being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetPOPListResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Create the Point of Presence(POP) of an individual",
        "description" : "",
        "operationId" : "addAccountHolderPop",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the individual's POPs exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application for which the POP is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddAccountHolderPOPRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/POP"
            }
          },
          "201" : {
            "description" : ""
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individualApplications/{applicationID}/pops/{popID}" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get the Point of Presence(POP) of an individual by ID",
        "description" : "",
        "operationId" : "getAccountHolderPopsByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the individual's POP exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application for which the account holder POP is being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        }, {
          "name" : "popID",
          "in" : "path",
          "description" : "ID of the POP whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/POP"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individualApplications/{applicationID}/relationships" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get all relationships of an individual",
        "description" : "",
        "operationId" : "getAccountHolderRelationships",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account holder relationships exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application for which the account holder relationships are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountHolderRelationListResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Create the relationship for an individual",
        "description" : "",
        "operationId" : "addAccountHolderRelationship",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account holder relation is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application for which the account holder relation is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddAccountHolderRelationshipRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolderRelation"
            }
          },
          "201" : {
            "description" : ""
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individualApplications/{applicationID}/relationships/{relationshipID}" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get a specific individual's relationship by ID",
        "description" : "",
        "operationId" : "getAccountHolderRelationshipByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account holder relationship exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application for which the account holder relationship is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        }, {
          "name" : "relationshipID",
          "in" : "path",
          "description" : "ID of the relationship whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolderRelation"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individualApplications/{applicationID}/vectors" : {
      "post" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Create the vector for an individual",
        "description" : "",
        "operationId" : "addAccountHolderVector",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account holder vector is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application for which the account holder vector is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddAccountHolderVectorRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolderVector"
            }
          },
          "201" : {
            "description" : ""
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individualApplications/{applicationID}/vectors/{vectorID}" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get the vector of an individual by ID",
        "description" : "",
        "operationId" : "getAccountHolderVector",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account holder",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application for which the account holder vector is being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        }, {
          "name" : "vectorID",
          "in" : "path",
          "description" : "ID of the vector whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolderVector"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individualByVector/{vectorType}/{vectorValue}" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "operationId" : "getAccountHolderByVector",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account holder",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "vectorType",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "vectorValue",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolder"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get details of an individual by ID",
        "description" : "",
        "operationId" : "getAccountHolders",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the individual exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolder"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/accounts" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get all accounts of an individual",
        "description" : "",
        "operationId" : "getAccounts",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the accounts exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual whose accounts are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountListResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaries" : {
      "get" : {
        "summary" : "Get all the beneficiaries of an individual",
        "description" : "",
        "operationId" : "getBeneficiaries",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary details are being retrieved",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiaries list are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryListResponse"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new beneficiary of an individual",
        "description" : "",
        "operationId" : "createBeneficiary",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateBeneficiaryRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Beneficiary"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaries/{beneficiaryID}" : {
      "get" : {
        "summary" : "Get details of a beneficiary by ID",
        "description" : "",
        "operationId" : "getBeneficiaryByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Beneficiary"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update a beneficiary of an individual",
        "description" : "",
        "operationId" : "updateBeneficiary",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary which is being updated belonging to an individual",
          "required" : true,
          "type" : "string",
          "x-example" : "f0e68249-aed0-4359-9df2-a89a350567e9"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateBeneficiaryRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Beneficiary"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a beneficiary of an individual",
        "description" : "",
        "operationId" : "deleteBeneficiary",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary which is being updated belonging to an individual",
          "required" : true,
          "type" : "string",
          "x-example" : "f0e68249-aed0-4359-9df2-a89a350567e9"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Beneficiary"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaries/{beneficiaryID}/accounts" : {
      "get" : {
        "summary" : "Get all the accounts of a beneficiary",
        "description" : "",
        "operationId" : "getBeneficiaryAccounts",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary accounts are being retrieved",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary accounts are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryAccountListResponse"
            }
          }
        }
      },
      "post" : {
        "summary" : "Creation of a beneficiary account",
        "description" : "",
        "operationId" : "createBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary account is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary account is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddBeneficiaryAccountForBeneficiaryRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryAccount"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaries/{beneficiaryID}/accounts/{accountID}" : {
      "get" : {
        "summary" : "Get details of a specific beneficiary account of an individual's beneficiary ",
        "description" : "",
        "operationId" : "getBeneficiaryAccountByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary account being retrieved exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary account being retrieved exists",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary whose beneficiary account details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the beneficiary account whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryAccount"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaries/{beneficiaryID}/accounts/{accountID}/transfers" : {
      "post" : {
        "summary" : "Perform transfer to a beneficiary account of an individual's beneficiary",
        "description" : "",
        "operationId" : "transferToBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary transfer is being performed",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual who is performing the beneficiary transfer",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary to whom the transfer is being performed",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BeneficiaryAccountTransactionRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryTransactionResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaries/{beneficiaryID}/accounts/{beneficiaryAccountID}" : {
      "put" : {
        "summary" : "Update of a beneficiary account",
        "description" : "",
        "operationId" : "updateBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary account is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary account is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "beneficaryAccountId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateBeneficiaryAccountRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryAccount"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete of a beneficiary account",
        "description" : "",
        "operationId" : "deleteBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary account is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary account is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "beneficiaryAccountID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryAccount"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaries/{beneficiaryID}/transfers" : {
      "post" : {
        "summary" : "Perform transfer to an individual's beneficiary's default account",
        "description" : "",
        "operationId" : "transferToDefaultBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary transfer is being performed",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual who is performing the beneficiary transfer",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary to whom the transfer is being performed",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BeneficiaryTransactionRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryTransactionResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaryTransfers" : {
      "get" : {
        "summary" : "Get all the beneficiary transfers of an individual",
        "description" : "",
        "operationId" : "getAllBeneficiaryTransfers",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary whose transfers are being retrieved",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary transfers are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetBeneficiaryTransactionListResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaryTransfers/{transferID}" : {
      "get" : {
        "summary" : "Get the details of a transfer by ID",
        "description" : "",
        "operationId" : "getBeneficiaryTransferByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary transfer exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary transfer details are being fetched",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "transferID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryTransaction"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/ledger/createCoa" : {
      "post" : {
        "summary" : "Create Coa",
        "description" : "",
        "operationId" : "createCoA",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CreateCoaResponsePayload"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/ledger/createCoaNode" : {
      "post" : {
        "summary" : "Create Coa node",
        "description" : "",
        "operationId" : "createCoANode",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CreateCoaNodeResponsePayload"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/ledger/createPolicy" : {
      "post" : {
        "summary" : "Create Policy",
        "description" : "",
        "operationId" : "createPolicy",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreatePolicyRequestPayload"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CreatePolicyResponsePayload"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/ledger/getAggregateExpressionList" : {
      "get" : {
        "summary" : "get All Aggregation Expressions",
        "description" : "",
        "operationId" : "getAggregateExpressionList",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAggregateExpressionListResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/ledger/getAllCoas" : {
      "get" : {
        "summary" : "Get All Coas",
        "description" : "",
        "operationId" : "getAllCoas",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAllCoAsResponsePayload"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/ledger/getAllTransactionCategories" : {
      "get" : {
        "summary" : "get All Transaction Categories",
        "description" : "",
        "operationId" : "getAllTransactionCategories",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAllTxnCategoriesResponsePayload"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/ledger/getCalender" : {
      "get" : {
        "summary" : "Get Calender",
        "description" : "",
        "operationId" : "getCalendar",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetCalendarResponsePayload"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/ledger/getPolicies" : {
      "get" : {
        "summary" : "get Policies",
        "description" : "",
        "operationId" : "getPolicies",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetPoliciesResponsePayload"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/ledger/getPolicy" : {
      "get" : {
        "summary" : "get Policy",
        "description" : "",
        "operationId" : "getPolicy",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetPolicyResponsePayload"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/ledger/replacePolicy" : {
      "post" : {
        "summary" : "Replace Policy",
        "description" : "",
        "operationId" : "replacePolicy",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ReplacePolicyRequestPayload"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ReplacePolicyResponsePayload"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/ledger/updatePolicyState" : {
      "post" : {
        "summary" : "Replace Policy",
        "description" : "",
        "operationId" : "updatePolicyState",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdatePolicyStateRequestPayload"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EmptyPayload"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/payment_products/{paymentProductID}" : {
      "get" : {
        "summary" : "Get Payment Product details by ID",
        "description" : "",
        "operationId" : "getPaymentProduct",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "paymentProductID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PaymentProduct"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/productFamilies/{productFamilyID}/products" : {
      "get" : {
        "summary" : "Get Products by productFamilyID",
        "description" : "",
        "operationId" : "getProducts",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "productFamilyID",
          "in" : "path",
          "description" : "ProductFamilyID of required products",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Name of product",
          "required" : false,
          "type" : "string",
          "x-example" : "test"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "No of products needed in response",
          "required" : true,
          "type" : "integer",
          "format" : "int32",
          "x-example" : 10
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "description" : "Page number for products needed in response",
          "required" : true,
          "type" : "integer",
          "format" : "int32",
          "x-example" : "test"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/productFamilies/{productFamilyID}/programs" : {
      "get" : {
        "summary" : "Get programs by productFamilyID",
        "description" : "",
        "operationId" : "getPrograms",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "productFamilyID",
          "in" : "path",
          "description" : "ProductFamilyID of required programs",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Name of program",
          "required" : false,
          "type" : "string",
          "x-example" : "test"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "No of programs needed in response",
          "required" : true,
          "type" : "integer",
          "format" : "int32",
          "x-example" : 10
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "description" : "Page number for programs needed in response",
          "required" : true,
          "type" : "integer",
          "format" : "int32",
          "x-example" : "test"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/resource_products/{resourceProductID}" : {
      "get" : {
        "summary" : "Get Resource Product details by ID",
        "description" : "",
        "operationId" : "getResourceProduct",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resourceProductID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ResourceProduct"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/resource_products/{resourceProductID}/resources/list" : {
      "post" : {
        "operationId" : "filterResourceProductBasedResources",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resourceProductID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Builder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ListResourceResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/resources/{resourceID}" : {
      "get" : {
        "summary" : "Get resource details by ID",
        "description" : "",
        "operationId" : "getResource",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resourceID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          }
        }
      },
      "patch" : {
        "summary" : "Change the resource status",
        "description" : "",
        "operationId" : "updateResource",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resourceID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Builder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/resources/{resourceID}/form_factors/{formFactorID}" : {
      "get" : {
        "summary" : "Get form factor details by ID",
        "description" : "",
        "operationId" : "getFormFactor",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resourceID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "formFactorID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FormFactor"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/resources/{resourceID}/form_factors/{formfactorID}" : {
      "patch" : {
        "summary" : "Change the resource linked form factor status",
        "description" : "",
        "operationId" : "updateResourceLinkedFormFactor",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resourceID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "formfactorID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Builder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FormFactor"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/resources/{resourceID}/target" : {
      "patch" : {
        "summary" : "Change the resource target account",
        "description" : "",
        "operationId" : "updateResourceTarget",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resourceID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Builder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/transfers" : {
      "post" : {
        "tags" : [ "Account Management" ],
        "summary" : "Transfer from one account to another",
        "description" : "",
        "operationId" : "transfer",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account transfer is being performed",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TransferRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransferResponse"
            }
          }
        }
      }
    },
    "/api/v1/support/ifi/{ifiID}/individuals/{individualID}/dob" : {
      "post" : {
        "tags" : [ "SupportCentre" ],
        "operationId" : "updateAccountHolderDob",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "individualID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "dob",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "format" : "date-time"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolder"
            }
          }
        }
      }
    },
    "/api/v1/support/ifi/{ifiID}/individuals/{individualID}/gender/{gender}" : {
      "post" : {
        "tags" : [ "SupportCentre" ],
        "operationId" : "updateAccountHolderGender",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "individualID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "gender",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolder"
            }
          }
        }
      }
    },
    "/api/v1/support/ifi/{ifiID}/individuals/{individualID}/name/{accountHolderName}" : {
      "post" : {
        "tags" : [ "SupportCentre" ],
        "operationId" : "updateAccountHolderName",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "individualID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "accountHolderName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolder"
            }
          }
        }
      }
    },
    "/health" : {
      "get" : {
        "operationId" : "healthCheck",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/version" : {
      "get" : {
        "operationId" : "version",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "Accessor" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountHolderID" : {
          "type" : "string"
        },
        "accountID" : {
          "type" : "string"
        },
        "transactionPolicyIDs" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "status" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "Account" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "vectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountVector"
          }
        },
        "accessors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Accessor"
          }
        },
        "relationships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountRelation"
          }
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ownerAccountHolderID" : {
          "type" : "string"
        },
        "accountProviderID" : {
          "type" : "string"
        },
        "cardID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "productFamilyID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "productID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "programIDs" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "ledgerID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "AccountHolder" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "requestID" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountHolderProviderID" : {
          "type" : "string"
        },
        "vectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountHolderVector"
          }
        },
        "type" : {
          "type" : "string",
          "enum" : [ "REAL", "LEGAL", "HEADLESS" ]
        },
        "status" : {
          "type" : "string"
        },
        "salutation" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "profilePicURL" : {
          "type" : "string"
        },
        "dob" : {
          "type" : "string",
          "format" : "date-time"
        },
        "gender" : {
          "type" : "string"
        },
        "mothersMaidenName" : {
          "type" : "string"
        },
        "pops" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/POP"
          }
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "kycstatus" : {
          "$ref" : "#/definitions/KYCStatus"
        }
      }
    },
    "AccountHolderRelation" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountHolderID" : {
          "type" : "string"
        },
        "relatedAccountHolderID" : {
          "type" : "string"
        },
        "relationshipType" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "AccountHolderVector" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "accountHolderID" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "AccountInfo" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "vectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountVector"
          }
        },
        "accessors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Accessor"
          }
        },
        "relationships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountRelation"
          }
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ownerAccountHolderID" : {
          "type" : "string"
        },
        "accountProviderID" : {
          "type" : "string"
        },
        "cardID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "productFamilyID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "productFamilyName" : {
          "type" : "string"
        },
        "productID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "productName" : {
          "type" : "string"
        },
        "programIDs" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "balance" : {
          "type" : "integer",
          "format" : "int64"
        },
        "currency" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "accountingType" : {
          "type" : "string",
          "enum" : [ "ASSET", "LIABILITY", "INCOME", "EXPENSE", "EQUITY" ]
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "AccountRelation" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountID" : {
          "type" : "string"
        },
        "relatedAccountID" : {
          "type" : "string"
        },
        "relationshipType" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "AccountTransaction" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "accountID" : {
          "type" : "string"
        },
        "ledgerID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "transactionID" : {
          "type" : "string"
        },
        "reversedTransactionID" : {
          "type" : "string"
        },
        "reversalTransactionIDs" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "previousBalance" : {
          "type" : "integer",
          "format" : "int64"
        },
        "newBalance" : {
          "type" : "integer",
          "format" : "int64"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int64"
        },
        "amount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "currency" : {
          "type" : "string"
        },
        "recordType" : {
          "type" : "string"
        },
        "remarks" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "AccountVector" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountID" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "ActionOnAddCompanySectionRequest" : {
      "type" : "object",
      "required" : [ "opsActionOnSection", "remarks", "type" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Contract Change",
          "description" : "Name of the action being performed"
        },
        "logoURL" : {
          "type" : "string",
          "example" : "https://abc.com/logo.png",
          "description" : "URL for the logo of the company"
        },
        "type" : {
          "type" : "string",
          "example" : "PRIVATE_LIMITED",
          "description" : "Identification for the type of company which is being created",
          "enum" : [ "LLP", "SOLE_PROPRIETOR", "TRUST", "PRIVATE_LIMITED", "PARTNER_FIRM", "PUBLIC", "NPO_NGO", "BRANCH_OFFICE", "LIAISON_OFFICE", "PUBLIC_COMPANY" ]
        },
        "pointsOfPresence" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/POP"
          }
        },
        "kycStatus" : {
          "$ref" : "#/definitions/KYCStatus"
        },
        "attributes" : {
          "type" : "object",
          "example" : "myCode : ABC",
          "description" : "Additional information for this entity",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "remarks" : {
          "type" : "string",
          "example" : "Application looks good",
          "description" : "Additional remarks for the executing the action on the application"
        },
        "opsActionOnSection" : {
          "type" : "string",
          "example" : "SAVE",
          "description" : "Action to be performed on this specific section",
          "enum" : [ "SAVE", "MARK_AS_COMPLETE", "REJECT", "ACCEPT" ]
        }
      }
    },
    "ActionOnAddCorporateSectionRequest" : {
      "type" : "object",
      "required" : [ "opsActionOnSection", "remarks" ],
      "properties" : {
        "corporateName" : {
          "type" : "string",
          "example" : "My Company",
          "description" : "Name of the Corporate which needs to be added"
        },
        "agreementNumber" : {
          "type" : "string",
          "example" : "123456",
          "description" : "Number of the agreement between the corporate and the issuer/VBO"
        },
        "agreementURL" : {
          "type" : "string",
          "example" : "abc.com/agreement",
          "description" : "URL of the agreement between the corporate and the issuer/VBO"
        },
        "agreementStartDate" : {
          "type" : "string",
          "example" : "01/01/2019",
          "description" : "Date from which the validity of the agreement starts"
        },
        "agreementEndDate" : {
          "type" : "string",
          "example" : "01/01/2019",
          "description" : "Date on which the validity of the agreement ends"
        },
        "signingAuthority" : {
          "$ref" : "#/definitions/SigningAuthority"
        },
        "attributes" : {
          "type" : "object",
          "example" : "myCode : ABC",
          "description" : "Additional information for this entity",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "remarks" : {
          "type" : "string",
          "example" : "Application looks good",
          "description" : "Additional remarks for the executing the action on the application"
        },
        "opsActionOnSection" : {
          "type" : "string",
          "example" : "SAVE",
          "description" : "Action to be performed on this specific section",
          "enum" : [ "SAVE", "MARK_AS_COMPLETE", "REJECT", "ACCEPT" ]
        }
      }
    },
    "ActionOnApplicationRequest" : {
      "type" : "object",
      "required" : [ "moderatedApplicationType", "remarks" ],
      "properties" : {
        "moderatedApplicationType" : {
          "type" : "string",
          "example" : "SIGN_UP",
          "description" : "Type of the application on which the action is to be performed",
          "enum" : [ "SIGN_UP", "EDIT_CORPORATE" ]
        },
        "remarks" : {
          "type" : "string",
          "example" : "Application looks good",
          "description" : "Additional remarks for the executing the action on the application"
        }
      }
    },
    "ActionOnEditCompanySectionRequest" : {
      "type" : "object",
      "required" : [ "companyId", "opsActionOnSection", "remarks", "type" ],
      "properties" : {
        "companyId" : {
          "type" : "string",
          "example" : "ee64c930-c06f-49cb-9443-84b132b9d4e2",
          "description" : "Identifier of the company which is being acted upon"
        },
        "name" : {
          "type" : "string",
          "example" : "Contract Change",
          "description" : "Name of the action being performed"
        },
        "logoURL" : {
          "type" : "string",
          "example" : "https://abc.com/logo.png",
          "description" : "URL for the logo of the company"
        },
        "shortCode" : {
          "type" : "string",
          "example" : "ABCXYZ",
          "description" : "Short code to be used as identifier for the company"
        },
        "type" : {
          "type" : "string",
          "example" : "PRIVATE_LIMITED",
          "description" : "Identification for the type of company which is being created",
          "enum" : [ "LLP", "SOLE_PROPRIETOR", "TRUST", "PRIVATE_LIMITED", "PARTNER_FIRM", "PUBLIC", "NPO_NGO", "BRANCH_OFFICE", "LIAISON_OFFICE", "PUBLIC_COMPANY" ]
        },
        "pointsOfPresence" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/POP"
          }
        },
        "kycStatus" : {
          "$ref" : "#/definitions/KYCStatus"
        },
        "attributes" : {
          "type" : "object",
          "example" : "myCode : ABC",
          "description" : "Additional information for this entity",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "remarks" : {
          "type" : "string",
          "example" : "Application looks good",
          "description" : "Additional remarks for the executing the action on the application"
        },
        "opsActionOnSection" : {
          "type" : "string",
          "example" : "SAVE",
          "description" : "Action to be performed on this specific section",
          "enum" : [ "SAVE", "MARK_AS_COMPLETE", "REJECT", "ACCEPT" ]
        }
      }
    },
    "ActionOnEditCorporateSectionRequest" : {
      "type" : "object",
      "required" : [ "opsActionOnSection", "remarks" ],
      "properties" : {
        "corporateId" : {
          "type" : "string",
          "example" : "4baf7564-f2c4-4300-b27b-cdee926146e6",
          "description" : "Identifier of the corporate which is being edited"
        },
        "name" : {
          "type" : "string",
          "example" : "Contract Change",
          "description" : "Name of the action being performed"
        },
        "agreementNumber" : {
          "type" : "string",
          "example" : "123456",
          "description" : "Number of the agreement between the corporate and the issuer/VBO"
        },
        "agreementURL" : {
          "type" : "string",
          "example" : "abc.com/agreement",
          "description" : "URL of the agreement between the corporate and the issuer/VBO"
        },
        "agreementStartDate" : {
          "type" : "string",
          "example" : "01/01/2019",
          "description" : "Date from which the validity of the agreement starts"
        },
        "agreementEndDate" : {
          "type" : "string",
          "example" : "01/01/2019",
          "description" : "Date on which the validity of the agreement ends"
        },
        "signingAuthority" : {
          "$ref" : "#/definitions/SigningAuthority"
        },
        "attributes" : {
          "type" : "object",
          "example" : "myCode : ABC",
          "description" : "Additional information for this entity",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "remarks" : {
          "type" : "string",
          "example" : "Application looks good",
          "description" : "Additional remarks for the executing the action on the application"
        },
        "opsActionOnSection" : {
          "type" : "string",
          "example" : "SAVE",
          "description" : "Action to be performed on this specific section",
          "enum" : [ "SAVE", "MARK_AS_COMPLETE", "REJECT", "ACCEPT" ]
        }
      }
    },
    "ActionOnSectionResponse" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "string",
          "example" : "TEMP_SUBMITTED",
          "description" : "Current status of the section after action is perfromed"
        }
      }
    },
    "AddAccountAccessorRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountID" : {
          "type" : "string"
        },
        "accountHolderID" : {
          "type" : "string"
        },
        "transactionPolicyIDs" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "status" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "AddAccountHolderPOPRequest" : {
      "type" : "object",
      "properties" : {
        "accountHolderID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "ID of the account holder for whom the account belongs"
        },
        "label" : {
          "type" : "string",
          "example" : "My-Home",
          "description" : "ID of the account holder for whom the account belongs"
        },
        "address" : {
          "$ref" : "#/definitions/Address"
        },
        "contactList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Contact"
          }
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which you would like to provide",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "AddAccountHolderRelationshipRequest" : {
      "type" : "object",
      "properties" : {
        "relatedAccountHolderID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "ID of the account holder with whom the relationship is being established"
        },
        "relationshipType" : {
          "type" : "string",
          "example" : "Brother",
          "description" : "Definition of the relationship type with the related Account Holder"
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which you would like to provide",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "AddAccountHolderVectorRequest" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "example" : "PhoneNumber",
          "description" : "Type of the vector being defined for the account holder"
        },
        "value" : {
          "type" : "string",
          "example" : "+911234567890",
          "description" : "Value of the vector being defined for the account holder"
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which you would like to provide",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "verified" : {
          "type" : "boolean"
        }
      }
    },
    "AddAccountProductInBundleRequest" : {
      "type" : "object",
      "properties" : {
        "accountProduct" : {
          "description" : "The account product which will be a part of the bundle",
          "$ref" : "#/definitions/ProductInfoRequest"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "AddAccountRelationRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountID" : {
          "type" : "string"
        },
        "relationshipType" : {
          "type" : "string"
        },
        "relatedAccountID" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "AddAccountVectorRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountID" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "AddBeneficiaryAccountForBeneficiaryRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string"
        },
        "beneficiaryID" : {
          "type" : "string"
        },
        "parentAccountHolderID" : {
          "type" : "string"
        },
        "nickname" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "accountInfo" : {
          "$ref" : "#/definitions/BeneficiaryAccountInfo"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "verified" : {
          "type" : "boolean"
        },
        "default" : {
          "type" : "boolean"
        }
      }
    },
    "AddBundleRequest" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Savings Bundle",
          "description" : "The name which would be assigned to the bundle"
        },
        "shortCode" : {
          "type" : "string",
          "example" : "SVNG",
          "description" : "The short code to identify the bundle"
        },
        "picURL" : {
          "type" : "string",
          "description" : "The URL to get the bundle's display pic"
        },
        "description" : {
          "type" : "string",
          "example" : "Bundle related to savings accounts. Consists of a savings account product and a related debit card",
          "description" : "The detailed description of the bundle"
        },
        "accountProducts" : {
          "type" : "array",
          "description" : "The list of account products which will be a part of the bundle",
          "items" : {
            "$ref" : "#/definitions/ProductInfoRequest"
          }
        },
        "paymentProducts" : {
          "type" : "array",
          "description" : "The list of payment products which will be a part of the bundle",
          "items" : {
            "$ref" : "#/definitions/ProductInfoRequest"
          }
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which is specific to the bundle",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "AddCompanyDataObject" : {
      "type" : "object",
      "required" : [ "remarks", "sectionStatus", "type" ],
      "properties" : {
        "sectionId" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 143,
          "description" : "Identifier of the specific section"
        },
        "sectionType" : {
          "type" : "string",
          "example" : "ADD_COMPANY",
          "description" : "Identifier of the specific section",
          "enum" : [ "ADD_COMPANY", "ADD_CORPORATE", "EDIT_CORPORATE", "EDIT_COMPANY" ]
        },
        "entityId" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string",
          "example" : "Contract Change",
          "description" : "Name of the action being performed"
        },
        "logoURL" : {
          "type" : "string",
          "example" : "https://abc.com/logo.png",
          "description" : "URL for the logo of the company"
        },
        "type" : {
          "type" : "string",
          "example" : "PRIVATE_LIMITED",
          "description" : "Identification for the type of company which is being created",
          "enum" : [ "LLP", "SOLE_PROPRIETOR", "TRUST", "PRIVATE_LIMITED", "PARTNER_FIRM", "PUBLIC", "NPO_NGO", "BRANCH_OFFICE", "LIAISON_OFFICE", "PUBLIC_COMPANY" ]
        },
        "pointsOfPresence" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/POP"
          }
        },
        "kycStatus" : {
          "$ref" : "#/definitions/KYCStatus"
        },
        "attributes" : {
          "type" : "object",
          "example" : "myCode : ABC",
          "description" : "Additional information for this entity",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "sectionStatus" : {
          "type" : "string",
          "example" : "IN_REVIEW",
          "description" : "Current status of the section",
          "enum" : [ "NEW", "PENDING", "TEMP_COMPLETED", "APPROVED", "REJECTED", "IN_REVIEW", "ACCEPTED" ]
        },
        "createdOn" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "01/01/2019",
          "description" : "Date on which this entity was created"
        },
        "updatedOn" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "01/01/2019",
          "description" : "Latest date on which this entity was updated"
        },
        "remarks" : {
          "type" : "string",
          "example" : "Application looks good",
          "description" : "Additional remarks for the executing the action on the application"
        },
        "revisionId" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "AddCorporateDataObject" : {
      "type" : "object",
      "required" : [ "remarks", "sectionStatus" ],
      "properties" : {
        "sectionId" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 143,
          "description" : "Identifier of the specific section"
        },
        "sectionType" : {
          "type" : "string",
          "example" : "ADD_COMPANY",
          "description" : "Identifier of the specific section",
          "enum" : [ "ADD_COMPANY", "ADD_CORPORATE", "EDIT_CORPORATE", "EDIT_COMPANY" ]
        },
        "entityId" : {
          "type" : "string"
        },
        "revisionId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "corporateName" : {
          "type" : "string"
        },
        "agreementNumber" : {
          "type" : "string",
          "example" : "123456",
          "description" : "Number of the agreement between the corporate and the issuer/VBO"
        },
        "agreementURL" : {
          "type" : "string",
          "example" : "abc.com/agreement",
          "description" : "URL of the agreement between the corporate and the issuer/VBO"
        },
        "agreementStartDate" : {
          "type" : "string",
          "example" : "01/01/2019",
          "description" : "Date from which the validity of the agreement starts"
        },
        "agreementEndDate" : {
          "type" : "string",
          "example" : "01/01/2019",
          "description" : "Date on which the validity of the agreement ends"
        },
        "signingAuthority" : {
          "$ref" : "#/definitions/SigningAuthority"
        },
        "attributes" : {
          "type" : "object",
          "example" : "myCode : ABC",
          "description" : "Additional information for this entity",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "sectionStatus" : {
          "type" : "string",
          "example" : "IN_REVIEW",
          "description" : "Current status of the section",
          "enum" : [ "NEW", "PENDING", "TEMP_COMPLETED", "APPROVED", "REJECTED", "IN_REVIEW", "ACCEPTED" ]
        },
        "ifiId" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 123456,
          "description" : "ID of the IFI (on-boarded organization) under which the corporate exists"
        },
        "createdOn" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "01/01/2019",
          "description" : "Date on which this entity was created"
        },
        "updatedOn" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "01/01/2019",
          "description" : "Latest date on which this entity was updated"
        },
        "remarks" : {
          "type" : "string",
          "example" : "Application looks good",
          "description" : "Additional remarks for adding the corporate data"
        }
      }
    },
    "AddPaymentProductInBundleRequest" : {
      "type" : "object",
      "properties" : {
        "paymentProduct" : {
          "description" : "The payment product which will be a part of the bundle",
          "$ref" : "#/definitions/ProductInfoRequest"
        }
      }
    },
    "Address" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "accountHolderID" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "tag" : {
          "type" : "string"
        },
        "line1" : {
          "type" : "string"
        },
        "line2" : {
          "type" : "string"
        },
        "city" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "postCode" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "accountHolderVectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountHolderVector"
          }
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DELETED" ]
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "default" : {
          "type" : "boolean"
        }
      }
    },
    "AggregateExpression" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifiId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "expression" : {
          "type" : "string"
        },
        "createdAt" : {
          "type" : "integer",
          "format" : "int64"
        },
        "updatedAt" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Beneficiary" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "requestID" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountHolderID" : {
          "type" : "string"
        },
        "salutation" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "gender" : {
          "type" : "string"
        },
        "profilePicURL" : {
          "type" : "string"
        },
        "relationship" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "REAL", "LEGAL", "HEADLESS" ]
        },
        "dob" : {
          "type" : "string",
          "format" : "date-time"
        },
        "vectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BeneficiaryVector"
          }
        },
        "accounts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BeneficiaryAccount"
          }
        },
        "customFields" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "BeneficiaryAccount" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string"
        },
        "beneficiaryID" : {
          "type" : "string"
        },
        "parentAccountHolderID" : {
          "type" : "string"
        },
        "nickname" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "accountInfo" : {
          "$ref" : "#/definitions/BeneficiaryAccountInfo"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "verified" : {
          "type" : "boolean"
        },
        "default" : {
          "type" : "boolean"
        }
      }
    },
    "BeneficiaryAccountInfo" : {
      "type" : "object",
      "properties" : {
        "accountNumber" : {
          "type" : "string"
        },
        "accountProvider" : {
          "type" : "string"
        },
        "nameAtAccountProvider" : {
          "type" : "string"
        },
        "routingCode" : {
          "type" : "string"
        },
        "accountType" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "BeneficiaryAccountListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "beneficiaryAccountList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BeneficiaryAccount"
          }
        }
      }
    },
    "BeneficiaryAccountTransactionRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "requestID" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "currency" : {
          "type" : "string"
        },
        "amount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "transactionCode" : {
          "type" : "string"
        },
        "debitAccountID" : {
          "type" : "string"
        },
        "debitAccountHolderID" : {
          "type" : "string"
        },
        "beneficiaryID" : {
          "type" : "string"
        },
        "beneficiaryAccountID" : {
          "type" : "string"
        },
        "transactionTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "remarks" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "BeneficiaryListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "beneficiaryList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Beneficiary"
          }
        }
      }
    },
    "BeneficiaryTransaction" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "requestID" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "amount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "currency" : {
          "type" : "string"
        },
        "transactionCode" : {
          "type" : "string"
        },
        "debitAccountID" : {
          "type" : "string"
        },
        "debitAccountHolderID" : {
          "type" : "string"
        },
        "beneficiaryID" : {
          "type" : "string"
        },
        "beneficiaryAccountID" : {
          "type" : "string"
        },
        "transactionTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "SUCCESS", "FAILED" ]
        },
        "transactionID" : {
          "type" : "string"
        },
        "remarks" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "BeneficiaryTransactionRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "requestID" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "currency" : {
          "type" : "string"
        },
        "amount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "transactionCode" : {
          "type" : "string"
        },
        "debitAccountHolderID" : {
          "type" : "string"
        },
        "debitAccountID" : {
          "type" : "string"
        },
        "beneficiaryID" : {
          "type" : "string"
        },
        "transactionTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "remarks" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "BeneficiaryTransactionResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "requestID" : {
          "type" : "string"
        },
        "transactionID" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "BeneficiaryVector" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "beneficiaryID" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "Builder" : {
      "type" : "object",
      "properties" : {
        "tenantID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "object" : {
          "$ref" : "#/definitions/JID"
        }
      }
    },
    "BundleResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "vboID" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "accountProducts" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/ProductInfoResponse"
          }
        },
        "paymentProducts" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/ProductInfoResponse"
          }
        },
        "status" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "shortCode" : {
          "type" : "string"
        },
        "picURL" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "CalendarInfo" : {
      "type" : "object",
      "properties" : {
        "weekStartOffset" : {
          "type" : "integer",
          "format" : "int32"
        },
        "yearStartDay" : {
          "type" : "integer",
          "format" : "int32"
        },
        "yearStartMonth" : {
          "type" : "integer",
          "format" : "int32"
        },
        "timeZone" : {
          "type" : "string"
        },
        "ifiId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "calendarId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "CardBinRange" : {
      "type" : "object",
      "properties" : {
        "bin" : {
          "type" : "string"
        },
        "range" : {
          "type" : "string"
        }
      }
    },
    "CardView" : {
      "type" : "object",
      "properties" : {
        "account" : {
          "$ref" : "#/definitions/Account"
        },
        "cardID" : {
          "type" : "string"
        },
        "crn" : {
          "type" : "string"
        },
        "cardType" : {
          "type" : "string"
        },
        "maskedPan" : {
          "type" : "string"
        },
        "cardStatus" : {
          "type" : "string"
        },
        "associatedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "orderDetails" : {
          "$ref" : "#/definitions/OrderDetails"
        },
        "tenantAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "binRange" : {
          "$ref" : "#/definitions/CardBinRange"
        },
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "sensitiveView" : {
          "$ref" : "#/definitions/SensitiveCardView"
        }
      }
    },
    "Channel" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "paymentCodes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ACTIVE", "INACTIVE", "DELETED" ]
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "CoAConfig" : {
      "type" : "object",
      "properties" : {
        "coaId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ifiId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "coaDescription" : {
          "type" : "string"
        },
        "coaName" : {
          "type" : "string"
        },
        "coaDepth" : {
          "type" : "integer",
          "format" : "int32"
        },
        "calendarId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "currency" : {
          "type" : "string"
        }
      }
    },
    "Coa" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "CoaNode" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "Company" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "corporateId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ifiId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "companyLogoURL" : {
          "type" : "string"
        },
        "pointsOfPresence" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/POP"
          }
        },
        "kycStatus" : {
          "$ref" : "#/definitions/KYCStatus"
        },
        "companyType" : {
          "type" : "string",
          "enum" : [ "LLP", "SOLE_PROPRIETOR", "TRUST", "PRIVATE_LIMITED", "PARTNER_FIRM", "PUBLIC", "NPO_NGO", "BRANCH_OFFICE", "LIAISON_OFFICE", "PUBLIC_COMPANY" ]
        },
        "createdOn" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedOn" : {
          "type" : "string",
          "format" : "date-time"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "Contact" : {
      "type" : "object",
      "properties" : {
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "vectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountHolderVector"
          }
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "CreateAccountHolderApplicationRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "formID" : {
          "type" : "string"
        },
        "spoolID" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "individualType" : {
          "type" : "string"
        },
        "applicationType" : {
          "type" : "string",
          "enum" : [ "KYC", "CREATE_ACCOUNT_HOLDER", "EDIT_ACCOUNT_HOLDER" ]
        },
        "individualID" : {
          "type" : "string"
        },
        "salutation" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "profilePicURL" : {
          "type" : "string"
        },
        "dob" : {
          "type" : "string",
          "format" : "date"
        },
        "gender" : {
          "type" : "string"
        },
        "mothersMaidenName" : {
          "type" : "string"
        },
        "kycDetails" : {
          "$ref" : "#/definitions/KYCDetails"
        },
        "vectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Vector"
          }
        },
        "pops" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/POP"
          }
        },
        "customFields" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "source" : {
          "type" : "string"
        }
      }
    },
    "CreateAccountHolderRequest" : {
      "type" : "object",
      "properties" : {
        "vectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountHolderVector"
          }
        },
        "salutation" : {
          "type" : "string",
          "example" : "Mrs",
          "description" : "Salutation of the account holder being created"
        },
        "firstName" : {
          "type" : "string",
          "example" : "Chandler",
          "description" : "First name of the account holder being created"
        },
        "middleName" : {
          "type" : "string",
          "example" : "Muriel",
          "description" : "Middle name of the account holder being created"
        },
        "lastName" : {
          "type" : "string",
          "example" : "Bing",
          "description" : "Last name of the account holder being created"
        },
        "profilePicURL" : {
          "type" : "string",
          "example" : "http://abc.com/test",
          "description" : "URL  of the pic of the account holder being created"
        },
        "dob" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "01/01/1990",
          "description" : "Date of Birth of the account holder being created"
        },
        "gender" : {
          "type" : "string",
          "example" : "MALE",
          "description" : "Gender of the account holder being created"
        },
        "mothersMaidenName" : {
          "type" : "string",
          "example" : "Margaret",
          "description" : "Mother's maiden name of the account holder being created"
        }
      }
    },
    "CreateAccountHolderWithAutoApprovalRequest" : {
      "type" : "object",
      "properties" : {
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "formID" : {
          "type" : "string"
        },
        "spoolID" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "individualType" : {
          "type" : "string"
        },
        "salutation" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "profilePicURL" : {
          "type" : "string"
        },
        "dob" : {
          "type" : "string",
          "format" : "date"
        },
        "gender" : {
          "type" : "string"
        },
        "mothersMaidenName" : {
          "type" : "string"
        },
        "kycDetails" : {
          "$ref" : "#/definitions/KYCDetails"
        },
        "vectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Vector"
          }
        },
        "pops" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/POP"
          }
        },
        "customFields" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "source" : {
          "type" : "string"
        }
      }
    },
    "CreateAddCorporateApplicationRequest" : {
      "type" : "object",
      "properties" : {
        "ifiParams" : {
          "$ref" : "#/definitions/JsonObject"
        }
      }
    },
    "CreateApplicationResponse" : {
      "type" : "object",
      "properties" : {
        "applicationId" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 142,
          "description" : "Identifier of the application that has been created"
        },
        "applicationType" : {
          "type" : "string",
          "example" : "SIGN_UP",
          "description" : "Type of the application that has been created",
          "enum" : [ "SIGN_UP", "EDIT_CORPORATE" ]
        }
      }
    },
    "CreateBeneficiaryRequest" : {
      "type" : "object"
    },
    "CreateCardDesignPolicyRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "logo" : {
          "type" : "string"
        },
        "background" : {
          "type" : "string"
        },
        "backgroundExpanded" : {
          "type" : "string"
        },
        "backgroundColor" : {
          "type" : "string"
        },
        "textColor" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED" ]
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "validFrom" : {
          "type" : "string",
          "format" : "date-time"
        },
        "validUntil" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "CreateCoaNodeResponsePayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "nodeId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "CreateCoaResponsePayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "coaId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "rootNodeId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "CreateCouponAccountingPolicyRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "couponName" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "denomination" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "isPartialRedemptionAllowed" : {
          "type" : "boolean"
        },
        "expiryAccount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "validFrom" : {
          "type" : "integer",
          "format" : "int64"
        },
        "validUntil" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "CreateEditCorporateApplicationRequest" : {
      "type" : "object",
      "properties" : {
        "corporateId" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "4baf7564-f2c4-4300-b27b-cdee926146e6",
          "description" : "Identifier of the corporate which is being edited"
        }
      }
    },
    "CreateExtendedProductFamilyRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "productFamily" : {
          "$ref" : "#/definitions/CreateProductFamilyRequest"
        },
        "issuancePolicy" : {
          "$ref" : "#/definitions/CreateIssuancePolicyRequest"
        },
        "transactionPolicyIDs" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "CreateExtendedProductRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "productRequest" : {
          "$ref" : "#/definitions/CreateProductRequest"
        },
        "issuancePolicyRequest" : {
          "$ref" : "#/definitions/CreateIssuancePolicyRequest"
        },
        "couponAccountingPolicyRequest" : {
          "$ref" : "#/definitions/CreateCouponAccountingPolicyRequest"
        },
        "cardDesignPolicyRequest" : {
          "$ref" : "#/definitions/CreateCardDesignPolicyRequest"
        },
        "transactionPolicyIDs" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "CreateIssuancePolicyRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "validFrom" : {
          "type" : "integer",
          "format" : "int64"
        },
        "validUntil" : {
          "type" : "integer",
          "format" : "int64"
        },
        "allowedAccountHolderGroups" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "disAllowedAccountHolderGroups" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "CreatePolicyMappingRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "entityID" : {
          "type" : "string"
        },
        "policyEntityType" : {
          "type" : "string",
          "enum" : [ "PRODUCT_FAMILY", "PRODUCT", "PROGRAM" ]
        },
        "policyID" : {
          "type" : "string"
        },
        "policyType" : {
          "type" : "string",
          "enum" : [ "TRANSACTION_POLICY", "CARD_DESIGN_POLICY", "ISSUANCE_POLICY", "COUPON_ACCOUNTING_POLICY", "NOTIFICATION_POLICY", "FEE_CHARGES_POLICY", "INTEREST_POLICY", "ACCOUNT_DISCOVERY_POLICY" ]
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "CreatePolicyRequestPayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "requestID" : {
          "type" : "string"
        },
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "code" : {
          "type" : "string"
        },
        "desc" : {
          "type" : "string"
        },
        "txnConstraints" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyTxnConstraint"
          }
        },
        "policyTxnRules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyTxnRule"
          }
        },
        "policyBalanceRules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyBalanceRule"
          }
        },
        "policyAggregateRules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyAggregateRule"
          }
        },
        "effectiveFrom" : {
          "type" : "integer",
          "format" : "int64"
        },
        "expiresAt" : {
          "type" : "integer",
          "format" : "int64"
        },
        "policyViolationAction" : {
          "type" : "string",
          "enum" : [ "DECLINE_AND_NOTIFY", "DECLINE", "NOTIFY" ]
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "CreatePolicyResponsePayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "policyVersionID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "policyID" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "CreateProductFamilyRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "coaID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "parentCoaNodeID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountingType" : {
          "type" : "string",
          "enum" : [ "ASSET", "LIABILITY", "INCOME", "EXPENSE", "EQUITY" ]
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "WALLET_BASED", "ACCOUNT_BASED" ]
        },
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "CreateProductRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "coaID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "productFamilyID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "ENABLED", "BLOCKED" ]
        },
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "DeferredResultCompany" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "type" : "object"
        },
        "setOrExpired" : {
          "type" : "boolean"
        }
      }
    },
    "DeferredResultCorporate" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "type" : "object"
        },
        "setOrExpired" : {
          "type" : "boolean"
        }
      }
    },
    "DeferredResultListCompany" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "type" : "object"
        },
        "setOrExpired" : {
          "type" : "boolean"
        }
      }
    },
    "ECDHEncryptedCardPayload" : {
      "type" : "object",
      "properties" : {
        "serverPublicKey" : {
          "type" : "string"
        },
        "encryptedData" : {
          "type" : "string"
        },
        "iv" : {
          "type" : "string"
        }
      }
    },
    "EditCompanySectionDataObject" : {
      "type" : "object",
      "required" : [ "companyId", "remarks", "sectionStatus", "type" ],
      "properties" : {
        "sectionId" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 143,
          "description" : "Identifier of the specific section"
        },
        "sectionType" : {
          "type" : "string",
          "example" : "ADD_COMPANY",
          "description" : "Identifier of the specific section",
          "enum" : [ "ADD_COMPANY", "ADD_CORPORATE", "EDIT_CORPORATE", "EDIT_COMPANY" ]
        },
        "entityId" : {
          "type" : "string"
        },
        "companyId" : {
          "type" : "string",
          "example" : "ee64c930-c06f-49cb-9443-84b132b9d4e2",
          "description" : "Identifier of the company which is being edited"
        },
        "name" : {
          "type" : "string",
          "example" : "Contract Change",
          "description" : "Name of the action being performed"
        },
        "logoURL" : {
          "type" : "string",
          "example" : "https://abc.com/logo.png",
          "description" : "URL for the logo of the company"
        },
        "shortCode" : {
          "type" : "string",
          "example" : "ABCXYZ",
          "description" : "Short code to be used as identifier for the company"
        },
        "type" : {
          "type" : "string",
          "example" : "PRIVATE_LIMITED",
          "description" : "Identification for the type of company which is being edited",
          "enum" : [ "LLP", "SOLE_PROPRIETOR", "TRUST", "PRIVATE_LIMITED", "PARTNER_FIRM", "PUBLIC", "NPO_NGO", "BRANCH_OFFICE", "LIAISON_OFFICE", "PUBLIC_COMPANY" ]
        },
        "pointsOfPresence" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/POP"
          }
        },
        "kycStatus" : {
          "$ref" : "#/definitions/KYCStatus"
        },
        "attributes" : {
          "type" : "object",
          "example" : "myCode : ABC",
          "description" : "Additional information for this entity",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "sectionStatus" : {
          "type" : "string",
          "example" : "IN_REVIEW",
          "description" : "Current status of the section",
          "enum" : [ "EDIT_INITIATED", "PENDING", "TEMP_COMPLETED", "APPROVED", "REJECTED", "IN_REVIEW", "ACCEPTED" ]
        },
        "createdOn" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "01/01/2019",
          "description" : "Date on which this entity was created"
        },
        "updatedOn" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "01/01/2019",
          "description" : "Latest date on which this entity was updated"
        },
        "remarks" : {
          "type" : "string",
          "example" : "Application looks good",
          "description" : "Additional remarks for the executing the action on the application"
        },
        "revisionId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "company" : {
          "$ref" : "#/definitions/Company"
        }
      }
    },
    "EditCorporateDataObject" : {
      "type" : "object",
      "required" : [ "corporateId", "remarks", "sectionStatus" ],
      "properties" : {
        "sectionId" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 143,
          "description" : "Identifier of the specific section"
        },
        "sectionType" : {
          "type" : "string",
          "example" : "ADD_COMPANY",
          "description" : "Identifier of the specific section",
          "enum" : [ "ADD_COMPANY", "ADD_CORPORATE", "EDIT_CORPORATE", "EDIT_COMPANY" ]
        },
        "entityId" : {
          "type" : "string"
        },
        "corporateId" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "4baf7564-f2c4-4300-b27b-cdee926146e6",
          "description" : "Identifier of the corporate which is being edited"
        },
        "revisionId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ifiId" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 123456,
          "description" : "ID of the IFI (on-boarded organization) under which the corporate exists"
        },
        "name" : {
          "type" : "string",
          "example" : "MYCOMPANY",
          "description" : "Name of the corporate"
        },
        "agreementNumber" : {
          "type" : "string",
          "example" : "123456",
          "description" : "Number of the agreement between the corporate and the issuer/VBO"
        },
        "agreementURL" : {
          "type" : "string",
          "example" : "abc.com/agreement",
          "description" : "URL of the agreement between the corporate and the issuer/VBO"
        },
        "agreementStartDate" : {
          "type" : "string",
          "example" : "01/01/2019",
          "description" : "Date from which the validity of the agreement starts"
        },
        "agreementEndDate" : {
          "type" : "string",
          "example" : "01/01/2019",
          "description" : "Date on which the validity of the agreement ends"
        },
        "signingAuthority" : {
          "$ref" : "#/definitions/SigningAuthority"
        },
        "attributes" : {
          "type" : "object",
          "example" : "myCode : ABC",
          "description" : "Additional information for this entity",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "sectionStatus" : {
          "type" : "string",
          "example" : "IN_REVIEW",
          "description" : "Current status of the section",
          "enum" : [ "EDIT_INITIATED", "PENDING", "TEMP_COMPLETED", "APPROVED", "REJECTED", "IN_REVIEW", "ACCEPTED" ]
        },
        "createdOn" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "01/01/2019",
          "description" : "Date on which this entity was created"
        },
        "updatedOn" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "01/01/2019",
          "description" : "Latest date on which this entity was updated"
        },
        "remarks" : {
          "type" : "string",
          "example" : "Application looks good",
          "description" : "Additional remarks for the executing the action on the application"
        }
      }
    },
    "EditIndividualApplicationRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "formID" : {
          "type" : "string"
        },
        "spoolID" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "individualID" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "source" : {
          "type" : "string"
        }
      }
    },
    "EmptyPayload" : {
      "type" : "object"
    },
    "EntityGroup" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "entityType" : {
          "type" : "string",
          "enum" : [ "ACCOUNT", "ACCOUNT_HOLDER", "BENEFICIARY", "BENEFICIARY_ACCOUNT" ]
        },
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "schema" : {
          "$ref" : "#/definitions/JsonObject"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "integer",
          "format" : "int64"
        },
        "modifiedAt" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Expiry" : {
      "type" : "object",
      "properties" : {
        "month" : {
          "type" : "integer",
          "format" : "int32"
        },
        "year" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "FormFactor" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "formFactorProductID" : {
          "type" : "string"
        },
        "formFactorID" : {
          "type" : "string"
        },
        "identityID" : {
          "type" : "string"
        },
        "targetURI" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "policies" : {
          "$ref" : "#/definitions/Policies"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ACTIVE", "INACTIVE", "DELETED" ]
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "FormFactorProduct" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "id" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "policies" : {
          "$ref" : "#/definitions/Policies"
        },
        "provider" : {
          "type" : "string"
        },
        "skuID" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "issuanceStatus" : {
          "type" : "string",
          "enum" : [ "ACTIVE", "INACTIVE", "DELETED" ]
        },
        "paymentStatus" : {
          "type" : "string",
          "enum" : [ "ACTIVE", "INACTIVE", "DELETED" ]
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "GenericCreateApplicationResponse" : {
      "type" : "object",
      "properties" : {
        "applicationID" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 142,
          "description" : "Identifier of the application that has been created"
        },
        "applicationType" : {
          "type" : "string",
          "example" : "SIGN_UP",
          "description" : "Type of the application that has been created",
          "enum" : [ "SIGN_UP", "EDIT_CORPORATE" ]
        }
      }
    },
    "GenericFetchApplicationResponse" : {
      "type" : "object",
      "properties" : {
        "signUpRequests" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        },
        "totalRequestCount" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetAccountAccessorListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "accessors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Accessor"
          }
        }
      }
    },
    "GetAccountBalanceResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "balance" : {
          "type" : "integer",
          "format" : "int64"
        },
        "currency" : {
          "type" : "string"
        },
        "lastTransactionID" : {
          "type" : "string"
        },
        "accountingType" : {
          "type" : "string",
          "enum" : [ "ASSET", "LIABILITY", "INCOME", "EXPENSE", "EQUITY" ]
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "GetAccountHolderRelationListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "relationships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountHolderRelation"
          }
        }
      }
    },
    "GetAccountListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "accounts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Account"
          }
        }
      }
    },
    "GetAccountRelationListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "accountRelations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountRelation"
          }
        }
      }
    },
    "GetAccountTransactionListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "accountTransactionList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountTransaction"
          }
        },
        "totalRecord" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetAccountVectorListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "accountVectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountVector"
          }
        }
      }
    },
    "GetAggregateExpressionListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "aggregateExpressions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AggregateExpression"
          }
        }
      }
    },
    "GetAllAccountHoldersResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "accountHolder" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountHolder"
          }
        }
      }
    },
    "GetAllCoAsResponsePayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "coAConfigs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CoAConfig"
          }
        }
      }
    },
    "GetAllTransactionPoliciesResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "policies" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TransactionPolicyResponse"
          }
        }
      }
    },
    "GetAllTxnCategoriesResponsePayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "transactionCategories" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TxnCategory"
          }
        }
      }
    },
    "GetApplicationDetailsResponse" : {
      "type" : "object",
      "properties" : {
        "applicationDetails" : {
          "type" : "object"
        }
      }
    },
    "GetBeneficiaryTransactionListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "transactions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BeneficiaryTransaction"
          }
        }
      }
    },
    "GetCalendarResponsePayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "calendarInfo" : {
          "$ref" : "#/definitions/CalendarInfo"
        }
      }
    },
    "GetCoaListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "coaList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Coa"
          }
        }
      }
    },
    "GetCoaNodesResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "coaNodeList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CoaNode"
          }
        }
      }
    },
    "GetPOPListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "popList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/POP"
          }
        }
      }
    },
    "GetPoliciesResponsePayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "policies" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Policy"
          }
        }
      }
    },
    "GetPolicyResponsePayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "policy" : {
          "$ref" : "#/definitions/Policy"
        }
      }
    },
    "GetProductFamilyListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "productFamilyList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProductFamily"
          }
        }
      }
    },
    "GetProductListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "productList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Product"
          }
        }
      }
    },
    "IssueAccountArtifactRequest" : {
      "type" : "object",
      "required" : [ "accountHolderID", "accountProductID" ],
      "properties" : {
        "accountHolderID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "ID of the individual being issued with the account."
        },
        "accountProductID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "ID of the account product ID which is part of the issuing bundle"
        },
        "name" : {
          "type" : "string",
          "example" : "Victor",
          "description" : "The name which would be preferred in the account name"
        },
        "vectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountVector"
          }
        },
        "accessors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Accessor"
          }
        },
        "relationships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountRelation"
          }
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "IssueAccountArtifactResponse" : {
      "type" : "object",
      "required" : [ "accountHolderID", "bundleID" ],
      "properties" : {
        "bundleID" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "accountHolderID" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "accountID" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "IssueBundleRequest" : {
      "type" : "object",
      "required" : [ "accountHolderID", "name", "phoneNumber" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Victor",
          "description" : "The name which would be preferred in the account name"
        },
        "phoneNumber" : {
          "type" : "string",
          "example" : "+919876543210",
          "description" : "The phone number to be assosciated with the account and the card",
          "minLength" : 10,
          "maxLength" : 15
        },
        "accountHolderID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "ID of the individual being issued with the account."
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which you would like to provide",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "IssueBundleResponse" : {
      "type" : "object",
      "properties" : {
        "bundleID" : {
          "type" : "string"
        },
        "accounts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IssueAccountArtifactResponse"
          }
        },
        "paymentInstruments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IssuePaymentProductResponse"
          }
        }
      }
    },
    "IssueFormFactorRequest" : {
      "type" : "object",
      "required" : [ "formFactorProductID", "resourceID", "targetAccountID" ],
      "properties" : {
        "formFactorProductID" : {
          "type" : "string",
          "example" : "9d7ae299",
          "description" : "ID of the form factor/card which is being issued"
        },
        "resourceID" : {
          "type" : "string",
          "example" : "9d7ae299",
          "description" : "ID of the resource which is being issued and is part of the bundle"
        },
        "targetAccountID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "ID of the individual's account which is to be linked to the resource/card"
        },
        "orderDetails" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "IssueFormFactorResponse" : {
      "type" : "object",
      "properties" : {
        "bundleID" : {
          "type" : "string"
        },
        "formFactorID" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "targetUri" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which you would like to provide",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "IssuePaymentProductResponse" : {
      "type" : "object",
      "properties" : {
        "bundleID" : {
          "type" : "string"
        },
        "resourceID" : {
          "type" : "string"
        },
        "formFactorID" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "targetAccount" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which you would like to provide",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "IssueResourceRequest" : {
      "type" : "object",
      "required" : [ "phoneNumber", "resourceProductID", "targetAccountID" ],
      "properties" : {
        "targetAccountID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "ID of the individual's account which is to be linked to the resource/card"
        },
        "phoneNumber" : {
          "type" : "string",
          "example" : "+919876543210",
          "description" : "The phone number to be assosciated with the account and the card"
        },
        "resourceProductID" : {
          "type" : "string",
          "example" : "9d7ae299",
          "description" : "ID of the resource product which is being issued and is part of the bundle"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "IssueResourceResponse" : {
      "type" : "object",
      "properties" : {
        "bundleID" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "resourceID" : {
          "type" : "string"
        },
        "targetUri" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which you would like to provide",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "JID" : {
      "type" : "object",
      "properties" : {
        "appDomain" : {
          "type" : "string"
        },
        "serviceName" : {
          "type" : "string"
        },
        "nodeId" : {
          "type" : "string"
        },
        "resource" : {
          "type" : "string"
        },
        "serviceInstanceJID" : {
          "type" : "boolean"
        },
        "primaryServiceName" : {
          "type" : "string"
        },
        "serviceViewName" : {
          "type" : "string"
        },
        "bareJID" : {
          "$ref" : "#/definitions/JID"
        },
        "serviceViewJID" : {
          "type" : "boolean"
        },
        "defaultServiceNode" : {
          "type" : "boolean"
        },
        "jidOfAGroup" : {
          "type" : "boolean"
        },
        "proxyServiceJID" : {
          "type" : "boolean"
        }
      }
    },
    "JsonArray" : {
      "type" : "object",
      "properties" : {
        "asBoolean" : {
          "type" : "boolean"
        },
        "asDouble" : {
          "type" : "number",
          "format" : "double"
        },
        "asFloat" : {
          "type" : "number",
          "format" : "float"
        },
        "asLong" : {
          "type" : "integer",
          "format" : "int64"
        },
        "asInt" : {
          "type" : "integer",
          "format" : "int32"
        },
        "asByte" : {
          "type" : "string",
          "format" : "byte"
        },
        "asCharacter" : {
          "type" : "string"
        },
        "asBigDecimal" : {
          "type" : "number"
        },
        "asBigInteger" : {
          "type" : "integer"
        },
        "asShort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "asNumber" : {
          "$ref" : "#/definitions/Number"
        },
        "asString" : {
          "type" : "string"
        },
        "jsonNull" : {
          "type" : "boolean"
        },
        "asJsonPrimitive" : {
          "$ref" : "#/definitions/JsonPrimitive"
        },
        "asJsonArray" : {
          "$ref" : "#/definitions/JsonArray"
        },
        "asJsonObject" : {
          "$ref" : "#/definitions/JsonObject"
        },
        "jsonArray" : {
          "type" : "boolean"
        },
        "asJsonNull" : {
          "$ref" : "#/definitions/JsonNull"
        },
        "jsonObject" : {
          "type" : "boolean"
        },
        "jsonPrimitive" : {
          "type" : "boolean"
        }
      }
    },
    "JsonNull" : {
      "type" : "object",
      "properties" : {
        "asBoolean" : {
          "type" : "boolean"
        },
        "jsonNull" : {
          "type" : "boolean"
        },
        "asDouble" : {
          "type" : "number",
          "format" : "double"
        },
        "asFloat" : {
          "type" : "number",
          "format" : "float"
        },
        "asLong" : {
          "type" : "integer",
          "format" : "int64"
        },
        "asInt" : {
          "type" : "integer",
          "format" : "int32"
        },
        "asByte" : {
          "type" : "string",
          "format" : "byte"
        },
        "asCharacter" : {
          "type" : "string"
        },
        "asBigDecimal" : {
          "type" : "number"
        },
        "asBigInteger" : {
          "type" : "integer"
        },
        "asShort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "asJsonPrimitive" : {
          "$ref" : "#/definitions/JsonPrimitive"
        },
        "asJsonArray" : {
          "$ref" : "#/definitions/JsonArray"
        },
        "asJsonObject" : {
          "$ref" : "#/definitions/JsonObject"
        },
        "jsonArray" : {
          "type" : "boolean"
        },
        "asJsonNull" : {
          "$ref" : "#/definitions/JsonNull"
        },
        "asNumber" : {
          "$ref" : "#/definitions/Number"
        },
        "jsonObject" : {
          "type" : "boolean"
        },
        "jsonPrimitive" : {
          "type" : "boolean"
        },
        "asString" : {
          "type" : "string"
        }
      }
    },
    "JsonObject" : {
      "type" : "object",
      "properties" : {
        "asBoolean" : {
          "type" : "boolean"
        },
        "jsonNull" : {
          "type" : "boolean"
        },
        "asDouble" : {
          "type" : "number",
          "format" : "double"
        },
        "asFloat" : {
          "type" : "number",
          "format" : "float"
        },
        "asLong" : {
          "type" : "integer",
          "format" : "int64"
        },
        "asInt" : {
          "type" : "integer",
          "format" : "int32"
        },
        "asByte" : {
          "type" : "string",
          "format" : "byte"
        },
        "asCharacter" : {
          "type" : "string"
        },
        "asBigDecimal" : {
          "type" : "number"
        },
        "asBigInteger" : {
          "type" : "integer"
        },
        "asShort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "asJsonPrimitive" : {
          "$ref" : "#/definitions/JsonPrimitive"
        },
        "asJsonArray" : {
          "$ref" : "#/definitions/JsonArray"
        },
        "asJsonObject" : {
          "$ref" : "#/definitions/JsonObject"
        },
        "jsonArray" : {
          "type" : "boolean"
        },
        "asJsonNull" : {
          "$ref" : "#/definitions/JsonNull"
        },
        "asNumber" : {
          "$ref" : "#/definitions/Number"
        },
        "jsonObject" : {
          "type" : "boolean"
        },
        "jsonPrimitive" : {
          "type" : "boolean"
        },
        "asString" : {
          "type" : "string"
        }
      }
    },
    "JsonPrimitive" : {
      "type" : "object",
      "properties" : {
        "number" : {
          "type" : "boolean"
        },
        "asBoolean" : {
          "type" : "boolean"
        },
        "boolean" : {
          "type" : "boolean"
        },
        "string" : {
          "type" : "boolean"
        },
        "asDouble" : {
          "type" : "number",
          "format" : "double"
        },
        "asFloat" : {
          "type" : "number",
          "format" : "float"
        },
        "asLong" : {
          "type" : "integer",
          "format" : "int64"
        },
        "asInt" : {
          "type" : "integer",
          "format" : "int32"
        },
        "asByte" : {
          "type" : "string",
          "format" : "byte"
        },
        "asCharacter" : {
          "type" : "string"
        },
        "asBigDecimal" : {
          "type" : "number"
        },
        "asBigInteger" : {
          "type" : "integer"
        },
        "asShort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "asNumber" : {
          "$ref" : "#/definitions/Number"
        },
        "asString" : {
          "type" : "string"
        },
        "jsonNull" : {
          "type" : "boolean"
        },
        "asJsonPrimitive" : {
          "$ref" : "#/definitions/JsonPrimitive"
        },
        "asJsonArray" : {
          "$ref" : "#/definitions/JsonArray"
        },
        "asJsonObject" : {
          "$ref" : "#/definitions/JsonObject"
        },
        "jsonArray" : {
          "type" : "boolean"
        },
        "asJsonNull" : {
          "$ref" : "#/definitions/JsonNull"
        },
        "jsonObject" : {
          "type" : "boolean"
        },
        "jsonPrimitive" : {
          "type" : "boolean"
        }
      }
    },
    "KYCDetails" : {
      "type" : "object",
      "properties" : {
        "kycStatus" : {
          "type" : "string"
        },
        "updateTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "expiryTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "kycStatusPostExpiry" : {
          "type" : "string"
        },
        "authType" : {
          "type" : "string"
        },
        "authData" : {
          "$ref" : "#/definitions/JsonObject"
        },
        "kycAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "KYCStatus" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountHolderID" : {
          "type" : "string"
        },
        "kycStatus" : {
          "type" : "string"
        },
        "updateTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "expiryTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "kycStatusPostExpiry" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "ListEntityGroupResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "entityGroupList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EntityGroup"
          }
        }
      }
    },
    "ListResourceResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "resources" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Resource"
          }
        }
      }
    },
    "Money" : {
      "type" : "object",
      "properties" : {
        "currency" : {
          "type" : "string"
        },
        "amount" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Number" : {
      "type" : "object"
    },
    "OrderDetails" : {
      "type" : "object",
      "properties" : {
        "orderID" : {
          "type" : "string"
        },
        "cardSkuID" : {
          "type" : "string"
        },
        "plasticCode" : {
          "type" : "string"
        },
        "thirdLineEmbossing" : {
          "type" : "string"
        },
        "fourthLineEmbossing" : {
          "type" : "string"
        },
        "expiry" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "deliveryAddress" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "tenantAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "vendorAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "orderStatus" : {
          "type" : "string"
        },
        "embossedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "orderedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "OrderSummary" : {
      "type" : "object",
      "properties" : {
        "quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "orderID" : {
          "type" : "string"
        },
        "cardSkuID" : {
          "type" : "string"
        },
        "plasticCode" : {
          "type" : "string"
        },
        "expiry" : {
          "$ref" : "#/definitions/Expiry"
        },
        "thirdLineEmbossing" : {
          "type" : "string"
        },
        "fourthLineEmbossing" : {
          "type" : "string"
        },
        "deliveryAddress" : {
          "$ref" : "#/definitions/Address"
        },
        "tenantAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "vendorAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "additionalAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "orderStatus" : {
          "type" : "string"
        },
        "orderedAt" : {
          "type" : "string"
        }
      }
    },
    "POP" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "label" : {
          "type" : "string"
        },
        "entityID" : {
          "type" : "string"
        },
        "entityType" : {
          "type" : "string"
        },
        "address" : {
          "$ref" : "#/definitions/Address"
        },
        "contactList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Contact"
          }
        },
        "status" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "default" : {
          "type" : "boolean"
        }
      }
    },
    "PaymentProduct" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "id" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "channels" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Channel"
          }
        },
        "resourceProduct" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ACTIVE", "INACTIVE", "DELETED" ]
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "Policies" : {
      "type" : "object",
      "properties" : {
        "issuancePolicies" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "paymentPolicies" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Policy" : {
      "type" : "object",
      "properties" : {
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "code" : {
          "type" : "string"
        },
        "desc" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "txnConstraints" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyTxnConstraint"
          }
        },
        "policyTxnRules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyTxnRule"
          }
        },
        "policyBalanceRules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyBalanceRule"
          }
        },
        "policyAggregateRules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyAggregateRule"
          }
        },
        "effectiveFrom" : {
          "type" : "integer",
          "format" : "int64"
        },
        "expiresAt" : {
          "type" : "integer",
          "format" : "int64"
        },
        "createdAt" : {
          "type" : "integer",
          "format" : "int64"
        },
        "updatedAt" : {
          "type" : "integer",
          "format" : "int64"
        },
        "policyViolationAction" : {
          "type" : "string",
          "enum" : [ "DECLINE_AND_NOTIFY", "DECLINE", "NOTIFY" ]
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "state" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED" ]
        }
      }
    },
    "PolicyAggregateRule" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "policyVersionID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "action" : {
          "type" : "string",
          "enum" : [ "DEBIT", "CREDIT", "DEBIT_REVERSAL", "CREDIT_REVERSAL" ]
        },
        "categoryCode" : {
          "type" : "string"
        },
        "aggExpressionID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "aggExpressionCode" : {
          "type" : "string"
        },
        "dailyLimit" : {
          "type" : "integer",
          "format" : "int64"
        },
        "weeklyLimit" : {
          "type" : "integer",
          "format" : "int64"
        },
        "monthlyLimit" : {
          "type" : "integer",
          "format" : "int64"
        },
        "quarterlyLimit" : {
          "type" : "integer",
          "format" : "int64"
        },
        "yearlyLimit" : {
          "type" : "integer",
          "format" : "int64"
        },
        "errorCode" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "VELOCITY", "VOLUME" ]
        }
      }
    },
    "PolicyBalanceRule" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "policyVersionID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "action" : {
          "type" : "string",
          "enum" : [ "DEBIT", "CREDIT", "DEBIT_REVERSAL", "CREDIT_REVERSAL" ]
        },
        "minRequiredBalance" : {
          "type" : "integer",
          "format" : "int64"
        },
        "maxAllowedBalance" : {
          "type" : "integer",
          "format" : "int64"
        },
        "minRequiredBalanceBeforeTxn" : {
          "type" : "integer",
          "format" : "int64"
        },
        "maxAllowedBalanceBeforeTxn" : {
          "type" : "integer",
          "format" : "int64"
        },
        "transactionCategory" : {
          "type" : "string"
        },
        "errorCode" : {
          "type" : "string"
        }
      }
    },
    "PolicyTxnConstraint" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "policyVersionID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "action" : {
          "type" : "string",
          "enum" : [ "DEBIT", "CREDIT", "DEBIT_REVERSAL", "CREDIT_REVERSAL" ]
        },
        "allowedTxnCategoryCodes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "disallowedTxnCategoryCodes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "allowedTimeSlices" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "disallowedTimeSlices" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "errorCode" : {
          "type" : "string"
        }
      }
    },
    "PolicyTxnRule" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "policyVersionID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "action" : {
          "type" : "string",
          "enum" : [ "DEBIT", "CREDIT", "DEBIT_REVERSAL", "CREDIT_REVERSAL" ]
        },
        "categoryCode" : {
          "type" : "string"
        },
        "minRequiredAmount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "maxAllowedAmount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "errorCode" : {
          "type" : "string"
        }
      }
    },
    "Product" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "ENABLED", "BLOCKED" ]
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "coaID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "productFamilyID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "ACCOUNT_BASED", "WALLET_BASED" ]
        },
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "coaNodeID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "auraAccountGroupID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        }
      }
    },
    "ProductFamily" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "ENABLED", "BLOCKED" ]
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "coaID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "parentCoaNodeID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountingType" : {
          "type" : "string",
          "enum" : [ "ASSET", "LIABILITY", "INCOME", "EXPENSE", "EQUITY" ]
        },
        "type" : {
          "type" : "string",
          "enum" : [ "WALLET_BASED", "ACCOUNT_BASED" ]
        },
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "coaNodeID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "auraAccountGroupID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        }
      }
    },
    "ProductInfoRequest" : {
      "type" : "object",
      "required" : [ "productID" ],
      "properties" : {
        "productID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "The UUID of the account product which will be a part of the bundle"
        },
        "productFamilyID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "The UUID of the product's family which will be a part of the bundle"
        },
        "programIDs" : {
          "type" : "array",
          "description" : "The UUIDs of the programs which will be associated to the account product at the time of issuance",
          "items" : {
            "type" : "string"
          }
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which is specific to the product info",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "ProductInfoResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "productID" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "ACCOUNT", "PAYMENT" ]
        },
        "programIDs" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "shortCode" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "ReplacePolicyRequestPayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "txnConstraints" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyTxnConstraint"
          }
        },
        "policyTxnRules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyTxnRule"
          }
        },
        "policyBalanceRules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyBalanceRule"
          }
        },
        "policyAggregateRules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyAggregateRule"
          }
        },
        "effectiveFrom" : {
          "type" : "integer",
          "format" : "int64"
        },
        "expiresAt" : {
          "type" : "integer",
          "format" : "int64"
        },
        "policyViolationAction" : {
          "type" : "string",
          "enum" : [ "DECLINE_AND_NOTIFY", "DECLINE", "NOTIFY" ]
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "ReplacePolicyResponsePayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "policyVersionID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "code" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "ReplaceTransactionPolicyRequestPayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifiId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "id" : {
          "type" : "string"
        },
        "txnConstraints" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyTxnConstraint"
          }
        },
        "txnLimits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyTxnRule"
          }
        },
        "balanceLimits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyBalanceRule"
          }
        },
        "volumeLimits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyAggregateRule"
          }
        },
        "velocityLimits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyAggregateRule"
          }
        },
        "policyViolationAction" : {
          "type" : "string",
          "enum" : [ "DECLINE_AND_NOTIFY", "DECLINE", "NOTIFY" ]
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "validFrom" : {
          "type" : "integer",
          "format" : "int64"
        },
        "validUntil" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Resource" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "id" : {
          "type" : "string"
        },
        "resourceProductId" : {
          "type" : "string"
        },
        "resourceProduct" : {
          "$ref" : "#/definitions/ResourceProduct"
        },
        "targetURI" : {
          "type" : "string"
        },
        "formFactors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FormFactor"
          }
        },
        "authProfileId" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "policies" : {
          "$ref" : "#/definitions/Policies"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ACTIVE", "INACTIVE", "DELETED" ]
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "ResourceProduct" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "id" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "formFactorProducts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FormFactorProduct"
          }
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "policies" : {
          "$ref" : "#/definitions/Policies"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ACTIVE", "INACTIVE", "DELETED" ]
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "SensitiveCardView" : {
      "type" : "object",
      "properties" : {
        "algo" : {
          "type" : "string",
          "enum" : [ "ECDH" ]
        },
        "value" : {
          "$ref" : "#/definitions/ECDHEncryptedCardPayload"
        }
      }
    },
    "SigningAuthority" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Victor",
          "description" : "Name of the signing authority"
        },
        "email" : {
          "type" : "string",
          "example" : "Victor@victor.com",
          "description" : "Email ID of the signing authority"
        },
        "phoneNumber" : {
          "type" : "string",
          "example" : "+919876543210",
          "description" : "Phone number of the signing authority"
        }
      }
    },
    "Tag" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "TransactionPolicyResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "ifiId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "code" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED" ]
        },
        "description" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "validFrom" : {
          "type" : "integer",
          "format" : "int64"
        },
        "validUntil" : {
          "type" : "integer",
          "format" : "int64"
        },
        "policyViolationAction" : {
          "type" : "string",
          "enum" : [ "DECLINE_AND_NOTIFY", "DECLINE", "NOTIFY" ]
        },
        "txnConstraints" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyTxnConstraint"
          }
        },
        "txnLimits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyTxnRule"
          }
        },
        "balanceLimits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyBalanceRule"
          }
        },
        "volumeLimits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyAggregateRule"
          }
        },
        "velocityLimits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyAggregateRule"
          }
        },
        "createdAt" : {
          "type" : "integer",
          "format" : "int64"
        },
        "updatedAt" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "TransferRequest" : {
      "type" : "object",
      "required" : [ "amount", "creditAccountID", "debitAccountID", "remarks", "requestID", "transferCode", "transferTime" ],
      "properties" : {
        "requestID" : {
          "type" : "string"
        },
        "amount" : {
          "$ref" : "#/definitions/Money"
        },
        "transferCode" : {
          "type" : "string"
        },
        "debitAccountID" : {
          "type" : "string"
        },
        "creditAccountID" : {
          "type" : "string"
        },
        "transferTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "remarks" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which you would like to provide",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "TransferResponse" : {
      "type" : "object",
      "properties" : {
        "requestID" : {
          "type" : "string"
        },
        "transferID" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "isRetriableFailure" : {
          "type" : "string"
        }
      }
    },
    "TxnCategory" : {
      "type" : "object",
      "properties" : {
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "code" : {
          "type" : "string"
        },
        "desc" : {
          "type" : "string"
        }
      }
    },
    "UpdateAccountHolderApplicationRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "applicationID" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "salutation" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "profilePicURL" : {
          "type" : "string"
        },
        "dob" : {
          "type" : "string",
          "format" : "date"
        },
        "gender" : {
          "type" : "string"
        },
        "mothersMaidenName" : {
          "type" : "string"
        }
      }
    },
    "UpdateBeneficiaryAccountRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "beneficiaryID" : {
          "type" : "string"
        },
        "parentAccountHolderID" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "nickname" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "accountInfo" : {
          "$ref" : "#/definitions/BeneficiaryAccountInfo"
        },
        "status" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "verified" : {
          "type" : "boolean"
        }
      }
    },
    "UpdateBeneficiaryRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountHolderID" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "gender" : {
          "type" : "string"
        },
        "salutation" : {
          "type" : "string"
        },
        "relationship" : {
          "type" : "string"
        },
        "profilePicURL" : {
          "type" : "string"
        },
        "dob" : {
          "type" : "string",
          "format" : "date-time"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "REAL", "LEGAL", "HEADLESS" ]
        },
        "customFields" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "UpdateBundleRequest" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Savings Bundle",
          "description" : "The name which would be assigned to the bundle"
        },
        "accountProducts" : {
          "type" : "array",
          "description" : "The list of account products which will be a part of the bundle",
          "items" : {
            "$ref" : "#/definitions/ProductInfoRequest"
          }
        },
        "paymentProducts" : {
          "type" : "array",
          "description" : "The list of payment products which will be a part of the bundle",
          "items" : {
            "$ref" : "#/definitions/ProductInfoRequest"
          }
        },
        "status" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which is specific to the bundle",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "shortCode" : {
          "type" : "string",
          "example" : "SVNG",
          "description" : "The short code to identify the bundle"
        },
        "picURL" : {
          "type" : "string",
          "description" : "The URL to get the bundle's display pic"
        },
        "description" : {
          "type" : "string",
          "example" : "Bundle related to savings accounts. Consists of a savings account product and a related debit card",
          "description" : "The detailed description of the bundle"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "UpdateKycStatusRequest" : {
      "type" : "object",
      "properties" : {
        "kycStatus" : {
          "type" : "string"
        },
        "expiryTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "kycStatusPostExpiry" : {
          "type" : "string"
        },
        "kycAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "authType" : {
          "type" : "string"
        },
        "authData" : {
          "$ref" : "#/definitions/JsonObject"
        }
      }
    },
    "UpdatePolicyStateRequestPayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "policyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ifiId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED" ]
        }
      }
    },
    "UpdateProductForAllAccountsRequest" : {
      "type" : "object",
      "properties" : {
        "accountHolderType" : {
          "type" : "string",
          "enum" : [ "REAL", "LEGAL", "HEADLESS" ]
        },
        "accountHolderID" : {
          "type" : "string"
        },
        "subject" : {
          "type" : "string"
        },
        "object" : {
          "type" : "string"
        }
      }
    },
    "UpdateTransactionPolicyStateRequestPayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "transactionPolicyID" : {
          "type" : "string"
        },
        "ifiId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED" ]
        }
      }
    },
    "Vector" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "aetherID" : {
          "type" : "string"
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "verified" : {
          "type" : "boolean"
        }
      }
    }
  }
}