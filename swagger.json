{
  "swagger" : "2.0",
  "info" : {
    "version" : "v1",
    "title" : "API Reference"
  },
  "tags" : [ {
    "name" : "Account"
  }, {
    "name" : "Account Management"
  }, {
    "name" : "AccountHolder Management"
  }, {
    "name" : "Beneficiary Transfers"
  }, {
    "name" : "Bundles"
  }, {
    "name" : "Cards list"
  }, {
    "name" : "Cards order"
  }, {
    "name" : "Form Factor"
  }, {
    "name" : "Legal Account Holder Management"
  }, {
    "name" : "Payment"
  }, {
    "name" : "Resource"
  }, {
    "name" : "Resource Product"
  }, {
    "name" : "SupportCentre"
  } ],
  "paths" : {
    "/api/v1/ifi/{ifiID}/accountHolder/headless" : {
      "post" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Create a headless account holder",
        "description" : "",
        "operationId" : "createHeadlessAccountHolder",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the headless account holder is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateAccountHolderRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountHolderRelationListResponse"
            }
          },
          "201" : {
            "description" : ""
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accountHolders/{accountHolderID}" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get all details of the account holder",
        "description" : "",
        "operationId" : "getAccountHolderByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountHolderID",
          "in" : "path",
          "description" : "ID of the account holder whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolder"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accountHolders/{accountHolderID}/transactionCategories" : {
      "get" : {
        "summary" : "Get User Transaction Categories",
        "description" : "",
        "operationId" : "getTransactionCategory",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "accountHolderID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAllTxnCategoriesResponsePayload"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create User Transaction Category",
        "description" : "",
        "operationId" : "createTransactionCategory",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "accountHolderID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateUserTransactionCategoryRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CreateUserTransactionCategoryResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accountHolders/{accountHolderID}/transactionPolicies" : {
      "get" : {
        "summary" : "List All Account Holder TransactionPolicy",
        "description" : "",
        "operationId" : "listAllAccountHolderTransactionPolicies",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization).",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountHolderID",
          "in" : "path",
          "description" : "ID  of the account holder whose policies are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ListTransactionPoliciesResponse"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create Account Holder TransactionPolicy",
        "description" : "",
        "operationId" : "createAccountHolderTransactionPolicy",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization).",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountHolderID",
          "in" : "path",
          "description" : "ID of the account holder for whom a policy is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateTransactionPolicyRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransactionPolicyResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accountHolders/{accountHolderID}/transactionPolicies/{transactionPolicyID}" : {
      "get" : {
        "summary" : "Get Account Holder TransactionPolicy",
        "description" : "",
        "operationId" : "getAccountHolderTransactionPolicy",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization).",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountHolderID",
          "in" : "path",
          "description" : "ID of the account holder whose particular policy is being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "transactionPolicyID",
          "in" : "path",
          "description" : "Transaction Policy ID of the account holder",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123456789101112
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransactionPolicyResponse"
            }
          }
        }
      },
      "put" : {
        "summary" : "Replace Account Holder TransactionPolicy",
        "description" : "",
        "operationId" : "replaceAccountHolderTransactionPolicy",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization).",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountHolderID",
          "in" : "path",
          "description" : "ID of the account holder whose policy is being updated",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "transactionPolicyID",
          "in" : "path",
          "description" : "Transaction Policy ID of the account holder",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123456789101112
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ReplaceTransactionPolicyRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransactionPolicyResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accountHolders/{accountHolderID}/transactionPolicies/{transactionPolicyID}/{state}" : {
      "patch" : {
        "summary" : "Update Account Holder TransactionPolicy State",
        "description" : "",
        "operationId" : "updateAccountHolderTransactionPolicyState",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization).",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountHolderID",
          "in" : "path",
          "description" : "ID of the account holder whose policy state is being updated",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "transactionPolicyID",
          "in" : "path",
          "description" : "Transaction Policy ID of the account holder",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123456789101112
        }, {
          "name" : "state",
          "in" : "path",
          "description" : "Policy State of Transaction Policy",
          "required" : true,
          "type" : "string",
          "x-example" : "ENABLED or DISABLED",
          "enum" : [ "ENABLED", "DISABLED" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransactionPolicyResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get all accounts of IFI",
        "description" : "",
        "operationId" : "getAccounts",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the accounts exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "lastFetchedId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountListResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/update" : {
      "post" : {
        "tags" : [ "Account Management" ],
        "summary" : "Update all Accounts for a given real or headless account holder",
        "description" : "",
        "operationId" : "accountHolderUpdated",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ifiID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateProductForAllAccountsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EmptyPayload"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}" : {
      "get" : {
        "tags" : [ "Account" ],
        "summary" : "",
        "description" : "Returns Account object given an accountID. The accountID should be a UUID.",
        "operationId" : "getAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization).",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the Account whose details are to be retrieved.",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/accessors" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get all accessors for a given accountID",
        "description" : "",
        "operationId" : "getAccountAccessors",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account accessors exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose accessor details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountAccessorListResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Account Management" ],
        "summary" : "Create accessors for the given accountID",
        "description" : "",
        "operationId" : "createAccountAccessor",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account accessor is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account for which the accessor is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddAccountAccessorRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Accessor"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/accessors/{accessorID}" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get accessor for a given accountID by the ID",
        "description" : "",
        "operationId" : "getAccountAccessorByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account accessor exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose accessor details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "accessorID",
          "in" : "path",
          "description" : "ID of the accessor whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Accessor"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/balance" : {
      "get" : {
        "tags" : [ "Account" ],
        "summary" : "",
        "description" : "Get Balance of the accountID provided.",
        "operationId" : "getBalance",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization).",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the Account whose balance details are to be retrieved.",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountBalanceResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/relations" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get all relations of the given accountID",
        "description" : "",
        "operationId" : "getAccountRelations",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account relations exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose relation details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountRelationListResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Account Management" ],
        "summary" : "Create relation for the given accountID",
        "description" : "",
        "operationId" : "createAccountRelation",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account relation is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account for which relation is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddAccountRelationRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountRelation"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/relations/{relationID}" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get the relation of an account by the ID",
        "description" : "",
        "operationId" : "getAccountRelationByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account relation exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose relation details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "relationID",
          "in" : "path",
          "description" : "ID of the relation whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountRelation"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/transactionPolicies" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "",
        "description" : "",
        "operationId" : "getTransactionPoliciesByAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the policies exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose policy details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAllTransactionPoliciesResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/transactions" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get all transactions of an account",
        "description" : "",
        "operationId" : "getTransactions",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account transactions exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose transaction details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountTransactionListResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/transactions/{transactionID}" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get information of a specific transaction as per ID",
        "description" : "",
        "operationId" : "getTransaction",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account transaction exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose transaction details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "transactionID",
          "in" : "path",
          "description" : "ID of the transaction whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountTransaction"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/updateStatus" : {
      "put" : {
        "tags" : [ "Account Management" ],
        "summary" : "Update Account Status",
        "description" : "",
        "operationId" : "updateAccountStatus",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the Account",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateAccountStatusRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UpdateAccountStatusResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/vectors" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get all vectors of the given accountID",
        "description" : "",
        "operationId" : "getAccountVectors",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account vector exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose vector details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountVectorListResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Account Management" ],
        "summary" : "Create vector for the given accountID",
        "description" : "",
        "operationId" : "createAccountVector",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account vector is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose vector details are being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddAccountVectorRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountVector"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/vectors/{vectorID}" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get the vector of an account by ID",
        "description" : "",
        "operationId" : "getAccountVectorByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account vector exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose vector details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "vectorID",
          "in" : "path",
          "description" : "ID of the vector whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountVector"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accountsInfo/{accountID}" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "operationId" : "getAccountInfo",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountInfo"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/aggregateExpressions" : {
      "get" : {
        "summary" : "get All Aggregation Expressions",
        "description" : "",
        "operationId" : "getAggregateExpressionList",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAggregateExpressionListResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/applications" : {
      "get" : {
        "summary" : "Get All Applications",
        "description" : "",
        "operationId" : "getAllApplications",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "status",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/applications/editIndividual" : {
      "post" : {
        "summary" : "Edit Individual Application",
        "description" : "",
        "operationId" : "editApplication",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/EditIndividualApplicationRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/applications/newIndividual" : {
      "post" : {
        "summary" : "Create Individual Application With Auto Approval",
        "description" : "",
        "operationId" : "createApplicationWithAutoApproval",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateAccountHolderWithAutoApprovalRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/applications/newIndividualApplication" : {
      "post" : {
        "summary" : "Create Individual Application",
        "description" : "",
        "operationId" : "createApplication",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateAccountHolderApplicationRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/api/v1/ifi/{ifiID}/applications/{applicationID}" : {
      "get" : {
        "summary" : "Get Individual Application",
        "description" : "",
        "operationId" : "getApplication",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update Individual Application",
        "description" : "",
        "operationId" : "updateApplication",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateAccountHolderApplicationRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete Individual Application",
        "description" : "",
        "operationId" : "deleteApplication",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/applications/{applicationID}/kycStatus/{kycStatus}" : {
      "put" : {
        "summary" : "Update Application Status",
        "description" : "",
        "operationId" : "updateApplicationKYCStatus",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "kycStatus",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateKycStatusRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/applications/{applicationID}/spool/{spoolID}" : {
      "put" : {
        "summary" : "Update Application Spool",
        "description" : "",
        "operationId" : "updateApplicationSpool",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "spoolID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/applications/{applicationID}/status/{newStatus}" : {
      "put" : {
        "summary" : "Update Application Status",
        "description" : "",
        "operationId" : "updateApplicationStatus",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "newStatus",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/createEntityPolicyMapping" : {
      "post" : {
        "summary" : "Create Entity Policy Mapping",
        "description" : "",
        "operationId" : "createPolicyMapping",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreatePolicyMappingRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransactionPolicyResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/createExtendedProduct" : {
      "post" : {
        "summary" : "CreateExtendedProduct api via fusion",
        "description" : "",
        "operationId" : "createExtendedProduct",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateExtendedProductRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Product"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/createExtendedProductFamily" : {
      "post" : {
        "summary" : "CreateExtendedProductFamily api via fusion",
        "description" : "",
        "operationId" : "createExtendedProductFamily",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateExtendedProductFamilyRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProductFamily"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/entitycode/{entity}" : {
      "get" : {
        "summary" : "Get Entity Code",
        "description" : "",
        "operationId" : "getEntityCode",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "entity",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EntityCodeResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/getAllTransactionPoliciesByIFI" : {
      "get" : {
        "summary" : "Get all transaction policies for a given IFI",
        "description" : "",
        "operationId" : "getAllTransactionPoliciesByIFI",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAllTransactionPoliciesResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/getCoaList" : {
      "get" : {
        "summary" : "Get all CoAs for a given IFI",
        "description" : "",
        "operationId" : "getCoaListByIFI",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetCoaListResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/getCoaNodes" : {
      "get" : {
        "summary" : "Get all CoA Nodes for a given IFI and CoAID",
        "description" : "",
        "operationId" : "getCoaNodesByIFIAndCoaID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "coaID",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetCoaNodesResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/getEntityGroupList" : {
      "get" : {
        "summary" : "Get EntityGrouplist for a given ifi and entityType",
        "description" : "",
        "operationId" : "getEntityGroupList",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "entityType",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ListEntityGroupResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/getPolicyMappings" : {
      "get" : {
        "summary" : "Get PolicyMappings for a given ifi, entityID, policyEntityType, policyType and PolicyId",
        "description" : "",
        "operationId" : "getPolicyMappings",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "entityID",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyEntityType",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyType",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyID",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetProductListResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/getProduct" : {
      "get" : {
        "summary" : "Get Product with a given IFI and ProductID",
        "description" : "",
        "operationId" : "getProductByIFIAndID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "id",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Product"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/getProductFamily" : {
      "get" : {
        "summary" : "Get ProductFamily for a given ifi and id",
        "description" : "",
        "operationId" : "getProductFamily",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "productFamilyId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123456789065434567
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProductFamily"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/getProductFamilyList" : {
      "get" : {
        "summary" : "Get ProductFamilyList for a given ifi",
        "description" : "",
        "operationId" : "getProductFamilyList",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetProductFamilyListResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/getProductList" : {
      "get" : {
        "summary" : "Get ProductList for a given ifi",
        "description" : "",
        "operationId" : "getProductList",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetProductListResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/getTransactionPoliciesByEntityID" : {
      "get" : {
        "summary" : "get Transaction Policies by EntityID",
        "description" : "",
        "operationId" : "getTransactionPoliciesByEntityID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAllTransactionPoliciesResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/getTransactionPolicyByID" : {
      "get" : {
        "summary" : "Get TransactionPolicy with a given ID",
        "description" : "",
        "operationId" : "getProductByIFIAndID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "id",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransactionPolicyResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/replaceTransactionPolicy/{transactionPolicyID}" : {
      "put" : {
        "summary" : "Replace Transaction Policy",
        "description" : "",
        "operationId" : "replaceTransactionPolicy",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "transactionPolicyID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ReplaceTransactionPolicyRequestPayload"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransactionPolicyResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/transactionPolicy" : {
      "post" : {
        "summary" : "Create TransactionPolicy",
        "description" : "",
        "operationId" : "createTransactionPolicy",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Builder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransactionPolicyResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/athena-manager/updateTransactionPolicy/{transactionPolicyId}" : {
      "patch" : {
        "summary" : "Update Transaction Policy State",
        "description" : "",
        "operationId" : "updateTransactionPolicyState",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "transactionPolicyId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateTransactionPolicyStateRequestPayload"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EmptyPayload"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles" : {
      "get" : {
        "tags" : [ "Bundles" ],
        "summary" : "Get all Bundles",
        "description" : "Get all Bundles available for an IFI. The response returns a unique identifier for each available Bundle.",
        "operationId" : "getAllBundles",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundles are being retrieved",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/IBundleView"
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles/{bundleID}" : {
      "get" : {
        "tags" : [ "Bundles" ],
        "summary" : "Get Bundle by Bundle ID",
        "description" : "Returns Bundle by bundleID for an IFI.",
        "operationId" : "getBundleByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundles are being retrieved by bundleID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose details are being retrieved",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/IBundleView"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles/{bundleID}/issueAccount" : {
      "post" : {
        "summary" : "Issue specific Account from a bundle ",
        "description" : "",
        "operationId" : "issueAccountProduct",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the Account is being issued",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose account product is being issued",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IssueAccountArtifactRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/IssueAccountArtifactResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles/{bundleID}/issueAccountProducts" : {
      "post" : {
        "summary" : "Issue specific Account from a bundle ",
        "description" : "",
        "operationId" : "issueAccountProduct",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the Account is being issued",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose account product is being issued",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IssueAccountProductsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/IssueAccountArtifactResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles/{bundleID}/issueBundle" : {
      "post" : {
        "summary" : "Issue bundle to a specific individual/company",
        "description" : "",
        "operationId" : "issueBundle",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundle is being issued",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle which is being issued",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IssueBundleRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/IssueBundleResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles/{bundleID}/issueBundleOverridingAssessment" : {
      "post" : {
        "summary" : "Issue bundle to a specific individual/company without Assessment irrespective of ifi whitelisting",
        "description" : "",
        "operationId" : "issueBundleOverridingOFACCheck",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundle is being issued",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle which is being issued",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/OverrideIssuanceRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/IssueBundleResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles/{bundleID}/issueFormFactor" : {
      "post" : {
        "summary" : "Issue specific form factor of a resource to a specific individual/company",
        "description" : "",
        "operationId" : "issueFormFactor",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the form factor is being issued",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose form factor/card is being issued",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IssueFormFactorRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/IssueFormFactorResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles/{bundleID}/issuePaymentProducts" : {
      "post" : {
        "summary" : "Issue specific Account from a bundle ",
        "description" : "",
        "operationId" : "issueMultiplePaymentProducts",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the Resource is being issued",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose account product is being issued",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IssuePaymentProductsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/IssueAccountArtifactResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles/{bundleID}/issueResource" : {
      "post" : {
        "summary" : "Issue specific resource of a bundle to a specific individual/company",
        "description" : "",
        "operationId" : "issueResource",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the resource is being issued",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose resource is being issued",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IssueResourceRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/IssueResourceResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/cards/list" : {
      "post" : {
        "tags" : [ "Cards list" ],
        "summary" : "",
        "description" : "The endpoint supports the following views -\n\nBASIC\nEXPANDED\nEXPANDED_SENSITIVE\nOne or multiple filters can be passed to get the results. EXPANDED_SENSITIVE view is supported only if you are PCI DSS compliant.",
        "operationId" : "listCards",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FusionListCardsRequest"
          }
        }, {
          "name" : "X-Zeta-JWS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/cards/orders" : {
      "post" : {
        "operationId" : "placeBulkOrder",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BulkOrderRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BulkOrderRequest"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/cards/orders/personalized" : {
      "post" : {
        "operationId" : "placePersonalizedOrder",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PersonalizedOrderRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PersonalizedOrderRequest"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/cards/orders/replacement" : {
      "post" : {
        "operationId" : "placeReplacementOrder",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/EmbossAndActivateReplacementOrderRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/OrderSummary"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/cards/orders/{orderID}" : {
      "get" : {
        "tags" : [ "Cards order" ],
        "summary" : "",
        "description" : "Get order details by ID",
        "operationId" : "getOrder",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "orderID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/OrderSummary"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/cards/orders/{orderID}/cancel" : {
      "post" : {
        "operationId" : "cancelOrder",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "orderID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Void"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/cards/{cardID}/dispatch" : {
      "post" : {
        "operationId" : "dispatchCard",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cardID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DispatchOrderRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/OrderSummary"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/cards/{cardIdentifier}" : {
      "get" : {
        "summary" : "Get card details by ID",
        "description" : "",
        "operationId" : "getCard",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cardIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Zeta-JWS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CardViewResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/cards/{cguid}/generatePin" : {
      "post" : {
        "summary" : "Generate PIN for a card form factor",
        "description" : "",
        "operationId" : "generatePin",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "cguid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Builder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CreateAndLinkFormFactorResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/coas/{coaid}/coaNodes" : {
      "get" : {
        "summary" : "Get all CoA Nodes for a given IFI and CoAID",
        "description" : "",
        "operationId" : "getCoaNodesByIFIAndCoaID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "coaID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetCoaNodesResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/companies/{applicationID}/vectors" : {
      "post" : {
        "tags" : [ "Legal Account Holder Management" ],
        "summary" : "Create the vector for an individual",
        "description" : "",
        "operationId" : "addAccountHolderVector",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account holder vector is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application for which the account holder vector is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddAccountHolderVectorRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolderVector"
            }
          },
          "201" : {
            "description" : ""
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/companies/{applicationID}/vectors/{vectorID}" : {
      "get" : {
        "tags" : [ "Legal Account Holder Management" ],
        "summary" : "Get the vector of an individual by ID",
        "description" : "",
        "operationId" : "getAccountHolderVector",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account holder",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application for which the account holder vector is being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        }, {
          "name" : "vectorID",
          "in" : "path",
          "description" : "ID of the vector whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolderVector"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/companies/{companyID}/beneficiaries" : {
      "get" : {
        "summary" : "Get all the beneficiaries of a company",
        "description" : "",
        "operationId" : "getBeneficiaries",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary details are being retrieved",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiaries list are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PagedModel"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new beneficiary of a company",
        "description" : "",
        "operationId" : "createBeneficiary",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiary is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateCorporateBeneficiaryRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CorporateBeneficiaryResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/companies/{companyID}/beneficiaries/{beneficiaryID}" : {
      "get" : {
        "summary" : "Get details of a beneficiary by ID",
        "description" : "",
        "operationId" : "getBeneficiaryByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiary details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CorporateBeneficiaryResponse"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update a beneficiary of a company",
        "description" : "",
        "operationId" : "updateBeneficiary",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiary is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary which is being updated belonging to an company",
          "required" : true,
          "type" : "string",
          "x-example" : "f0e68249-aed0-4359-9df2-a89a350567e9"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateCorporateBeneficiaryRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CorporateBeneficiaryResponse"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a beneficiary of a company",
        "description" : "",
        "operationId" : "deleteBeneficiary",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiary is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary which is being updated belonging to an company",
          "required" : true,
          "type" : "string",
          "x-example" : "f0e68249-aed0-4359-9df2-a89a350567e9"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CorporateBeneficiaryResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/companies/{companyID}/beneficiaries/{beneficiaryID}/accounts" : {
      "get" : {
        "summary" : "Get all the accounts of a beneficiary",
        "description" : "",
        "operationId" : "getBeneficiaryAccounts",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary accounts are being retrieved",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiary is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PagedModel"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new beneficiary account of a beneficiary",
        "description" : "",
        "operationId" : "createBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiary is",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary whose account is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateCorporateBeneficiaryAccountRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CorporateBeneficiaryAccountResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/companies/{companyID}/beneficiaries/{beneficiaryID}/accounts/{accountID}" : {
      "get" : {
        "summary" : "Get details of a specific beneficiary account of an company's beneficiary ",
        "description" : "",
        "operationId" : "getBeneficiaryAccountByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary account being retrieved exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiary account being retrieved exists",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary whose beneficiary account details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the beneficiary account whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryAccountResponse"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update a account of a beneficiary",
        "description" : "",
        "operationId" : "updateBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiary is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary which is being updated belonging to an company",
          "required" : true,
          "type" : "string",
          "x-example" : "f0e68249-aed0-4359-9df2-a89a350567e9"
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account being updated",
          "required" : true,
          "type" : "string",
          "x-example" : "f0e68249-aed0-4359-9df2-a89a350567e9"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateCorporateBeneficiaryAccountRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CorporateBeneficiaryAccountResponse"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a account of a beneficiary",
        "description" : "",
        "operationId" : "deleteBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiary is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary which is being updated belonging to an company",
          "required" : true,
          "type" : "string",
          "x-example" : "f0e68249-aed0-4359-9df2-a89a350567e9"
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account being updated",
          "required" : true,
          "type" : "string",
          "x-example" : "f0e68249-aed0-4359-9df2-a89a350567e9"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CorporateBeneficiaryAccountResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/companies/{companyID}/beneficiaries/{beneficiaryID}/accounts/{beneficiaryAccountID}/transfers" : {
      "post" : {
        "tags" : [ "Beneficiary Transfers" ],
        "summary" : "Perform transfer to a beneficiary account of an company",
        "description" : "",
        "operationId" : "transferToBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary transfer is being performed",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company who is performing the beneficiary transfer",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary to whom the transfer is being performed",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryAccountID",
          "in" : "path",
          "description" : "ID of the account of beneficiary to which money has to be transferred",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BeneficiaryAccountTransactionFusionRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryTransactionFusionResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/companies/{companyID}/beneficiaryTransfers" : {
      "get" : {
        "tags" : [ "Beneficiary Transfers" ],
        "summary" : "Get all the beneficiary transfers of an company",
        "description" : "",
        "operationId" : "getAllBeneficiaryTransfers",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary whose transfers are being retrieved",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiary transfers are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PagedModel"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/companies/{companyID}/beneficiaryTransfers/{transferID}" : {
      "get" : {
        "tags" : [ "Beneficiary Transfers" ],
        "summary" : "Get the details of a transfer by ID",
        "description" : "",
        "operationId" : "getBeneficiaryTransferByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary transfer exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiary transfer details are being fetched",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "transferID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryTransaction"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/createExtendedProduct" : {
      "post" : {
        "summary" : "CreateExtendedProduct api via fusion",
        "description" : "",
        "operationId" : "createExtendedProduct",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateExtendedProductRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Product"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/createExtendedProductFamily" : {
      "post" : {
        "summary" : "CreateExtendedProductFamily api via fusion",
        "description" : "",
        "operationId" : "createExtendedProductFamily",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateExtendedProductFamilyRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProductFamily"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/entityGroups" : {
      "get" : {
        "summary" : "Get EntityGrouplist for a given ifi and entityType",
        "description" : "",
        "operationId" : "getEntityGroupList",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "entityType",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ListEntityGroupResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/form_factor_products/{formFactorProductID}" : {
      "get" : {
        "summary" : "",
        "description" : "Get Form Factor Product details by ID",
        "operationId" : "getFormFactorProduct",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "formFactorProductID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FormFactorProduct"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/fusion-config" : {
      "get" : {
        "operationId" : "getAllFusionConfigs",
        "parameters" : [ {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "maximum" : 50,
          "minimum" : 1,
          "format" : "int64"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PagedModel"
            }
          }
        }
      },
      "post" : {
        "operationId" : "createFusionConfig",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddFusionConfigRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FusionConfigResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/fusion-config/{configID}" : {
      "get" : {
        "operationId" : "getFusionConfigByID",
        "parameters" : [ {
          "name" : "configID",
          "in" : "path",
          "description" : "ID of the fusionConfig whose details are being retrieved",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FusionConfigResponse"
            }
          }
        }
      },
      "put" : {
        "operationId" : "updateFusionConfig",
        "parameters" : [ {
          "name" : "configID",
          "in" : "path",
          "description" : "ID of the fusionConfig whose details are being updated",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateFusionConfigRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FusionConfigResponse"
            }
          }
        }
      },
      "delete" : {
        "operationId" : "deleteConfigByID",
        "parameters" : [ {
          "name" : "configID",
          "in" : "path",
          "description" : "ID of the fusionConfig whose details are being deleted",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/getAllAccountHolders" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get paginated AccountHolders list of type belonging to ifi",
        "description" : "",
        "operationId" : "getAllAccountHolders",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the individual exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAllAccountHoldersResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individualApplications/{applicationID}" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get the application details for an individual by ID",
        "description" : "",
        "operationId" : "getAccountHolder",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the application exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application which is being fetched",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolder"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individualApplications/{applicationID}/pops" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get all the Point of Presence(POP)s of an individual",
        "description" : "",
        "operationId" : "getAccountHolderPops",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account holder POP exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application for which the account holder POP is being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetPOPListResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Create the Point of Presence(POP) of an individual",
        "description" : "",
        "operationId" : "addAccountHolderPop",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the individual's POPs exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application for which the POP is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddAccountHolderPOPRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/POP"
            }
          },
          "201" : {
            "description" : ""
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individualApplications/{applicationID}/pops/{popID}" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get the Point of Presence(POP) of an individual by ID",
        "description" : "",
        "operationId" : "getAccountHolderPopsByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the individual's POP exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application for which the account holder POP is being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        }, {
          "name" : "popID",
          "in" : "path",
          "description" : "ID of the POP whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/POP"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individualApplications/{applicationID}/relationships" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get all relationships of an individual",
        "description" : "",
        "operationId" : "getAccountHolderRelationships",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account holder relationships exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application for which the account holder relationships are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountHolderRelationListResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Create the relationship for an individual",
        "description" : "",
        "operationId" : "addAccountHolderRelationship",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account holder relation is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application for which the account holder relation is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddAccountHolderRelationshipRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolderRelation"
            }
          },
          "201" : {
            "description" : ""
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individualApplications/{applicationID}/relationships/{relationshipID}" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get a specific individual's relationship by ID",
        "description" : "",
        "operationId" : "getAccountHolderRelationshipByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account holder relationship exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application for which the account holder relationship is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        }, {
          "name" : "relationshipID",
          "in" : "path",
          "description" : "ID of the relationship whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolderRelation"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individualApplications/{applicationID}/vectors" : {
      "post" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Create the vector for an individual",
        "description" : "",
        "operationId" : "addAccountHolderVector",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account holder vector is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application for which the account holder vector is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddAccountHolderVectorRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolderVector"
            }
          },
          "201" : {
            "description" : ""
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individualApplications/{applicationID}/vectors/{vectorID}" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get the vector of an individual by ID",
        "description" : "",
        "operationId" : "getAccountHolderVector",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account holder",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application for which the account holder vector is being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        }, {
          "name" : "vectorID",
          "in" : "path",
          "description" : "ID of the vector whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolderVector"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individualByVector/{vectorType}/{vectorValue}" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "operationId" : "getAccountHolderByVector",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account holder",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "vectorType",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "vectorValue",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolder"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get details of an individual by ID",
        "description" : "",
        "operationId" : "getAccountHolders",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the individual exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolder"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/accounts" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get all accounts of an individual",
        "description" : "",
        "operationId" : "getAccounts",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the accounts exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual whose accounts are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountListResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaries" : {
      "get" : {
        "summary" : "Get all the beneficiaries of an individual",
        "description" : "",
        "operationId" : "getBeneficiaries",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary details are being retrieved",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiaries list are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryListResponse"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new beneficiary of an individual",
        "description" : "",
        "operationId" : "createBeneficiary",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateBeneficiaryRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Beneficiary"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaries/{beneficiaryID}" : {
      "get" : {
        "summary" : "Get details of a beneficiary by ID",
        "description" : "",
        "operationId" : "getBeneficiaryByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Beneficiary"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update a beneficiary of an individual",
        "description" : "",
        "operationId" : "updateBeneficiary",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary which is being updated belonging to an individual",
          "required" : true,
          "type" : "string",
          "x-example" : "f0e68249-aed0-4359-9df2-a89a350567e9"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateBeneficiaryRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Beneficiary"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a beneficiary of an individual",
        "description" : "",
        "operationId" : "deleteBeneficiary",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary which is being updated belonging to an individual",
          "required" : true,
          "type" : "string",
          "x-example" : "f0e68249-aed0-4359-9df2-a89a350567e9"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Beneficiary"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaries/{beneficiaryID}/accounts" : {
      "get" : {
        "summary" : "Get all the accounts of a beneficiary",
        "description" : "",
        "operationId" : "getBeneficiaryAccounts",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary accounts are being retrieved",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary accounts are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryAccountListResponse"
            }
          }
        }
      },
      "post" : {
        "summary" : "Creation of a beneficiary account",
        "description" : "",
        "operationId" : "createBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary account is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary account is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddBeneficiaryAccountForBeneficiaryRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryAccount"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaries/{beneficiaryID}/accounts/{accountID}" : {
      "get" : {
        "summary" : "Get details of a specific beneficiary account of an individual's beneficiary ",
        "description" : "",
        "operationId" : "getBeneficiaryAccountByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary account being retrieved exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary account being retrieved exists",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary whose beneficiary account details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the beneficiary account whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryAccount"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaries/{beneficiaryID}/accounts/{accountID}/transfers" : {
      "post" : {
        "tags" : [ "Beneficiary Transfers" ],
        "summary" : "Transfer Funds to Beneficiary Account",
        "description" : "Perform transfer to a beneficiary account of an individual.",
        "operationId" : "transferToBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary transfer is being performed",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual who is performing the beneficiary transfer",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary to whom the transfer is being performed",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the beneficiary account to which the transfer is being performed",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BeneficiaryAccountTransferRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryTransactionResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaries/{beneficiaryID}/accounts/{beneficiaryAccountID}" : {
      "put" : {
        "summary" : "Update of a beneficiary account",
        "description" : "",
        "operationId" : "updateBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary account is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary account is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "beneficiaryAccountID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateBeneficiaryAccountRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryAccount"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete of a beneficiary account",
        "description" : "",
        "operationId" : "deleteBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary account is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary account is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "beneficiaryAccountID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryAccount"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaries/{beneficiaryID}/transfers" : {
      "post" : {
        "tags" : [ "Beneficiary Transfers" ],
        "summary" : "",
        "description" : "Perform transfer to an individual beneficiary's default account",
        "operationId" : "transferToDefaultBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary transfer is being performed",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual who is performing the beneficiary transfer",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary to whom the transfer is being performed",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BeneficiaryAccountTransferRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryTransactionResponse"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaryTransfers" : {
      "get" : {
        "tags" : [ "Beneficiary Transfers" ],
        "summary" : "",
        "description" : "Get all the beneficiary transfers of an individual.",
        "operationId" : "getAllBeneficiaryTransfers",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary whose transfers are being retrieved",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary transfers are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetBeneficiaryTransactionListResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaryTransfers/{transferID}" : {
      "get" : {
        "tags" : [ "Beneficiary Transfers" ],
        "summary" : "",
        "description" : "Get the details of a transfer by ID",
        "operationId" : "getBeneficiaryTransferByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary transfer exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary transfer details are being fetched",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "transferID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryTransaction"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/ledger/createCoa" : {
      "post" : {
        "summary" : "Create Coa",
        "description" : "",
        "operationId" : "createCoA",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CreateCoaResponsePayload"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/ledger/createCoaNode" : {
      "post" : {
        "summary" : "Create Coa node",
        "description" : "",
        "operationId" : "createCoANode",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CreateCoaNodeResponsePayload"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/ledger/createPolicy" : {
      "post" : {
        "summary" : "Create Policy",
        "description" : "",
        "operationId" : "createPolicy",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreatePolicyRequestPayload"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CreatePolicyResponsePayload"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/ledger/getAggregateExpressionList" : {
      "get" : {
        "summary" : "get All Aggregation Expressions",
        "description" : "",
        "operationId" : "getAggregateExpressionList",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAggregateExpressionListResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/ledger/getAllCoas" : {
      "get" : {
        "summary" : "Get All Coas",
        "description" : "",
        "operationId" : "getAllCoas",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAllCoAsResponsePayload"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/ledger/getAllTransactionCategories" : {
      "get" : {
        "summary" : "get All Transaction Categories",
        "description" : "",
        "operationId" : "getAllTransactionCategories",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAllTxnCategoriesResponsePayload"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/ledger/getCalender" : {
      "get" : {
        "summary" : "Get Calender",
        "description" : "",
        "operationId" : "getCalendar",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetCalendarResponsePayload"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/ledger/getPolicies" : {
      "get" : {
        "summary" : "get Policies",
        "description" : "",
        "operationId" : "getPolicies",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetPoliciesResponsePayload"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/ledger/getPolicy" : {
      "get" : {
        "summary" : "get Policy",
        "description" : "",
        "operationId" : "getPolicy",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetPolicyResponsePayload"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/ledger/replacePolicy" : {
      "post" : {
        "summary" : "Replace Policy",
        "description" : "",
        "operationId" : "replacePolicy",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ReplacePolicyRequestPayload"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ReplacePolicyResponsePayload"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/ledger/updatePolicyState" : {
      "post" : {
        "summary" : "Replace Policy",
        "description" : "",
        "operationId" : "updatePolicyState",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdatePolicyStateRequestPayload"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EmptyPayload"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/orders/{orderId}/cards/list" : {
      "get" : {
        "summary" : "Get card details by ID",
        "description" : "",
        "operationId" : "getCardsByOrder",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "orderId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "X-Zeta-JWS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/payment_products/list" : {
      "post" : {
        "summary" : "Filter Payment Product detail by Resource Product",
        "description" : "",
        "operationId" : "filterPaymentProduct",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Builder"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ListPaymentProductResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/payment_products/{paymentProductID}" : {
      "get" : {
        "summary" : "Get Payment Product details by ID",
        "description" : "",
        "operationId" : "getPaymentProduct",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "paymentProductID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PaymentProduct"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/policyMappings" : {
      "get" : {
        "summary" : "Get PolicyMappings for a given ifi, entityID, policyEntityType, policyType and PolicyId",
        "description" : "",
        "operationId" : "getPolicyMappings",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "entityID",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyEntityType",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyType",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyID",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetProductListResponse"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create Entity Policy Mapping",
        "description" : "",
        "operationId" : "createPolicyMapping",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreatePolicyMappingRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransactionPolicyResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/productFamilies" : {
      "get" : {
        "summary" : "Get ProductFamilyList for a given ifi",
        "description" : "",
        "operationId" : "getProductFamilyList",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetProductFamilyListResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/productFamilies/{productFamilyID}/products" : {
      "get" : {
        "summary" : "Get Products by productFamilyID",
        "description" : "",
        "operationId" : "getProducts",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "productFamilyID",
          "in" : "path",
          "description" : "ProductFamilyID of required products",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Name of product",
          "required" : false,
          "type" : "string",
          "x-example" : "test"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "No of products needed in response",
          "required" : true,
          "type" : "integer",
          "format" : "int32",
          "x-example" : 10
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "description" : "Page number for products needed in response",
          "required" : true,
          "type" : "integer",
          "format" : "int32",
          "x-example" : "test"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetProductListResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/productFamilies/{productFamilyID}/programs" : {
      "get" : {
        "summary" : "Get programs by productFamilyID",
        "description" : "",
        "operationId" : "getPrograms",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "productFamilyID",
          "in" : "path",
          "description" : "ProductFamilyID of required programs",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Name of program",
          "required" : false,
          "type" : "string",
          "x-example" : "test"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "No of programs needed in response",
          "required" : true,
          "type" : "integer",
          "format" : "int32",
          "x-example" : 10
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "description" : "Page number for programs needed in response",
          "required" : true,
          "type" : "integer",
          "format" : "int32",
          "x-example" : "test"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/productFamilies/{productFamilyId}" : {
      "get" : {
        "summary" : "Get ProductFamily for a given ifi and id",
        "description" : "",
        "operationId" : "getProductFamily",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "productFamilyId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProductFamily"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/products/{productID}" : {
      "get" : {
        "summary" : "Get TransactionPolicy with a given ID",
        "description" : "",
        "operationId" : "getProductByIFIAndID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "productID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransactionPolicyResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/resourceByVector" : {
      "get" : {
        "summary" : "Get resource details by vector",
        "description" : "",
        "operationId" : "getResourceByAccountHolder",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/resource_products/{resourceProductID}" : {
      "get" : {
        "tags" : [ "Resource Product" ],
        "summary" : "",
        "description" : "Get Resource Product details by ID",
        "operationId" : "getResourceProduct",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resourceProductID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ResourceProduct"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/resource_products/{resourceProductID}/interceptors" : {
      "get" : {
        "summary" : "List Interceptor",
        "description" : "",
        "operationId" : "listInterceptor",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "resourceProductID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ListInterceptorResponse"
            }
          }
        }
      },
      "post" : {
        "summary" : "Add Interceptor",
        "description" : "",
        "operationId" : "addInterceptor",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "resourceProductID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Builder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Interceptor"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/resource_products/{resourceProductID}/interceptors/{interceptorID}" : {
      "get" : {
        "summary" : "Get Interceptor",
        "description" : "",
        "operationId" : "getInterceptor",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "resourceProductID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "interceptorID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Interceptor"
            }
          }
        }
      },
      "patch" : {
        "summary" : "Update Interceptor",
        "description" : "",
        "operationId" : "updateInterceptor",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "resourceProductID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "interceptorID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Builder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Interceptor"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/resource_products/{resourceProductID}/resources/list" : {
      "post" : {
        "tags" : [ "Resource" ],
        "summary" : "",
        "description" : "List resource details by resourceProduct ID",
        "operationId" : "filterResourceProductBasedResources",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resourceProductID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Builder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Resource"
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/resources/{resourceID}" : {
      "get" : {
        "tags" : [ "Resource" ],
        "summary" : "",
        "description" : "Get resource details by ID",
        "operationId" : "getResource",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resourceID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          }
        }
      },
      "patch" : {
        "summary" : "Change the resource status",
        "description" : "",
        "operationId" : "updateResource",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resourceID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Builder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/resources/{resourceID}/form_factors" : {
      "post" : {
        "tags" : [ "Form Factor" ],
        "summary" : "",
        "description" : "Add (already provisioned) form factor to an existing resource",
        "operationId" : "insertFormFactor",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resourceID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Builder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/InsertFormFactorResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/resources/{resourceID}/form_factors/create" : {
      "post" : {
        "summary" : "Provision form factor and link it to an existing resource",
        "description" : "",
        "operationId" : "provisionFormFactor",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resourceID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Builder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CreateAndLinkFormFactorResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/resources/{resourceID}/form_factors/{formFactorID}" : {
      "get" : {
        "tags" : [ "Form Factor" ],
        "summary" : "",
        "description" : "Get form factor details by ID",
        "operationId" : "getFormFactor",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resourceID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "formFactorID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FormFactor"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/resources/{resourceID}/form_factors/{formfactorID}" : {
      "patch" : {
        "tags" : [ "Form Factor" ],
        "summary" : "",
        "description" : "Change the resource linked form factor status",
        "operationId" : "updateResourceLinkedFormFactor",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resourceID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "formfactorID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Builder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FormFactor"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/resources/{resourceID}/payments/list" : {
      "get" : {
        "summary" : "Filter payment details by resourceID",
        "description" : "",
        "operationId" : "getPaymentsByResourceId",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "resourceID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ListPaymentResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/resources/{resourceID}/payments/{paymentID}" : {
      "get" : {
        "summary" : "Get payment details by paymentID and resourceID",
        "description" : "",
        "operationId" : "getPayment",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "resourceID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "paymentID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Payment"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/resources/{resourceID}/payments/{paymentID}/resume" : {
      "post" : {
        "summary" : "Resume Intercepted Payment",
        "description" : "",
        "operationId" : "resumePayment",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "resourceID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "paymentID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Builder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EmptyPayload"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/resources/{resourceID}/target" : {
      "patch" : {
        "tags" : [ "Resource" ],
        "summary" : "",
        "description" : "Change the resource target account",
        "operationId" : "updateResourceTarget",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resourceID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Builder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/resources/{resourceID}/vectors" : {
      "post" : {
        "summary" : "Add vector to resource",
        "description" : "",
        "operationId" : "addResourceVector",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "resourceID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Vector"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/transactionPolicies" : {
      "get" : {
        "summary" : "Get all transaction policies for a given IFI",
        "description" : "",
        "operationId" : "getAllTransactionPoliciesByIFI",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAllTransactionPoliciesResponse"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create TransactionPolicy",
        "description" : "",
        "operationId" : "createTransactionPolicy",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Builder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransactionPolicyResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/transactionPolicies/updateState" : {
      "post" : {
        "summary" : "Replace Policy",
        "description" : "",
        "operationId" : "updatePolicyState",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdatePolicyStateRequestPayload"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EmptyPayload"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/transactionPolicies/{transactionPolicyID}" : {
      "put" : {
        "summary" : "Replace Transaction Policy",
        "description" : "",
        "operationId" : "replaceTransactionPolicy",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "transactionPolicyID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ReplaceTransactionPolicyRequestPayload"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransactionPolicyResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/transactionPolicies/{transactionPolicyId}" : {
      "patch" : {
        "summary" : "Update Transaction Policy State",
        "description" : "",
        "operationId" : "updateTransactionPolicyState",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "transactionPolicyId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateTransactionPolicyStateRequestPayload"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EmptyPayload"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/transactions" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get all payments of user",
        "description" : "",
        "operationId" : "getPayments",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account holder exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "accountID",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "startTime",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "endTime",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "lastFetchedId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetTransactionsResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/transactions/{transactionID}/reversal" : {
      "post" : {
        "tags" : [ "Account Management" ],
        "summary" : "Reversal from one account to another",
        "description" : "",
        "operationId" : "reversals",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account transfer is being performed",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "transactionID",
          "in" : "path",
          "description" : "ID of the transaction for which reversal is required",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ReversalRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/A2AReversalTransactionResponse"
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/transfers" : {
      "post" : {
        "tags" : [ "Account Management" ],
        "summary" : "Transfer from one account to another",
        "description" : "",
        "operationId" : "transfer",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account transfer is being performed",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TransferRequestV1"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransferResponse"
            }
          }
        }
      }
    },
    "/api/v1/support/ifi/{ifiID}/individuals/{individualID}/accounts/{accountID}/transactions" : {
      "get" : {
        "tags" : [ "SupportCentre" ],
        "summary" : "Get all transactions of an account",
        "description" : "",
        "operationId" : "getTransactions",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account transactions exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual to which the account belongs",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d12345"
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose transaction details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountTransactionListResponse"
            }
          }
        }
      }
    },
    "/api/v1/support/ifi/{ifiID}/individuals/{individualID}/dob" : {
      "post" : {
        "tags" : [ "SupportCentre" ],
        "operationId" : "updateAccountHolderDob",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "individualID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "dob",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "format" : "date-time"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolder"
            }
          }
        }
      }
    },
    "/api/v1/support/ifi/{ifiID}/individuals/{individualID}/gender/{gender}" : {
      "post" : {
        "tags" : [ "SupportCentre" ],
        "operationId" : "updateAccountHolderGender",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "individualID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "gender",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolder"
            }
          }
        }
      }
    },
    "/api/v1/support/ifi/{ifiID}/individuals/{individualID}/name/{accountHolderName}" : {
      "post" : {
        "tags" : [ "SupportCentre" ],
        "operationId" : "updateAccountHolderName",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "individualID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "accountHolderName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolder"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accountHolder/headless" : {
      "post" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Create a headless account holder",
        "description" : "",
        "operationId" : "createHeadlessAccountHolder",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the headless account holder is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateAccountHolderRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolderResponse"
            }
          },
          "201" : {
            "description" : ""
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accountHolders/{accountHolderID}" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get details of an individual by ID",
        "description" : "",
        "operationId" : "getAccountHolderByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the individual exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountHolderID",
          "in" : "path",
          "description" : "ID of the individual whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolderResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accounts" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get all accounts of IFI",
        "description" : "",
        "operationId" : "getAccounts",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the accounts exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "lastFetchedId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountListResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accounts/update" : {
      "post" : {
        "tags" : [ "Account Management" ],
        "summary" : "Update all Accounts for a given real or headless account holder",
        "description" : "",
        "operationId" : "accountHolderUpdated",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ifiID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateProductForAllAccountsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EmptyPayload"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accounts/{accountID}" : {
      "get" : {
        "tags" : [ "Account" ],
        "summary" : "",
        "description" : "Returns Account object given an accountID. The accountID should be a UUID.",
        "operationId" : "getAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization).",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the Account whose details are to be retrieved.",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accounts/{accountID}/accessors" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get all accessors for a given accountID",
        "description" : "",
        "operationId" : "getAccountAccessors",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account accessors exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose accessor details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountAccessorListStandardResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Account Management" ],
        "summary" : "Create accessors for the given accountID",
        "description" : "",
        "operationId" : "createAccountAccessor",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account accessor is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account for which the accessor is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddAccountAccessorRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Accessor"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accounts/{accountID}/accessors/{accessorID}" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get accessor for a given accountID by the ID",
        "description" : "",
        "operationId" : "getAccountAccessorByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account accessor exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose accessor details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "accessorID",
          "in" : "path",
          "description" : "ID of the accessor whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountAccessorResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accounts/{accountID}/balance" : {
      "get" : {
        "tags" : [ "Account" ],
        "summary" : "",
        "description" : "Get Balance of the accountID provided.",
        "operationId" : "getBalance",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization).",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the Account whose balance details are to be retrieved.",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountBalanceResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accounts/{accountID}/relations" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get all relations of the given accountID",
        "description" : "",
        "operationId" : "getAccountRelations",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account relations exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose relation details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountRelationListStandardResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Account Management" ],
        "summary" : "Create relation for the given accountID",
        "description" : "",
        "operationId" : "createAccountRelation",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account relation is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account for which relation is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddAccountRelationRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountRelationResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accounts/{accountID}/relations/{relationID}" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get the relation of an account by the ID",
        "description" : "",
        "operationId" : "getAccountRelationByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account relation exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose relation details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "relationID",
          "in" : "path",
          "description" : "ID of the relation whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountRelationResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accounts/{accountID}/transactionPolicies" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get transaction policies of account by accountID",
        "description" : "",
        "operationId" : "getTransactionPoliciesByAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the policies exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose policy details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "maximum" : 50,
          "minimum" : 1,
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetTransactionPolicyResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accounts/{accountID}/transactions" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get all transactions of an account",
        "description" : "",
        "operationId" : "getTransactions",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account transactions exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose transaction details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "maximum" : 50,
          "minimum" : 1,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountTransaction"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accounts/{accountID}/transactions/{transactionID}" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get information of a specific transaction as per ID",
        "description" : "",
        "operationId" : "getTransaction",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account transaction exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose transaction details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "transactionID",
          "in" : "path",
          "description" : "ID of the transaction whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountTransaction"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accounts/{accountID}/updateStatus" : {
      "put" : {
        "tags" : [ "Account Management" ],
        "summary" : "Update Account Status",
        "description" : "",
        "operationId" : "updateAccountStatus",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the Account",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateAccountStatusRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UpdateAccountStatusResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accounts/{accountID}/vectors" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get all vectors of the given accountID",
        "description" : "",
        "operationId" : "getAccountVectors",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account vector exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose vector details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountVectorListStandardResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Account Management" ],
        "summary" : "Create vector for the given accountID",
        "description" : "",
        "operationId" : "createAccountVector",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account vector is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose vector details are being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddAccountVectorRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountVectorResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accounts/{accountID}/vectors/{vectorID}" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get the vector of an account by ID",
        "description" : "",
        "operationId" : "getAccountVectorByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account vector exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose vector details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "vectorID",
          "in" : "path",
          "description" : "ID of the vector whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountVectorResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accountsInfo/{accountID}" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "operationId" : "getAccountInfo",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountInfoResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/applications" : {
      "get" : {
        "summary" : "Get All Applications",
        "description" : "",
        "operationId" : "getAllApplications",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "status",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "maximum" : 50,
          "minimum" : 1,
          "format" : "int32"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PagedModel"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/applications/editIndividual" : {
      "post" : {
        "summary" : "Edit Individual Application",
        "description" : "",
        "operationId" : "editApplication",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/EditIndividualApplicationStandardRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/applications/newIndividual" : {
      "post" : {
        "summary" : "Create Individual Application With Auto Approval",
        "description" : "",
        "operationId" : "createApplicationWithAutoApproval",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateAccountHolderWithAutoApprovalStandardRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/applications/newIndividualApplication" : {
      "post" : {
        "summary" : "Create Individual Application",
        "description" : "",
        "operationId" : "createApplication",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateAccountHolderApplicationStandardRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/applications/{applicationID}" : {
      "get" : {
        "summary" : "Get Individual Application",
        "description" : "",
        "operationId" : "getApplication",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update Individual Application",
        "description" : "",
        "operationId" : "updateApplication",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateAccountHolderApplicationStandardRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete Individual Application",
        "description" : "",
        "operationId" : "deleteApplication",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/applications/{applicationID}/kycStatus/{kycStatus}" : {
      "put" : {
        "summary" : "Update Application Status",
        "description" : "",
        "operationId" : "updateApplicationKYCStatus",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "kycStatus",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateKycStatusStandardRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/applications/{applicationID}/spool/{spoolID}" : {
      "put" : {
        "summary" : "Update Application Spool",
        "description" : "",
        "operationId" : "updateApplicationSpool",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "spoolID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/applications/{applicationID}/status/{newStatus}" : {
      "put" : {
        "summary" : "Update Application Status",
        "description" : "",
        "operationId" : "updateApplicationStatus",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "newStatus",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/athena-manager/createEntityPolicyMapping" : {
      "post" : {
        "summary" : "Create Entity Policy Mapping",
        "description" : "",
        "operationId" : "createPolicyMapping",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreatePolicyMappingRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PolicyMappingStandardResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/athena-manager/createExtendedProduct" : {
      "post" : {
        "summary" : "CreateExtendedProduct api via fusion",
        "description" : "",
        "operationId" : "createExtendedProduct",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateExtendedProductRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProductResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/athena-manager/createExtendedProductFamily" : {
      "post" : {
        "summary" : "CreateExtendedProductFamily api via fusion",
        "description" : "",
        "operationId" : "createExtendedProductFamily",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateExtendedProductFamilyRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProductFamilyResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/athena-manager/entitycode/{entity}" : {
      "get" : {
        "summary" : "Get Entity Code",
        "description" : "",
        "operationId" : "getEntityCode",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "entity",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EntityCodeResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/athena-manager/getAllTransactionPoliciesByIFI" : {
      "get" : {
        "summary" : "Get all transaction policies for a given IFI",
        "description" : "",
        "operationId" : "getAllTransactionPoliciesByIFI",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "maximum" : 50,
          "minimum" : 1,
          "format" : "int64"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int64"
        }, {
          "name" : "showLimits",
          "in" : "query",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PagedModel"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/athena-manager/getCoaList" : {
      "get" : {
        "summary" : "Get all CoAs for a given IFI",
        "description" : "",
        "operationId" : "getCoaListByIFI",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "No of products needed in response",
          "required" : true,
          "type" : "integer",
          "maximum" : 50,
          "minimum" : 1,
          "format" : "int32",
          "x-example" : 10
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "description" : "Page number for products needed in response",
          "required" : true,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int32",
          "x-example" : "test"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PagedModel"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/athena-manager/getCoaNodes" : {
      "get" : {
        "summary" : "Get all CoA Nodes for a given IFI and CoAID",
        "description" : "",
        "operationId" : "getCoaNodesByIFIAndCoaID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "coaID",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetCoaNodesResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/athena-manager/getEntityGroupList" : {
      "get" : {
        "summary" : "Get EntityGrouplist for a given ifi and entityType",
        "description" : "",
        "operationId" : "getEntityGroupList",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "entityType",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "maximum" : 50,
          "minimum" : 1,
          "format" : "int64"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int64"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PagedModel"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/athena-manager/getPolicyMappings" : {
      "get" : {
        "summary" : "Get PolicyMappings for a given ifi, entityID, policyEntityType, policyType and PolicyId",
        "description" : "",
        "operationId" : "getPolicyMappings",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "entityID",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyEntityType",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyType",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyID",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "maximum" : 50,
          "minimum" : 1,
          "format" : "int64"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int64"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PagedModel"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/athena-manager/getProduct" : {
      "get" : {
        "summary" : "Get Product with a given IFI and ProductID",
        "description" : "",
        "operationId" : "getProductByIFIAndID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "id",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProductResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/athena-manager/getProductFamily" : {
      "get" : {
        "summary" : "Get ProductFamily for a given ifi and id",
        "description" : "",
        "operationId" : "getProductFamily",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "productFamilyId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123456789065434567
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProductFamilyResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/athena-manager/getProductFamilyList" : {
      "get" : {
        "summary" : "Get ProductFamilyList for a given ifi",
        "description" : "",
        "operationId" : "getProductFamilyList",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "No of products needed in response",
          "required" : true,
          "type" : "integer",
          "maximum" : 50,
          "minimum" : 1,
          "format" : "int32",
          "x-example" : 10
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "description" : "Page number for products needed in response",
          "required" : true,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int32",
          "x-example" : "test"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PagedModel"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/athena-manager/getProductList" : {
      "get" : {
        "summary" : "Get ProductList for a given ifi",
        "description" : "",
        "operationId" : "getProductList",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "No of products needed in response",
          "required" : true,
          "type" : "integer",
          "maximum" : 50,
          "minimum" : 1,
          "format" : "int32",
          "x-example" : 10
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "description" : "Page number for products needed in response",
          "required" : true,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int32",
          "x-example" : "test"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PagedModel"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/athena-manager/getTransactionPoliciesByEntityID" : {
      "get" : {
        "summary" : "get Transaction Policies by EntityID",
        "description" : "",
        "operationId" : "getTransactionPoliciesByEntityID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAllTransactionPoliciesResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/athena-manager/getTransactionPolicyByID" : {
      "get" : {
        "summary" : "Get TransactionPolicy with a given ID",
        "description" : "",
        "operationId" : "getProductByIFIAndID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "id",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransactionPolicyStandardResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/athena-manager/replaceTransactionPolicy/{transactionPolicyID}" : {
      "put" : {
        "summary" : "Replace Transaction Policy",
        "description" : "",
        "operationId" : "replaceTransactionPolicy",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "transactionPolicyID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ReplaceTransactionPolicyRequestPayload"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransactionPolicyStandardResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/athena-manager/transactionPolicy" : {
      "post" : {
        "summary" : "Create TransactionPolicy",
        "description" : "",
        "operationId" : "createTransactionPolicy",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Builder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransactionPolicyStandardResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/athena-manager/updateTransactionPolicy/{transactionPolicyId}" : {
      "patch" : {
        "summary" : "Update Transaction Policy State",
        "description" : "",
        "operationId" : "updateTransactionPolicyState",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "transactionPolicyId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateTransactionPolicyStateRequestPayload"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EmptyPayload"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/bundles" : {
      "get" : {
        "tags" : [ "Bundles" ],
        "summary" : "Get all Bundles",
        "description" : "Get all Bundles available for an IFI. The response returns a unique identifier for each available Bundle.",
        "operationId" : "getAllBundles",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundles are being retrieved",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "description" : "Page number of the request",
          "required" : true,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Page Size of the request",
          "required" : true,
          "type" : "integer",
          "maximum" : 50,
          "minimum" : 1,
          "format" : "int64"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort by a given value",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "description" : "Order of the request i.e asc or desc",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PagedModel"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Bundles" ],
        "summary" : "Create Bundle",
        "description" : "Creates a Bundle",
        "operationId" : "createBundle",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundle is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddBundleRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/IBundleView"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/bundles/{bundleID}" : {
      "get" : {
        "tags" : [ "Bundles" ],
        "summary" : "Get Bundle by Bundle ID",
        "description" : "Returns Bundle by bundleID for an IFI.",
        "operationId" : "getBundleByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundles are being retrieved by bundleID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose details are being retrieved",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/IBundleView"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Bundles" ],
        "summary" : "Update Bundle",
        "description" : "Update Bundle details",
        "operationId" : "updateBundle",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundle is being updated",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose details are being updated",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateBundleRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/IBundleView"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Bundles" ],
        "summary" : "Delete Bundle",
        "description" : "Delete a Bundle",
        "operationId" : "deleteBundle",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundle is being deleted",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle which is being deleted",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/IBundleView"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/bundles/{bundleID}/issueAccountProducts" : {
      "post" : {
        "summary" : "Issue specific Account from a bundle ",
        "description" : "",
        "operationId" : "issueMultipleAccountProducts",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the Account is being issued",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose account product is being issued",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IssueAccountProductsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/IssueAccountArtifactResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/bundles/{bundleID}/issueBundle" : {
      "post" : {
        "summary" : "Issue bundle to a specific individual/company",
        "description" : "",
        "operationId" : "issueBundle",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundle is being issued",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle which is being issued",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IssueBundleRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/IssueBundleResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/bundles/{bundleID}/issueBundleOverridingAssessment" : {
      "post" : {
        "summary" : "Issue bundle to a specific individual/company without Assessment irrespective of ifi whitelisting",
        "description" : "",
        "operationId" : "issueBundleOverridingOFACCheck",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundle is being issued",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle which is being issued",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/OverrideIssuanceRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/IssueBundleResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/bundles/{bundleID}/issueFormFactor" : {
      "post" : {
        "summary" : "Issue specific form factor of a resource to a specific individual/company",
        "description" : "",
        "operationId" : "issueFormFactor",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the form factor is being issued",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose form factor/card is being issued",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IssueFormFactorStandardRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/IssueFormFactorResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/bundles/{bundleID}/issuePaymentProducts" : {
      "post" : {
        "summary" : "Issue specific Account from a bundle ",
        "description" : "",
        "operationId" : "issueMultiplePaymentProducts",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the Resource is being issued",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose account product is being issued",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IssuePaymentProductsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/IssueAccountArtifactResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/bundles/{bundleID}/issueResource" : {
      "post" : {
        "summary" : "Issue specific resource of a bundle to a specific individual/company",
        "description" : "",
        "operationId" : "issueResource",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the resource is being issued",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose resource is being issued",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IssueResourceStandardRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/IssueResourceResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/companies/{companyID}/beneficiaries" : {
      "get" : {
        "summary" : "Get all the beneficiaries of a company",
        "description" : "",
        "operationId" : "getBeneficiaries",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary details are being retrieved",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiaries list are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PagedModel"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new beneficiary of a company",
        "description" : "",
        "operationId" : "createBeneficiary",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiary is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateCorporateBeneficiaryRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CorporateBeneficiaryResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/companies/{companyID}/beneficiaries/{beneficiaryID}" : {
      "get" : {
        "summary" : "Get details of a beneficiary by ID",
        "description" : "",
        "operationId" : "getBeneficiaryByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiary details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CorporateBeneficiaryResponse"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update a beneficiary of a company",
        "description" : "",
        "operationId" : "updateBeneficiary",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiary is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary which is being updated belonging to an company",
          "required" : true,
          "type" : "string",
          "x-example" : "f0e68249-aed0-4359-9df2-a89a350567e9"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateCorporateBeneficiaryRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CorporateBeneficiaryResponse"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a beneficiary of a company",
        "description" : "",
        "operationId" : "deleteBeneficiary",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiary is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary which is being updated belonging to an company",
          "required" : true,
          "type" : "string",
          "x-example" : "f0e68249-aed0-4359-9df2-a89a350567e9"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CorporateBeneficiaryResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/companies/{companyID}/beneficiaries/{beneficiaryID}/accounts" : {
      "get" : {
        "summary" : "Get all the accounts of a beneficiary",
        "description" : "",
        "operationId" : "getBeneficiaryAccounts",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary accounts are being retrieved",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiary is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PagedModel"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new beneficiary account of a beneficiary",
        "description" : "",
        "operationId" : "createBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiary is",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary whose account is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateCorporateBeneficiaryAccountRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CorporateBeneficiaryAccountResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/companies/{companyID}/beneficiaries/{beneficiaryID}/accounts/{accountID}" : {
      "get" : {
        "summary" : "Get details of a specific beneficiary account of an company's beneficiary ",
        "description" : "",
        "operationId" : "getBeneficiaryAccountByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary account being retrieved exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiary account being retrieved exists",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary whose beneficiary account details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the beneficiary account whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryAccountResponse"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update a account of a beneficiary",
        "description" : "",
        "operationId" : "updateBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiary is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary which is being updated belonging to an company",
          "required" : true,
          "type" : "string",
          "x-example" : "f0e68249-aed0-4359-9df2-a89a350567e9"
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account being updated",
          "required" : true,
          "type" : "string",
          "x-example" : "f0e68249-aed0-4359-9df2-a89a350567e9"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateCorporateBeneficiaryAccountRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CorporateBeneficiaryAccountResponse"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a account of a beneficiary",
        "description" : "",
        "operationId" : "deleteBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiary is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary which is being updated belonging to an company",
          "required" : true,
          "type" : "string",
          "x-example" : "f0e68249-aed0-4359-9df2-a89a350567e9"
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account being updated",
          "required" : true,
          "type" : "string",
          "x-example" : "f0e68249-aed0-4359-9df2-a89a350567e9"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CorporateBeneficiaryAccountResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/companies/{companyID}/beneficiaries/{beneficiaryID}/accounts/{beneficiaryAccountID}/transfers" : {
      "post" : {
        "tags" : [ "Beneficiary Transfers" ],
        "summary" : "Perform transfer to a beneficiary account of an company",
        "description" : "",
        "operationId" : "transferToBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary transfer is being performed",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company who is performing the beneficiary transfer",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary to whom the transfer is being performed",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryAccountID",
          "in" : "path",
          "description" : "ID of the account of beneficiary to which money has to be transferred",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BeneficiaryAccountTransactionFusionRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryTransactionFusionResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/companies/{companyID}/beneficiaryTransfers" : {
      "get" : {
        "tags" : [ "Beneficiary Transfers" ],
        "summary" : "Get all the beneficiary transfers of an company",
        "description" : "",
        "operationId" : "getAllBeneficiaryTransfers",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary whose transfers are being retrieved",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiary transfers are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PagedModel"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/companies/{companyID}/beneficiaryTransfers/{transferID}" : {
      "get" : {
        "tags" : [ "Beneficiary Transfers" ],
        "summary" : "Get the details of a transfer by ID",
        "description" : "",
        "operationId" : "getBeneficiaryTransferByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary transfer exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "companyID",
          "in" : "path",
          "description" : "ID of the company for whom the beneficiary transfer details are being fetched",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "transferID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryTransaction"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/errorCodes" : {
      "get" : {
        "summary" : "Get All Policy Errors",
        "description" : "",
        "operationId" : "getPolicyErrors",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization).",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetPolicyErrorsResponse"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create Policy Error Code",
        "description" : "",
        "operationId" : "createPolicyErrorCode",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization).",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddPolicyErrorCodeRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PolicyErrorCodeResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/errorCodes/{errorCode}" : {
      "get" : {
        "summary" : "Get Policy Error Code",
        "description" : "",
        "operationId" : "getPolicyErrorCode",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization).",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "errorCode",
          "in" : "path",
          "description" : "Policy Error Code ",
          "required" : true,
          "type" : "string",
          "x-example" : "ERIN0012345"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PolicyErrorCodeResponse"
            }
          }
        }
      },
      "post" : {
        "summary" : "update a policy error",
        "description" : "",
        "operationId" : "updatePolicyErrorCode",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization).",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "errorCode",
          "in" : "path",
          "description" : "Policy Error Code ",
          "required" : true,
          "type" : "string",
          "x-example" : "ERIN0012345"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdatePolicyErrorCodeRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PolicyErrorCodeResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/getAllAccountHolders" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get paginated AccountHolders list of type belonging to ifi",
        "description" : "",
        "operationId" : "getAllAccountHolders",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the individual exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "accountHolderType",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "enum" : [ "REAL", "LEGAL", "HEADLESS" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAllAccountHoldersResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/individualApplications/{applicationID}/pops" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get all the Point of Presence(POP)s of an individual",
        "description" : "",
        "operationId" : "getAccountHolderPops",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account holder POP exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application for which the account holder POP is being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "maximum" : 50,
          "minimum" : 1,
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PagedModel"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Create the Point of Presence(POP) of an individual",
        "description" : "",
        "operationId" : "addAccountHolderPop",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the individual's POPs exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application for which the POP is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddAccountHolderPOPRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/POPResponse"
            }
          },
          "201" : {
            "description" : ""
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/individualApplications/{applicationID}/pops/{popID}" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get the Point of Presence(POP) of an individual by ID",
        "description" : "",
        "operationId" : "getAccountHolderPopsByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the individual's POP exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application for which the account holder POP is being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        }, {
          "name" : "popID",
          "in" : "path",
          "description" : "ID of the POP whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/POPResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/individualApplications/{applicationID}/relationships" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get all relationships of an individual",
        "description" : "",
        "operationId" : "getAccountHolderRelationships",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account holder relationships exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application for which the account holder relationships are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "maximum" : 50,
          "minimum" : 1,
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PagedModel"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Create the relationship for an individual",
        "description" : "",
        "operationId" : "addAccountHolderRelationship",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account holder relation is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application for which the account holder relation is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddAccountHolderRelationshipRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolderRelationResponse"
            }
          },
          "201" : {
            "description" : ""
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/individualApplications/{applicationID}/relationships/{relationshipID}" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get a specific individual's relationship by ID",
        "description" : "",
        "operationId" : "getAccountHolderRelationshipByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account holder relationship exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application for which the account holder relationship is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        }, {
          "name" : "relationshipID",
          "in" : "path",
          "description" : "ID of the relationship whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolderRelationResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/individualApplications/{applicationID}/vectors" : {
      "post" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Create the vector for an individual",
        "description" : "",
        "operationId" : "addAccountHolderVector",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account holder vector is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application for which the account holder vector is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddAccountHolderVectorRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolderVectorResponse"
            }
          },
          "201" : {
            "description" : ""
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/individualApplications/{applicationID}/vectors/{vectorID}" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get the vector of an individual by ID",
        "description" : "",
        "operationId" : "getAccountHolderVector",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account holder",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "applicationID",
          "in" : "path",
          "description" : "ID of the application for which the account holder vector is being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "123123"
        }, {
          "name" : "vectorID",
          "in" : "path",
          "description" : "ID of the vector whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolderVectorResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/individualByVector/{vectorType}/{vectorValue}" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get the Account Holder by Vector",
        "description" : "",
        "operationId" : "getAccountHolderByVector",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account holder",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "vectorType",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "vectorValue",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolderVectorResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/individuals/{individualID}/accounts" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get all accounts of an individual",
        "description" : "",
        "operationId" : "getAccounts",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the accounts exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual whose accounts are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountListResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/individuals/{individualID}/beneficiaries" : {
      "get" : {
        "summary" : "Get all the beneficiaries of an individual",
        "description" : "",
        "operationId" : "getBeneficiaries",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary details are being retrieved",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiaries list are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "maximum" : 50,
          "minimum" : 1,
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PagedModel"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new beneficiary of an individual",
        "description" : "",
        "operationId" : "createBeneficiary",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateBeneficiaryRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/individuals/{individualID}/beneficiaries/{beneficiaryID}" : {
      "get" : {
        "summary" : "Get details of a beneficiary by ID",
        "description" : "",
        "operationId" : "getBeneficiaryByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryResponse"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update a beneficiary of an individual",
        "description" : "",
        "operationId" : "updateBeneficiary",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary which is being updated belonging to an individual",
          "required" : true,
          "type" : "string",
          "x-example" : "f0e68249-aed0-4359-9df2-a89a350567e9"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateBeneficiaryRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryResponse"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a beneficiary of an individual",
        "description" : "",
        "operationId" : "deleteBeneficiary",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary which is being updated belonging to an individual",
          "required" : true,
          "type" : "string",
          "x-example" : "f0e68249-aed0-4359-9df2-a89a350567e9"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/individuals/{individualID}/beneficiaries/{beneficiaryID}/accounts" : {
      "get" : {
        "summary" : "Get all the accounts of a beneficiary",
        "description" : "",
        "operationId" : "getBeneficiaryAccounts",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary accounts are being retrieved",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary accounts are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "maximum" : 50,
          "minimum" : 1,
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PagedModel"
            }
          }
        }
      },
      "post" : {
        "summary" : "Creation of a beneficiary account",
        "description" : "",
        "operationId" : "createBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary account is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary account is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddBeneficiaryAccountForBeneficiaryFusionRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryAccountResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/individuals/{individualID}/beneficiaries/{beneficiaryID}/accounts/{accountID}" : {
      "get" : {
        "summary" : "Get details of a specific beneficiary account of an individual's beneficiary ",
        "description" : "",
        "operationId" : "getBeneficiaryAccountByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary account being retrieved exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary account being retrieved exists",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary whose beneficiary account details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the beneficiary account whose details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryAccountResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/individuals/{individualID}/beneficiaries/{beneficiaryID}/accounts/{accountID}/transfers" : {
      "post" : {
        "tags" : [ "Beneficiary Transfers" ],
        "summary" : "",
        "description" : "Perform transfer to a beneficiary account of an individual.",
        "operationId" : "transferToBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary transfer is being performed",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual who is performing the beneficiary transfer",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary to whom the transfer is being performed",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account of beneficiary to which money has to be transferred",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BeneficiaryAccountTransactionFusionRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryTransactionFusionResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/individuals/{individualID}/beneficiaries/{beneficiaryID}/accounts/{beneficiaryAccountID}" : {
      "put" : {
        "summary" : "Update of a beneficiary account",
        "description" : "",
        "operationId" : "updateBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary account is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary account is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "beneficiaryAccountID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateBeneficiaryAccountFusionRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryAccountResponse"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete of a beneficiary account",
        "description" : "",
        "operationId" : "deleteBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary account is being created",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary account is being created",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "beneficiaryAccountID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryAccountResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/individuals/{individualID}/beneficiaryTransfers" : {
      "get" : {
        "tags" : [ "Beneficiary Transfers" ],
        "summary" : "",
        "description" : "Get all the beneficiary transfers of an individual.",
        "operationId" : "getAllBeneficiaryTransfers",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary whose transfers are being retrieved",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary transfers are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "maximum" : 50,
          "minimum" : 1,
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PagedModel"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/individuals/{individualID}/beneficiaryTransfers/{transferID}" : {
      "get" : {
        "tags" : [ "Beneficiary Transfers" ],
        "summary" : "",
        "description" : "Get the details of a transfer by ID",
        "operationId" : "getBeneficiaryTransferByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary transfer exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary transfer details are being fetched",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "transferID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryTransaction"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/ledger/createCoa" : {
      "post" : {
        "summary" : "Create Coa",
        "description" : "",
        "operationId" : "createCoA",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CreateCoaResponsePayload"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/ledger/createCoaNode" : {
      "post" : {
        "summary" : "Create Coa node",
        "description" : "",
        "operationId" : "createCoANode",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CreateCoaNodeResponsePayload"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/ledger/createPolicy" : {
      "post" : {
        "summary" : "Create Policy",
        "description" : "",
        "operationId" : "createPolicy",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreatePolicyRequestPayload"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CreatePolicyResponsePayload"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/ledger/getAggregateExpressionList" : {
      "get" : {
        "summary" : "get All Aggregation Expressions",
        "description" : "",
        "operationId" : "getAggregateExpressionList",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "maximum" : 50,
          "minimum" : 1,
          "format" : "int64"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PagedModel"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/ledger/getAllCoas" : {
      "get" : {
        "summary" : "Get All Coas",
        "description" : "",
        "operationId" : "getAllCoas",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "maximum" : 50,
          "minimum" : 1,
          "format" : "int64"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAllCoAsResponsePayload"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/ledger/getAllTransactionCategories" : {
      "get" : {
        "summary" : "get All Transaction Categories",
        "description" : "",
        "operationId" : "getAllTransactionCategories",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "maximum" : 50,
          "minimum" : 1,
          "format" : "int64"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAllTxnCategoriesResponsePayload"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/ledger/getCalender" : {
      "get" : {
        "summary" : "Get Calender",
        "description" : "",
        "operationId" : "getCalendar",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetCalendarResponsePayload"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/ledger/getPolicies" : {
      "get" : {
        "summary" : "get Policies",
        "description" : "",
        "operationId" : "getPolicies",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "maximum" : 50,
          "minimum" : 1,
          "format" : "int64"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PagedModel"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/ledger/getPolicy" : {
      "get" : {
        "summary" : "get Policy",
        "description" : "",
        "operationId" : "getPolicy",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PolicyResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/ledger/replacePolicy" : {
      "post" : {
        "summary" : "Replace Policy",
        "description" : "",
        "operationId" : "replacePolicy",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ReplacePolicyRequestPayload"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ReplacePolicyResponsePayload"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/ledger/updatePolicyState" : {
      "post" : {
        "summary" : "Replace Policy",
        "description" : "",
        "operationId" : "updatePolicyState",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdatePolicyStateRequestPayload"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EmptyPayload"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/productFamilies/{productFamilyID}/products" : {
      "get" : {
        "summary" : "Get Products by productFamilyID",
        "description" : "",
        "operationId" : "getProducts",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "productFamilyID",
          "in" : "path",
          "description" : "ProductFamilyID of required products",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Name of product",
          "required" : false,
          "type" : "string",
          "x-example" : "test"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "No of products needed in response",
          "required" : true,
          "type" : "integer",
          "maximum" : 50,
          "minimum" : 1,
          "format" : "int32",
          "x-example" : 10
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "description" : "Page number for products needed in response",
          "required" : true,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int32",
          "x-example" : "test"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PagedModel"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/productFamilies/{productFamilyID}/programs" : {
      "get" : {
        "summary" : "Get programs by productFamilyID",
        "description" : "",
        "operationId" : "getPrograms",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account exists",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "productFamilyID",
          "in" : "path",
          "description" : "ProductFamilyID of required programs",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Name of program",
          "required" : false,
          "type" : "string",
          "x-example" : "test"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "No of programs needed in response",
          "required" : true,
          "type" : "integer",
          "maximum" : 50,
          "minimum" : 1,
          "format" : "int32",
          "x-example" : 10
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "description" : "Page number for programs needed in response",
          "required" : true,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int32",
          "x-example" : "test"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Sort By needed in response",
          "required" : false,
          "type" : "string",
          "x-example" : "createdAt"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "description" : "Sort Order needed in response",
          "required" : false,
          "type" : "string",
          "x-example" : "asc"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PagedModel"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/resourceByVector" : {
      "get" : {
        "summary" : "Get resources vector",
        "description" : "",
        "operationId" : "getResourceByAccountHolder",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Resource"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/transactionCategories" : {
      "get" : {
        "summary" : "Get All TransactionCategory for an IFI",
        "description" : "",
        "operationId" : "getAllTransactionCategories",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int64"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "maximum" : 50,
          "minimum" : 1,
          "format" : "int64"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAllTxnCategoriesResponsePayload"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/transactionCategories/addTransactionCategory" : {
      "post" : {
        "summary" : "Create TransactionCategory for an IFI",
        "description" : "",
        "operationId" : "addTransactionCategory",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddTransactionCategoryRequestV2"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AddPolicyTransactionCategoryResponsePayload"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/transactionCategories/{code}" : {
      "get" : {
        "summary" : "Get TransactionCategory for an IFI and Code",
        "description" : "",
        "operationId" : "getTransactionCategory",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "code",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetPolicyTransactionCategoryResponsePayload"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/transactionPolicies" : {
      "get" : {
        "summary" : "Get all transaction policies for a given IFI",
        "description" : "",
        "operationId" : "listAllTranasctionPolicies",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization).",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAllTransactionPoliciesResponse"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create TransactionPolicy",
        "description" : "",
        "operationId" : "createTransactionPolicy",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateTransactionPolicyRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransactionPolicyResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/transactionPolicies/{transactionPolicyID}" : {
      "get" : {
        "summary" : "Replace Transaction Policy",
        "description" : "",
        "operationId" : "getTransactionPolicy",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization).",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "transactionPolicyID",
          "in" : "path",
          "description" : "Transaction Policy ID of the account holder",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123456789101112
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransactionPolicyResponse"
            }
          }
        }
      },
      "put" : {
        "summary" : "Replace Transaction Policy",
        "description" : "",
        "operationId" : "replaceTransactionPolicy",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "transactionPolicyID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ReplaceTransactionPolicyRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransactionPolicyResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/transactionPolicies/{transactionPolicyID}/{state}" : {
      "patch" : {
        "summary" : "Update TransactionPolicy State",
        "description" : "",
        "operationId" : "updateTransactionPolicyState",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization).",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "transactionPolicyID",
          "in" : "path",
          "description" : "Transaction Policy ID of the account holder",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123456789101112
        }, {
          "name" : "state",
          "in" : "path",
          "description" : "Policy State of Transaction Policy",
          "required" : true,
          "type" : "string",
          "x-example" : "ENABLED or DISABLED",
          "enum" : [ "ENABLED", "DISABLED" ]
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateTransactionPolicyState"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransactionPolicyResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/transactions" : {
      "get" : {
        "tags" : [ "AccountHolder Management" ],
        "summary" : "Get all payments of user",
        "description" : "",
        "operationId" : "getPayments",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account holder exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "accountID",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "startTime",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "endTime",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "lastFetchedId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetTransactionsResponse"
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/transfers" : {
      "post" : {
        "tags" : [ "Payment" ],
        "summary" : "",
        "description" : "Transfer from one account to another",
        "operationId" : "transfer",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account transfer is being performed",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TransferRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TransferResponse"
            }
          }
        }
      }
    },
    "/api/v2/support/ifi/{ifiID}/individuals/{individualID}/accounts/{accountID}/transactions" : {
      "get" : {
        "tags" : [ "SupportCentre" ],
        "summary" : "Get all transactions of an account",
        "description" : "",
        "operationId" : "getTransactions",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account transactions exist",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual to which the account belongs",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d12345"
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose transaction details are being retrieved",
          "required" : true,
          "type" : "string",
          "x-example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetAccountTransactionListResponse"
            }
          }
        }
      }
    },
    "/api/v2/support/ifi/{ifiID}/individuals/{individualID}/dob" : {
      "post" : {
        "tags" : [ "SupportCentre" ],
        "operationId" : "updateAccountHolderDob",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "individualID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "dob",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "format" : "date-time"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolder"
            }
          }
        }
      }
    },
    "/api/v2/support/ifi/{ifiID}/individuals/{individualID}/gender/{gender}" : {
      "post" : {
        "tags" : [ "SupportCentre" ],
        "operationId" : "updateAccountHolderGender",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "individualID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "gender",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolder"
            }
          }
        }
      }
    },
    "/api/v2/support/ifi/{ifiID}/individuals/{individualID}/name/{accountHolderName}" : {
      "post" : {
        "tags" : [ "SupportCentre" ],
        "operationId" : "updateAccountHolderName",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "individualID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "accountHolderName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountHolder"
            }
          }
        }
      }
    },
    "/health" : {
      "get" : {
        "operationId" : "healthCheck",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/version" : {
      "get" : {
        "operationId" : "version",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "A2AReversalTransactionResponse" : {
      "type" : "object",
      "properties" : {
        "requestID" : {
          "type" : "string",
          "example" : "93480e72-b883-46fa-8f3f-abe326ab9df7",
          "description" : "Request id for A2A Reversal"
        },
        "paymentType" : {
          "type" : "string",
          "example" : "REVERSAL",
          "description" : "Denotes type of payment response"
        },
        "transactionID" : {
          "type" : "string",
          "example" : "20181206084927090_687_375231000459",
          "description" : "Denotes transaction id for which reversal needs to be done"
        },
        "revertTransactionID" : {
          "type" : "string",
          "example" : "20200429121612790_14_revert_375231000459_reversal_dfdsrdkedddsdd",
          "description" : "Denotes reverted transaction id for corresponding transaction id"
        },
        "transferCode" : {
          "type" : "string",
          "example" : "ATLAS_P2M_AUTH-REVERSAL",
          "description" : "Denotes reversal transfer code"
        },
        "amount" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1,
          "description" : "Amount for which reversal is required"
        },
        "currency" : {
          "type" : "string",
          "example" : "INR",
          "description" : "Currency for which reversal is required"
        },
        "remark" : {
          "type" : "string",
          "example" : "Reversal of vbo1",
          "description" : "Remark of the reversal"
        },
        "status" : {
          "type" : "string",
          "example" : "SUCCESS/FAILED",
          "description" : "Status of the reversal"
        },
        "statusDetails" : {
          "example" : "Transaction code is invalid",
          "description" : "Status details in case reversal fails",
          "$ref" : "#/definitions/JsonObject"
        }
      }
    },
    "Accessor" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountHolderID" : {
          "type" : "string"
        },
        "accountID" : {
          "type" : "string"
        },
        "transactionPolicyIDs" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "status" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "Account" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "vectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountVector"
          }
        },
        "accessors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Accessor"
          }
        },
        "relationships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountRelation"
          }
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ownerAccountHolderID" : {
          "type" : "string"
        },
        "accountProviderID" : {
          "type" : "string"
        },
        "cardID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "productFamilyID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "productID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "programIDs" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "ledgerID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "AccountAccessorResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountHolderID" : {
          "type" : "string"
        },
        "accountID" : {
          "type" : "string"
        },
        "transactionPolicyIDs" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "status" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string"
        },
        "updatedAt" : {
          "type" : "string"
        }
      }
    },
    "AccountHolder" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "requestID" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountHolderProviderID" : {
          "type" : "string"
        },
        "vectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountHolderVector"
          }
        },
        "type" : {
          "type" : "string",
          "enum" : [ "REAL", "LEGAL", "HEADLESS" ]
        },
        "status" : {
          "type" : "string"
        },
        "salutation" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "profilePicURL" : {
          "type" : "string"
        },
        "dob" : {
          "type" : "string",
          "format" : "date-time"
        },
        "gender" : {
          "type" : "string"
        },
        "mothersMaidenName" : {
          "type" : "string"
        },
        "pops" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/POP"
          }
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "kycstatus" : {
          "$ref" : "#/definitions/KYCStatus"
        }
      }
    },
    "AccountHolderRelation" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountHolderID" : {
          "type" : "string"
        },
        "relatedAccountHolderID" : {
          "type" : "string"
        },
        "relationshipType" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        }
      }
    },
    "AccountHolderRelationResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "individualID" : {
          "type" : "string"
        },
        "relatedIndividualID" : {
          "type" : "string"
        },
        "relationshipType" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string"
        },
        "updatedAt" : {
          "type" : "string"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "AccountHolderResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "vectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountHolderVectorResponse"
          }
        },
        "type" : {
          "type" : "string",
          "enum" : [ "REAL", "LEGAL", "HEADLESS" ]
        },
        "status" : {
          "type" : "string"
        },
        "kycDetailsStandardResponse" : {
          "$ref" : "#/definitions/KYCDetailsStandardResponse"
        },
        "salutation" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "profilePicURL" : {
          "type" : "string"
        },
        "dob" : {
          "type" : "string",
          "format" : "date-time"
        },
        "gender" : {
          "type" : "string"
        },
        "mothersMaidenName" : {
          "type" : "string"
        },
        "pops" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/POPResponse"
          }
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string"
        },
        "updatedAt" : {
          "type" : "string"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "AccountHolderVector" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "accountHolderID" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "verified" : {
          "type" : "boolean"
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        }
      }
    },
    "AccountHolderVectorResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "individualID" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "verified" : {
          "type" : "boolean"
        },
        "createdAt" : {
          "type" : "string"
        },
        "updatedAt" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "AccountInfo" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "vectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountVector"
          }
        },
        "accessors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Accessor"
          }
        },
        "relationships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountRelation"
          }
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ownerAccountHolderID" : {
          "type" : "string"
        },
        "accountProviderID" : {
          "type" : "string"
        },
        "cardID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "productFamilyID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "productFamilyName" : {
          "type" : "string"
        },
        "productID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "productName" : {
          "type" : "string"
        },
        "programIDs" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "balance" : {
          "type" : "integer",
          "format" : "int64"
        },
        "currency" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "accountingType" : {
          "type" : "string",
          "enum" : [ "ASSET", "LIABILITY", "INCOME", "EXPENSE", "EQUITY" ]
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "AccountInfoResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "vectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountVectorResponse"
          }
        },
        "accessors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountAccessorResponse"
          }
        },
        "relationships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountRelationResponse"
          }
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ownerAccountHolderID" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "productFamilyID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "productFamilyName" : {
          "type" : "string"
        },
        "productID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "productName" : {
          "type" : "string"
        },
        "programIDs" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "balance" : {
          "type" : "integer",
          "format" : "int64"
        },
        "currency" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "accountingType" : {
          "type" : "string",
          "enum" : [ "ASSET", "LIABILITY", "INCOME", "EXPENSE", "EQUITY" ]
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string"
        },
        "updatedAt" : {
          "type" : "string"
        }
      }
    },
    "AccountRelation" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountID" : {
          "type" : "string"
        },
        "relatedAccountID" : {
          "type" : "string"
        },
        "relationshipType" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "AccountRelationResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountID" : {
          "type" : "string"
        },
        "relatedAccountID" : {
          "type" : "string"
        },
        "relationshipType" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string"
        },
        "updatedAt" : {
          "type" : "string"
        }
      }
    },
    "AccountTransaction" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "accountID" : {
          "type" : "string"
        },
        "ledgerID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "transactionID" : {
          "type" : "string"
        },
        "postingID" : {
          "type" : "string"
        },
        "reversedTransactionID" : {
          "type" : "string"
        },
        "reversalTransactionIDs" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "previousBalance" : {
          "type" : "integer",
          "format" : "int64"
        },
        "newBalance" : {
          "type" : "integer",
          "format" : "int64"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int64"
        },
        "amount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "currency" : {
          "type" : "string"
        },
        "recordType" : {
          "type" : "string"
        },
        "remarks" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "AccountVector" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountID" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        }
      }
    },
    "AccountVectorResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountID" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string"
        },
        "updatedAt" : {
          "type" : "string"
        }
      }
    },
    "AddAccountAccessorRequest" : {
      "type" : "object",
      "properties" : {
        "accountHolderID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "ID of the account holder for whom the account belongs"
        },
        "transactionPolicyIDs" : {
          "type" : "array",
          "description" : "ID of the transaction policies assosciated with the account",
          "items" : {
            "type" : "string"
          }
        },
        "status" : {
          "type" : "string",
          "example" : "ACTIVE",
          "description" : "Status of the account Accessor"
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which you would like to provide",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "AddAccountHolderPOPRequest" : {
      "type" : "object",
      "properties" : {
        "accountHolderID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "ID of the account holder for whom the account belongs"
        },
        "label" : {
          "type" : "string",
          "example" : "My-Home",
          "description" : "ID of the account holder for whom the account belongs"
        },
        "address" : {
          "$ref" : "#/definitions/Address"
        },
        "contactList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Contact"
          }
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which you would like to provide",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "AddAccountHolderRelationshipRequest" : {
      "type" : "object",
      "properties" : {
        "relatedAccountHolderID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "ID of the account holder with whom the relationship is being established"
        },
        "relationshipType" : {
          "type" : "string",
          "example" : "Brother",
          "description" : "Definition of the relationship type with the related Account Holder"
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which you would like to provide",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "AddAccountHolderVectorRequest" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "example" : "PhoneNumber",
          "description" : "Type of the vector being defined for the account holder"
        },
        "value" : {
          "type" : "string",
          "example" : "+911234567890",
          "description" : "Value of the vector being defined for the account holder"
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which you would like to provide",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "verified" : {
          "type" : "boolean"
        }
      }
    },
    "AddAccountRelationRequest" : {
      "type" : "object",
      "properties" : {
        "relationshipType" : {
          "type" : "string",
          "example" : "Father",
          "description" : "Relationship to the account"
        },
        "relatedAccountID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "ID of the related account ID"
        },
        "status" : {
          "type" : "string",
          "example" : "ACTIVE",
          "description" : "Status of the relationship"
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which you would like to provide",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "AddAccountVectorRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountID" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        }
      }
    },
    "AddBeneficiaryAccountForBeneficiaryFusionRequest" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "string",
          "example" : "ENABLED",
          "description" : "Status of the Beneficiary Account"
        },
        "nickname" : {
          "type" : "string",
          "example" : "true",
          "description" : "Nickname of the Beneficiary Account"
        },
        "accountInfo" : {
          "$ref" : "#/definitions/BeneficiaryAccountInfo"
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which you would like to provide",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "type" : {
          "type" : "string",
          "description" : "type of beneficiary Account, IMPS, NEFT ,ZETA "
        },
        "verified" : {
          "type" : "boolean"
        },
        "default" : {
          "type" : "boolean"
        }
      }
    },
    "AddBeneficiaryAccountForBeneficiaryRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string"
        },
        "beneficiaryID" : {
          "type" : "string"
        },
        "parentAccountHolderID" : {
          "type" : "string"
        },
        "nickname" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "accountInfo" : {
          "$ref" : "#/definitions/BeneficiaryAccountInfo"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "verified" : {
          "type" : "boolean"
        },
        "default" : {
          "type" : "boolean"
        }
      }
    },
    "AddBundleRequest" : {
      "type" : "object",
      "required" : [ "productMappingRequest" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Savings Bundle",
          "description" : "The name which would be assigned to the bundle"
        },
        "shortCode" : {
          "type" : "string",
          "example" : "SVNG",
          "description" : "The short code to identify the bundle"
        },
        "picURL" : {
          "type" : "string",
          "description" : "The URL to get the bundle's display pic"
        },
        "description" : {
          "type" : "string",
          "example" : "Bundle related to savings accounts. Consists of a savings account product and a related debit card",
          "description" : "The detailed description of the bundle"
        },
        "productMappingRequest" : {
          "type" : "array",
          "description" : "The mapping of account products to payment products",
          "items" : {
            "$ref" : "#/definitions/ProductMappingRequest"
          }
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which is specific to the bundle",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "AddFusionConfigRequest" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string",
          "example" : "123123",
          "description" : "The key of the key-value pair"
        },
        "value" : {
          "type" : "string",
          "example" : "test",
          "description" : "The value of the key-value pair"
        },
        "type" : {
          "type" : "string",
          "example" : "SANDBOX_VBO_MAPPING",
          "description" : "The type for the key-value config"
        },
        "description" : {
          "type" : "string",
          "example" : "Description of the key",
          "description" : "The description for the key-value config"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "AddPolicyErrorCodeRequest" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "example" : "ERIN0012345",
          "description" : "Code given to a policy error code"
        },
        "errorCode" : {
          "type" : "string",
          "example" : "TRANSACTION_OUTSIDE_TIME_RANGE",
          "description" : "ErrorCode given to a policy "
        },
        "description" : {
          "type" : "string",
          "description" : "Description of policy error"
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information that you would like to associate with the transaction policy",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "AddPolicyTransactionCategoryResponsePayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "code" : {
          "type" : "string"
        },
        "desc" : {
          "type" : "string"
        },
        "attrs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TxnCategoryAttrs"
          }
        }
      }
    },
    "AddTransactionCategoryRequestV2" : {
      "type" : "object",
      "required" : [ "code", "description", "ifiID" ],
      "properties" : {
        "ifiID" : {
          "type" : "integer",
          "format" : "int64",
          "minimum" : 1
        },
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "transactionCategoryAttributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TransactionCategoryStructure"
          }
        }
      }
    },
    "Address" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "accountHolderID" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "tag" : {
          "type" : "string"
        },
        "line1" : {
          "type" : "string"
        },
        "line2" : {
          "type" : "string"
        },
        "city" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "postCode" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "accountHolderVectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountHolderVector"
          }
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DELETED" ]
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "default" : {
          "type" : "boolean"
        }
      }
    },
    "AggregateExpression" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifiId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "expression" : {
          "type" : "string"
        },
        "createdAt" : {
          "type" : "integer",
          "format" : "int64"
        },
        "updatedAt" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "AggregateRule" : {
      "type" : "object",
      "properties" : {
        "action" : {
          "type" : "string",
          "enum" : [ "DEBIT", "CREDIT", "DEBIT_REVERSAL", "CREDIT_REVERSAL" ]
        },
        "transactionCategoryCode" : {
          "type" : "string"
        },
        "aggExpressionCode" : {
          "type" : "string"
        },
        "dailyLimit" : {
          "type" : "integer",
          "format" : "int64"
        },
        "weeklyLimit" : {
          "type" : "integer",
          "format" : "int64"
        },
        "monthlyLimit" : {
          "type" : "integer",
          "format" : "int64"
        },
        "quarterlyLimit" : {
          "type" : "integer",
          "format" : "int64"
        },
        "yearlyLimit" : {
          "type" : "integer",
          "format" : "int64"
        },
        "errorCode" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "VELOCITY", "VOLUME" ]
        }
      }
    },
    "BalanceRule" : {
      "type" : "object",
      "properties" : {
        "action" : {
          "type" : "string",
          "enum" : [ "DEBIT", "CREDIT", "DEBIT_REVERSAL", "CREDIT_REVERSAL" ]
        },
        "minRequiredBalanceAfter" : {
          "type" : "integer",
          "format" : "int64"
        },
        "maxAllowedBalanceAfter" : {
          "type" : "integer",
          "format" : "int64"
        },
        "minRequiredBalanceBefore" : {
          "type" : "integer",
          "format" : "int64"
        },
        "maxAllowedBalanceBefore" : {
          "type" : "integer",
          "format" : "int64"
        },
        "transactionCategoryCode" : {
          "type" : "string"
        },
        "errorCode" : {
          "type" : "string"
        }
      }
    },
    "Beneficiary" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "requestID" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountHolderID" : {
          "type" : "string"
        },
        "salutation" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "gender" : {
          "type" : "string"
        },
        "profilePicURL" : {
          "type" : "string"
        },
        "relationship" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "REAL", "LEGAL", "HEADLESS" ]
        },
        "dob" : {
          "type" : "string",
          "format" : "date-time"
        },
        "vectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BeneficiaryVector"
          }
        },
        "accounts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BeneficiaryAccount"
          }
        },
        "customFields" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "BeneficiaryAccount" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "isVerified" : {
          "type" : "boolean"
        },
        "status" : {
          "type" : "string"
        },
        "beneficiaryID" : {
          "type" : "string"
        },
        "parentAccountHolderID" : {
          "type" : "string"
        },
        "nickname" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "accountInfo" : {
          "$ref" : "#/definitions/BeneficiaryAccountInfo"
        },
        "isDefault" : {
          "type" : "boolean"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "BeneficiaryAccountInfo" : {
      "type" : "object",
      "properties" : {
        "accountNumber" : {
          "type" : "string"
        },
        "accountProvider" : {
          "type" : "string"
        },
        "nameAtAccountProvider" : {
          "type" : "string"
        },
        "routingCode" : {
          "type" : "string"
        },
        "accountType" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "BeneficiaryAccountListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "beneficiaryAccountList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BeneficiaryAccount"
          }
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "BeneficiaryAccountResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string"
        },
        "beneficiaryID" : {
          "type" : "string"
        },
        "parentAccountHolderID" : {
          "type" : "string"
        },
        "nickname" : {
          "type" : "string"
        },
        "accountInfo" : {
          "$ref" : "#/definitions/BeneficiaryAccountInfo"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string"
        },
        "updatedAt" : {
          "type" : "string"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "verified" : {
          "type" : "boolean"
        },
        "default" : {
          "type" : "boolean"
        }
      }
    },
    "BeneficiaryAccountTransactionFusionRequest" : {
      "type" : "object",
      "properties" : {
        "currency" : {
          "type" : "string",
          "example" : "INR",
          "description" : "Currency in which money need to be transacted "
        },
        "amount" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 500,
          "description" : "Amount that need to be transferred"
        },
        "transactionCode" : {
          "type" : "string",
          "description" : "TransactionCode regarding the transaction"
        },
        "debitAccountID" : {
          "type" : "string",
          "description" : "ID of the account from which money has to be deducted"
        },
        "transactionTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "remarks" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which you would like to provide",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "BeneficiaryAccountTransferRequest" : {
      "type" : "object",
      "required" : [ "transactionTime" ],
      "properties" : {
        "requestID" : {
          "type" : "string"
        },
        "transferAmount" : {
          "$ref" : "#/definitions/Money"
        },
        "currency" : {
          "type" : "string"
        },
        "amount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "transactionCode" : {
          "type" : "string"
        },
        "debitAccountID" : {
          "type" : "string"
        },
        "transactionTime" : {
          "type" : "integer",
          "format" : "int64",
          "minimum" : 1
        },
        "remarks" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "BeneficiaryListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "beneficiaryList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Beneficiary"
          }
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "BeneficiaryResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountHolderID" : {
          "type" : "string"
        },
        "salutation" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "gender" : {
          "type" : "string"
        },
        "profilePicURL" : {
          "type" : "string"
        },
        "relationship" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "REAL", "LEGAL", "HEADLESS" ]
        },
        "dob" : {
          "type" : "string",
          "format" : "date-time"
        },
        "vectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BeneficiaryVector"
          }
        },
        "accounts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BeneficiaryAccount"
          }
        },
        "customFields" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string"
        },
        "updatedAt" : {
          "type" : "string"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "BeneficiaryTransaction" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "requestID" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "amount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "currency" : {
          "type" : "string"
        },
        "transactionCode" : {
          "type" : "string"
        },
        "debitAccountID" : {
          "type" : "string"
        },
        "debitAccountHolderID" : {
          "type" : "string"
        },
        "beneficiaryID" : {
          "type" : "string"
        },
        "beneficiaryAccountID" : {
          "type" : "string"
        },
        "transactionTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "transferType" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "transactionID" : {
          "type" : "string"
        },
        "receiptID" : {
          "type" : "string"
        },
        "remarks" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "BeneficiaryTransactionFusionResponse" : {
      "type" : "object",
      "properties" : {
        "transactionID" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "BeneficiaryTransactionResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "requestID" : {
          "type" : "string"
        },
        "transactionID" : {
          "type" : "string"
        },
        "paymentID" : {
          "type" : "string"
        },
        "receiptID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "transactionCode" : {
          "type" : "string"
        },
        "debits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Posting"
          }
        },
        "reversedReceiptID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "time" : {
          "type" : "integer",
          "format" : "int64"
        },
        "towards" : {
          "type" : "string"
        },
        "transferAmount" : {
          "$ref" : "#/definitions/Money"
        },
        "payerInfo" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "payeeInfo" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "status" : {
          "type" : "string"
        },
        "transferType" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "statusDetails" : {
          "$ref" : "#/definitions/JsonObject"
        }
      }
    },
    "BeneficiaryVector" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "beneficiaryID" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "Builder" : {
      "type" : "object"
    },
    "BulkOrderRequest" : {
      "type" : "object",
      "properties" : {
        "quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "orderID" : {
          "type" : "string"
        },
        "cardSkuID" : {
          "type" : "string"
        },
        "plasticCode" : {
          "type" : "string"
        },
        "expiry" : {
          "$ref" : "#/definitions/Expiry"
        },
        "thirdLineEmbossing" : {
          "type" : "string"
        },
        "fourthLineEmbossing" : {
          "type" : "string"
        },
        "deliveryAddress" : {
          "$ref" : "#/definitions/Address"
        },
        "additionalAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "tenantAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "vendorAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "CalendarInfo" : {
      "type" : "object",
      "properties" : {
        "weekStartOffset" : {
          "type" : "integer",
          "format" : "int32"
        },
        "yearStartDay" : {
          "type" : "integer",
          "format" : "int32"
        },
        "yearStartMonth" : {
          "type" : "integer",
          "format" : "int32"
        },
        "timeZone" : {
          "type" : "string"
        },
        "ifiId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "calendarId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "CardBinRange" : {
      "type" : "object",
      "properties" : {
        "bin" : {
          "type" : "string"
        },
        "range" : {
          "type" : "string"
        }
      }
    },
    "CardSku" : {
      "type" : "object",
      "properties" : {
        "cardSkuId" : {
          "type" : "string"
        },
        "productID" : {
          "type" : "string"
        },
        "ifi" : {
          "type" : "string"
        },
        "bin" : {
          "type" : "string"
        },
        "plasticCode" : {
          "type" : "string"
        },
        "vendorID" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "range" : {
          "type" : "string"
        },
        "binRange" : {
          "type" : "string"
        }
      }
    },
    "CardViewResponse" : {
      "type" : "object",
      "properties" : {
        "resource" : {
          "$ref" : "#/definitions/Resource"
        },
        "cardID" : {
          "type" : "string"
        },
        "crn" : {
          "type" : "string"
        },
        "cardType" : {
          "type" : "string"
        },
        "maskedPan" : {
          "type" : "string"
        },
        "cardStatus" : {
          "type" : "string"
        },
        "associatedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "orderDetails" : {
          "$ref" : "#/definitions/OrderDetails"
        },
        "tenantAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "binRange" : {
          "$ref" : "#/definitions/CardBinRange"
        },
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "sensitiveView" : {
          "$ref" : "#/definitions/SensitiveCardView"
        }
      }
    },
    "Channel" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "paymentCodes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ACTIVE", "INACTIVE", "DELETED" ]
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "CoAConfig" : {
      "type" : "object",
      "properties" : {
        "coaId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ifiId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "coaDescription" : {
          "type" : "string"
        },
        "coaName" : {
          "type" : "string"
        },
        "coaDepth" : {
          "type" : "integer",
          "format" : "int32"
        },
        "calendarId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "currency" : {
          "type" : "string"
        }
      }
    },
    "Coa" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "CoaNode" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "ConnectionConfig" : {
      "type" : "object",
      "properties" : {
        "endpoint" : {
          "type" : "string"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "Contact" : {
      "type" : "object",
      "properties" : {
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "vectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountHolderVector"
          }
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "ContactResponse" : {
      "type" : "object",
      "properties" : {
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "vectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountHolderVectorResponse"
          }
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "CorporateBeneficiaryAccountResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "93480e72-b883-46fa-8f3f-abe326ab9df7",
          "description" : "ID of the Beneficiary account being created by the company"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string",
          "example" : "ENABLED",
          "description" : "Status of the Beneficiary Account"
        },
        "beneficiaryID" : {
          "type" : "string",
          "example" : "93480e72-b883-46fa-8f3f-abe326ab9df7",
          "description" : "ID of the Beneficiary of the company whose account is being created"
        },
        "companyID" : {
          "type" : "string",
          "example" : "93480e72-b883-46fa-8f3f-abe326ab9df7",
          "description" : "ID of the company creating beneficiary account"
        },
        "nickname" : {
          "type" : "string",
          "example" : "true",
          "description" : "Nickname of the Beneficiary Account"
        },
        "accountInfo" : {
          "$ref" : "#/definitions/BeneficiaryAccountInfo"
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which you would like to provide",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "type" : {
          "type" : "string",
          "example" : "ZETA",
          "description" : "Type of beneficiary ie NEFT or IMPS or ZETA"
        },
        "createdAt" : {
          "type" : "string"
        },
        "updatedAt" : {
          "type" : "string"
        },
        "verified" : {
          "type" : "boolean"
        },
        "default" : {
          "type" : "boolean"
        }
      }
    },
    "CorporateBeneficiaryResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "93480e72-b883-46fa-8f3f-abe326ab9df7",
          "description" : "ID of the Beneficiary being created by the company"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 123123,
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary is being created"
        },
        "companyID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "ID of the company for whom the beneficiary is being created"
        },
        "firstName" : {
          "type" : "string",
          "example" : "Chandler",
          "description" : "First name of the beneficiary being created"
        },
        "middleName" : {
          "type" : "string",
          "example" : "Muriel",
          "description" : "Middle name of the beneficiary being created"
        },
        "lastName" : {
          "type" : "string",
          "example" : "Bing",
          "description" : "Last name of the beneficiary being created"
        },
        "gender" : {
          "type" : "string",
          "example" : "Male",
          "description" : "Gender of the beneficiary being created"
        },
        "profilePicURL" : {
          "type" : "string",
          "example" : "http://abc.com",
          "description" : "Profile pic URL of the beneficiary being created"
        },
        "relationship" : {
          "type" : "string",
          "example" : "Brother",
          "description" : "Relation of the beneficiary being created with the individual"
        },
        "status" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "example" : "LEGAL",
          "description" : "Type of the Account Holder for whom the beneficiary being created",
          "enum" : [ "REAL", "LEGAL", "HEADLESS" ]
        },
        "vectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BeneficiaryVector"
          }
        },
        "customFields" : {
          "type" : "object",
          "description" : "Any additional information which you would like to provide",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string",
          "example" : "2020-02-18T06:24:14.000+00:00",
          "description" : "Date/Time of the Beneficiary when created"
        },
        "updatedAt" : {
          "type" : "string",
          "example" : "2020-02-18T06:24:14.000+00:00",
          "description" : "Date/Time of the Beneficiary when updated"
        }
      }
    },
    "CreateAccountHolderApplicationRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "formID" : {
          "type" : "string"
        },
        "spoolID" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "individualType" : {
          "type" : "string"
        },
        "applicationType" : {
          "type" : "string",
          "enum" : [ "KYC", "CREATE_ACCOUNT_HOLDER", "EDIT_ACCOUNT_HOLDER" ]
        },
        "individualID" : {
          "type" : "string"
        },
        "salutation" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "profilePicURL" : {
          "type" : "string"
        },
        "dob" : {
          "type" : "string",
          "format" : "date"
        },
        "gender" : {
          "type" : "string"
        },
        "mothersMaidenName" : {
          "type" : "string"
        },
        "kycDetails" : {
          "$ref" : "#/definitions/KYCDetails"
        },
        "vectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Vector"
          }
        },
        "pops" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/POP"
          }
        },
        "customFields" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "source" : {
          "type" : "string"
        }
      }
    },
    "CreateAccountHolderApplicationStandardRequest" : {
      "type" : "object",
      "properties" : {
        "requestID" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 50
        },
        "description" : {
          "type" : "string"
        },
        "salutation" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "profilePicURL" : {
          "type" : "string"
        },
        "dob" : {
          "type" : "string"
        },
        "gender" : {
          "type" : "string"
        },
        "mothersMaidenName" : {
          "type" : "string"
        },
        "kycDetails" : {
          "$ref" : "#/definitions/KYCDetails"
        },
        "vectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Vector"
          }
        },
        "pops" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/POP"
          }
        },
        "customFields" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "CreateAccountHolderRequest" : {
      "type" : "object",
      "properties" : {
        "vectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountHolderVector"
          }
        },
        "salutation" : {
          "type" : "string",
          "example" : "Mrs",
          "description" : "Salutation of the account holder being created"
        },
        "firstName" : {
          "type" : "string",
          "example" : "Chandler",
          "description" : "First name of the account holder being created"
        },
        "middleName" : {
          "type" : "string",
          "example" : "Muriel",
          "description" : "Middle name of the account holder being created"
        },
        "lastName" : {
          "type" : "string",
          "example" : "Bing",
          "description" : "Last name of the account holder being created"
        },
        "profilePicURL" : {
          "type" : "string",
          "example" : "http://abc.com/test",
          "description" : "URL  of the pic of the account holder being created"
        },
        "dob" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "01/01/1990",
          "description" : "Date of Birth of the account holder being created"
        },
        "gender" : {
          "type" : "string",
          "example" : "MALE",
          "description" : "Gender of the account holder being created"
        },
        "mothersMaidenName" : {
          "type" : "string",
          "example" : "Margaret",
          "description" : "Mother's maiden name of the account holder being created"
        }
      }
    },
    "CreateAccountHolderWithAutoApprovalRequest" : {
      "type" : "object",
      "properties" : {
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "formID" : {
          "type" : "string"
        },
        "requestID" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 50
        },
        "spoolID" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "individualType" : {
          "type" : "string"
        },
        "salutation" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "profilePicURL" : {
          "type" : "string"
        },
        "dob" : {
          "type" : "string",
          "format" : "date"
        },
        "gender" : {
          "type" : "string"
        },
        "mothersMaidenName" : {
          "type" : "string"
        },
        "kycDetails" : {
          "$ref" : "#/definitions/KYCDetails"
        },
        "vectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VectorRequest"
          }
        },
        "pops" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/POP"
          }
        },
        "customFields" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "CreateAccountHolderWithAutoApprovalStandardRequest" : {
      "type" : "object",
      "properties" : {
        "requestID" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 50
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "description" : {
          "type" : "string"
        },
        "individualType" : {
          "type" : "string"
        },
        "salutation" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "profilePicURL" : {
          "type" : "string"
        },
        "dob" : {
          "type" : "string",
          "format" : "date"
        },
        "gender" : {
          "type" : "string"
        },
        "mothersMaidenName" : {
          "type" : "string"
        },
        "kycDetails" : {
          "$ref" : "#/definitions/KYCDetails"
        },
        "vectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VectorRequest"
          }
        },
        "pops" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/POP"
          }
        },
        "customFields" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "CreateAndLinkFormFactorResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "resource" : {
          "$ref" : "#/definitions/Resource"
        },
        "provisionFormFactorResponse" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "CreateBeneficiaryRequest" : {
      "type" : "object"
    },
    "CreateCardDesignPolicyRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "logo" : {
          "type" : "string"
        },
        "background" : {
          "type" : "string"
        },
        "backgroundExpanded" : {
          "type" : "string"
        },
        "backgroundColor" : {
          "type" : "string"
        },
        "textColor" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED" ]
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "validFrom" : {
          "type" : "string",
          "format" : "date-time"
        },
        "validUntil" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "CreateCoaNodeResponsePayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "nodeId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "CreateCoaResponsePayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "coaId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "rootNodeId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "CreateCorporateBeneficiaryAccountRequest" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "string",
          "example" : "ENABLED",
          "description" : "Status of the Beneficiary Account"
        },
        "nickname" : {
          "type" : "string",
          "example" : "true",
          "description" : "Nickname of the Beneficiary Account"
        },
        "accountInfo" : {
          "$ref" : "#/definitions/BeneficiaryAccountInfo"
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which you would like to provide",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "type" : {
          "type" : "string",
          "example" : "ZETA",
          "description" : "Type of beneficiary ie NEFT or IMPS or ZETA"
        },
        "verified" : {
          "type" : "boolean"
        },
        "default" : {
          "type" : "boolean"
        }
      }
    },
    "CreateCorporateBeneficiaryRequest" : {
      "type" : "object"
    },
    "CreateCouponAccountingPolicyRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "couponName" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "denomination" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "isPartialRedemptionAllowed" : {
          "type" : "boolean"
        },
        "expiryAccount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "validFrom" : {
          "type" : "integer",
          "format" : "int64"
        },
        "validUntil" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "CreateExtendedProductFamilyRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "productFamily" : {
          "$ref" : "#/definitions/CreateProductFamilyRequest"
        },
        "issuancePolicy" : {
          "$ref" : "#/definitions/CreateIssuancePolicyRequest"
        },
        "transactionPolicyIDs" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "CreateExtendedProductRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "productRequest" : {
          "$ref" : "#/definitions/CreateProductRequest"
        },
        "issuancePolicyRequest" : {
          "$ref" : "#/definitions/CreateIssuancePolicyRequest"
        },
        "couponAccountingPolicyRequest" : {
          "$ref" : "#/definitions/CreateCouponAccountingPolicyRequest"
        },
        "cardDesignPolicyRequest" : {
          "$ref" : "#/definitions/CreateCardDesignPolicyRequest"
        },
        "transactionPolicyIDs" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "CreateIssuancePolicyRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "validFrom" : {
          "type" : "integer",
          "format" : "int64"
        },
        "validUntil" : {
          "type" : "integer",
          "format" : "int64"
        },
        "allowedAccountHolderGroups" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "disAllowedAccountHolderGroups" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "CreatePolicyMappingRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "entityID" : {
          "type" : "string"
        },
        "policyEntityType" : {
          "type" : "string",
          "enum" : [ "PRODUCT_FAMILY", "PRODUCT", "PROGRAM", "ACCOUNT_HOLDER", "ACCOUNT" ]
        },
        "policyID" : {
          "type" : "string"
        },
        "policyType" : {
          "type" : "string",
          "enum" : [ "TRANSACTION_POLICY", "CARD_DESIGN_POLICY", "ISSUANCE_POLICY", "COUPON_ACCOUNTING_POLICY", "NOTIFICATION_POLICY", "FEE_CHARGES_POLICY", "INTEREST_POLICY", "ACCOUNT_DISCOVERY_POLICY" ]
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "CreatePolicyRequestPayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "requestID" : {
          "type" : "string"
        },
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "code" : {
          "type" : "string"
        },
        "desc" : {
          "type" : "string"
        },
        "txnConstraints" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyTxnConstraint"
          }
        },
        "policyTxnRules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyTxnRule"
          }
        },
        "policyBalanceRules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyBalanceRule"
          }
        },
        "policyAggregateRules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyAggregateRule"
          }
        },
        "effectiveFrom" : {
          "type" : "integer",
          "format" : "int64"
        },
        "expiresAt" : {
          "type" : "integer",
          "format" : "int64"
        },
        "policyViolationAction" : {
          "type" : "string",
          "enum" : [ "DECLINE_AND_NOTIFY", "DECLINE", "NOTIFY" ]
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "CreatePolicyResponsePayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "policyVersionID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "policyID" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "CreateProductFamilyRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "coaID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "parentCoaNodeID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountingType" : {
          "type" : "string",
          "enum" : [ "ASSET", "LIABILITY", "INCOME", "EXPENSE", "EQUITY" ]
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "WALLET_BASED", "ACCOUNT_BASED" ]
        },
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "CreateProductRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "coaID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "productFamilyID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "ENABLED", "BLOCKED" ]
        },
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "CreateTransactionPolicyRequest" : {
      "type" : "object",
      "required" : [ "coaID", "violationAction" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "example" : "POLIN0012345",
          "description" : "Code given to a transaction policy"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of transaction policy"
        },
        "scope" : {
          "type" : "string",
          "example" : "AGGREGATE_OF_ALL_ACCOUNTS_OF_ACCOUNT_HOLDER or EACH_ACCOUNT_OF_ACCOUNT_HOLDER",
          "description" : "Scope of transaction policy",
          "enum" : [ "AGGREGATE_OF_ALL_ACCOUNTS_OF_ACCOUNT_HOLDER", "EACH_ACCOUNT_OF_ACCOUNT_HOLDER" ]
        },
        "coaID" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Coa ID of issuer to which the transaction policy would be associated"
        },
        "transactionConstraints" : {
          "type" : "array",
          "description" : "Transaction Constraints containing allowed/disallowed transaction categories and time slices",
          "items" : {
            "$ref" : "#/definitions/TransactionConstraint"
          }
        },
        "transactionRules" : {
          "type" : "array",
          "description" : "Transaction rules to be applied on a particular posting",
          "items" : {
            "$ref" : "#/definitions/TransactionRule"
          }
        },
        "balanceRules" : {
          "type" : "array",
          "description" : "Balance rules to be applied either on transacting account or group of accounts of account holder based on applicability criteria and policy scope ",
          "items" : {
            "$ref" : "#/definitions/BalanceRule"
          }
        },
        "aggregateRules" : {
          "type" : "array",
          "description" : "Aggregate rules (daily, weekly, monthly, quarterly, yearly) to be applied based on applicability criteria and transaction category",
          "items" : {
            "$ref" : "#/definitions/AggregateRule"
          }
        },
        "effectiveFrom" : {
          "type" : "string",
          "example" : "2020-02-18T06:24:14.000Z",
          "description" : "Effective date (epoch time in milliseconds) from when the transaction policy will be applied"
        },
        "expiresAt" : {
          "type" : "string",
          "example" : "2020-02-18T06:24:14.000Z",
          "description" : "Expiry date (epoch time in milliseconds) for the transaction policy post which it will not be applied"
        },
        "violationAction" : {
          "type" : "string",
          "example" : "DECLINE, NOTIFY, DECLINE_AND_NOTIFY",
          "description" : "Transaction policy violation action",
          "enum" : [ "DECLINE_AND_NOTIFY", "DECLINE", "NOTIFY" ]
        },
        "accountsApplicableTo" : {
          "type" : "object",
          "description" : "Applicability or Filtering Criteria to pick account[s] of the account holder",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information that you would like to associate with the transaction policy",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "CreateUserTransactionCategoryRequest" : {
      "type" : "object",
      "properties" : {
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "transactionAttributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TransactionCategoryStructure"
          }
        }
      }
    },
    "CreateUserTransactionCategoryResponse" : {
      "type" : "object"
    },
    "DispatchOrderRequest" : {
      "type" : "object",
      "properties" : {
        "plasticCode" : {
          "type" : "string"
        },
        "thirdLineEmbossing" : {
          "type" : "string"
        },
        "fourthLineEmbossing" : {
          "type" : "string"
        },
        "deliveryAddress" : {
          "$ref" : "#/definitions/Address"
        },
        "additionalAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "tenantAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "vendorAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "ECDHEncryptedCardPayload" : {
      "type" : "object",
      "properties" : {
        "serverPublicKey" : {
          "type" : "string"
        },
        "encryptedData" : {
          "type" : "string"
        },
        "iv" : {
          "type" : "string"
        }
      }
    },
    "EditIndividualApplicationRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "formID" : {
          "type" : "string"
        },
        "spoolID" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "individualID" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "source" : {
          "type" : "string"
        },
        "salutation" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "profilePicURL" : {
          "type" : "string"
        },
        "dob" : {
          "type" : "string",
          "format" : "date"
        },
        "gender" : {
          "type" : "string"
        },
        "mothersMaidenName" : {
          "type" : "string"
        }
      }
    },
    "EditIndividualApplicationStandardRequest" : {
      "type" : "object",
      "properties" : {
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "description" : {
          "type" : "string"
        },
        "individualID" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "salutation" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "profilePicURL" : {
          "type" : "string"
        },
        "dob" : {
          "type" : "string"
        },
        "gender" : {
          "type" : "string"
        },
        "mothersMaidenName" : {
          "type" : "string"
        }
      }
    },
    "EmbossAndActivateReplacementOrderRequest" : {
      "type" : "object",
      "properties" : {
        "oldCardReferenceNumber" : {
          "type" : "string"
        },
        "orderID" : {
          "type" : "string"
        },
        "expiry" : {
          "$ref" : "#/definitions/JsonElement"
        },
        "thirdLineEmbossing" : {
          "type" : "string"
        },
        "fourthLineEmbossing" : {
          "type" : "string"
        },
        "deliveryAddress" : {
          "$ref" : "#/definitions/Address"
        },
        "additionalAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "tenantAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "vendorAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "signatoryJID" : {
          "type" : "string"
        },
        "signed" : {
          "type" : "boolean"
        },
        "signature" : {
          "type" : "string"
        }
      }
    },
    "EmptyPayload" : {
      "type" : "object"
    },
    "EntityCodeResponse" : {
      "type" : "object",
      "properties" : {
        "entityCode" : {
          "type" : "string"
        }
      }
    },
    "EntityGroup" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "entityType" : {
          "type" : "string",
          "enum" : [ "ACCOUNT", "ACCOUNT_HOLDER", "BENEFICIARY", "BENEFICIARY_ACCOUNT" ]
        },
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "schema" : {
          "$ref" : "#/definitions/JsonObject"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "integer",
          "format" : "int64"
        },
        "modifiedAt" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Error" : {
      "type" : "object",
      "properties" : {
        "details" : {
          "$ref" : "#/definitions/JsonElement"
        },
        "code" : {
          "type" : "string"
        }
      }
    },
    "Expiry" : {
      "type" : "object",
      "properties" : {
        "month" : {
          "type" : "integer",
          "format" : "int32"
        },
        "year" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "FormFactor" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "formFactorProductID" : {
          "type" : "string"
        },
        "formFactorID" : {
          "type" : "string"
        },
        "identityID" : {
          "type" : "string"
        },
        "targetURI" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "policies" : {
          "$ref" : "#/definitions/Policies"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ACTIVE", "INACTIVE", "DELETED" ]
        },
        "reason" : {
          "$ref" : "#/definitions/StatusReason"
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "FormFactorProduct" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "id" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "policies" : {
          "$ref" : "#/definitions/Policies"
        },
        "provider" : {
          "type" : "string"
        },
        "skuID" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "issuanceStatus" : {
          "type" : "string",
          "enum" : [ "ACTIVE", "INACTIVE", "DELETED" ]
        },
        "paymentStatus" : {
          "type" : "string",
          "enum" : [ "ACTIVE", "INACTIVE", "DELETED" ]
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "FusionConfigResponse" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string",
          "example" : "123123",
          "description" : "The key of the key-value pair"
        },
        "value" : {
          "type" : "string",
          "example" : "test",
          "description" : "The value of the key-value pair"
        },
        "type" : {
          "type" : "string",
          "example" : "SANDBOX_VBO_MAPPING",
          "description" : "The type for the key-value config"
        },
        "description" : {
          "type" : "string",
          "example" : "Description of the key",
          "description" : "The description for the key-value config"
        },
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "createdBy" : {
          "type" : "string"
        },
        "updatedBy" : {
          "type" : "string"
        },
        "createdAt" : {
          "type" : "string"
        },
        "updatedAt" : {
          "type" : "string"
        }
      }
    },
    "FusionListCardsRequest" : {
      "type" : "object",
      "properties" : {
        "filters" : {
          "$ref" : "#/definitions/FusionListCardsRequestFilters"
        }
      }
    },
    "FusionListCardsRequestFilters" : {
      "type" : "object",
      "properties" : {
        "cardID" : {
          "type" : "string"
        },
        "crn" : {
          "type" : "string"
        },
        "panSHA" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "GetAccountAccessorListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "accessors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Accessor"
          }
        }
      }
    },
    "GetAccountAccessorListStandardResponse" : {
      "type" : "object"
    },
    "GetAccountBalanceResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "balance" : {
          "type" : "integer",
          "format" : "int64"
        },
        "currency" : {
          "type" : "string"
        },
        "lastTransactionID" : {
          "type" : "string"
        },
        "accountingType" : {
          "type" : "string",
          "enum" : [ "ASSET", "LIABILITY", "INCOME", "EXPENSE", "EQUITY" ]
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "GetAccountHolderRelationListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "relationships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountHolderRelation"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetAccountListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "accounts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Account"
          }
        }
      }
    },
    "GetAccountRelationListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "accountRelations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountRelation"
          }
        }
      }
    },
    "GetAccountRelationListStandardResponse" : {
      "type" : "object"
    },
    "GetAccountResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "vectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountVectorResponse"
          }
        },
        "accessors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountAccessorResponse"
          }
        },
        "relationships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountRelationResponse"
          }
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ownerAccountHolderID" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "productFamilyID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "productID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "programIDs" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "status" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string"
        },
        "updatedAt" : {
          "type" : "string"
        }
      }
    },
    "GetAccountTransaction" : {
      "type" : "object",
      "properties" : {
        "accountID" : {
          "type" : "string"
        },
        "transactionID" : {
          "type" : "string"
        },
        "postingID" : {
          "type" : "string"
        },
        "reversedTransactionID" : {
          "type" : "string"
        },
        "reversalTransactionIDs" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "previousBalance" : {
          "type" : "integer",
          "format" : "int64"
        },
        "newBalance" : {
          "type" : "integer",
          "format" : "int64"
        },
        "timestamp" : {
          "type" : "string"
        },
        "amount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "currency" : {
          "type" : "string"
        },
        "recordType" : {
          "type" : "string"
        },
        "remarks" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "GetAccountTransactionListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "accountTransactionList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountTransaction"
          }
        },
        "totalRecord" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetAccountVectorListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "accountVectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountVector"
          }
        }
      }
    },
    "GetAccountVectorListStandardResponse" : {
      "type" : "object"
    },
    "GetAggregateExpressionListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "aggregateExpressions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AggregateExpression"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetAllAccountHoldersResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "accountHolder" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountHolder"
          }
        }
      }
    },
    "GetAllCoAsResponsePayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "coAConfigs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CoAConfig"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetAllTransactionPoliciesResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "policies" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TransactionPolicyResponse"
          }
        }
      }
    },
    "GetAllTxnCategoriesResponsePayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "transactionCategories" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TxnCategory"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetBeneficiaryTransactionListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "transactions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BeneficiaryTransaction"
          }
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetCalendarResponsePayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "calendarInfo" : {
          "$ref" : "#/definitions/CalendarInfo"
        }
      }
    },
    "GetCoaListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "coaList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Coa"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetCoaNodesResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "coaNodeList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CoaNode"
          }
        }
      }
    },
    "GetPOPListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "popList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/POP"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetPoliciesResponsePayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "policies" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Policy"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetPolicyErrorsResponse" : {
      "type" : "object",
      "properties" : {
        "errorCodes" : {
          "type" : "array",
          "description" : "list of policy error codes",
          "items" : {
            "$ref" : "#/definitions/PolicyError"
          }
        }
      }
    },
    "GetPolicyResponsePayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "policy" : {
          "$ref" : "#/definitions/Policy"
        }
      }
    },
    "GetPolicyTransactionCategoryResponsePayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "code" : {
          "type" : "string"
        },
        "desc" : {
          "type" : "string"
        },
        "attrs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TxnCategoryAttrs"
          }
        }
      }
    },
    "GetProductFamilyListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "productFamilyList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProductFamily"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetProductListResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "productList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Product"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetTransactionPolicyResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "ifiId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "code" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED" ]
        },
        "description" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "policyViolationAction" : {
          "type" : "string",
          "enum" : [ "DECLINE_AND_NOTIFY", "DECLINE", "NOTIFY" ]
        },
        "txnConstraints" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyTxnConstraint"
          }
        },
        "txnLimits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyTxnRule"
          }
        },
        "balanceLimits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyBalanceRule"
          }
        },
        "volumeLimits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyAggregateRule"
          }
        },
        "velocityLimits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyAggregateRule"
          }
        },
        "validFrom" : {
          "type" : "string"
        },
        "validUntil" : {
          "type" : "string"
        },
        "createdAt" : {
          "type" : "string"
        },
        "updatedAt" : {
          "type" : "string"
        }
      }
    },
    "GetTransactionsResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "IBundleView" : {
      "type" : "object"
    },
    "InsertFormFactorResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "formFactorProductID" : {
          "type" : "string"
        },
        "formFactorID" : {
          "type" : "string"
        },
        "targetURI" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "policies" : {
          "$ref" : "#/definitions/Policies"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ACTIVE", "INACTIVE", "DELETED" ]
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "Interceptor" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "id" : {
          "type" : "string"
        },
        "resourceProductId" : {
          "type" : "string"
        },
        "actionName" : {
          "type" : "string",
          "enum" : [ "PAYMENT_REQUESTED", "PAYMENT_AUTHORIZATION_RECEIVED", "PAYMENT_REVERSAL_REQUESTED" ]
        },
        "connectionConfig" : {
          "$ref" : "#/definitions/ConnectionConfig"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ACTIVE", "INACTIVE", "DELETED" ]
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "IssueAccountArtifactRequest" : {
      "type" : "object",
      "properties" : {
        "accountProductID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "ID of the account product ID which is part of the issuing bundle"
        },
        "name" : {
          "type" : "string",
          "example" : "Victor",
          "description" : "The name which would be preferred in the account name"
        },
        "vectors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountVector"
          }
        },
        "accessors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Accessor"
          }
        },
        "relationships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountRelation"
          }
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "IssueAccountArtifactResponse" : {
      "type" : "object",
      "required" : [ "accountHolderID", "bundleID" ],
      "properties" : {
        "bundleID" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "accountHolderID" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "accountID" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "IssueAccountProductsRequest" : {
      "type" : "object",
      "properties" : {
        "requestID" : {
          "type" : "string",
          "example" : "ba3673211-g586-4acb-859e-bb9c60d3qu72",
          "description" : "requestID as an idempotent key",
          "minLength" : 0,
          "maxLength" : 37
        },
        "accountHolderID" : {
          "type" : "string",
          "example" : "ba3673211-g586-4acb-859e-bb9c60d3qu72",
          "description" : "Account Holder to whom the bundle is being issued"
        },
        "issueAccountArtifactRequests" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IssueAccountArtifactRequest"
          }
        }
      }
    },
    "IssueBundleRequest" : {
      "type" : "object",
      "properties" : {
        "requestID" : {
          "type" : "string",
          "example" : "ba3673211-g586-4acb-859e-bb9c60d3qu72",
          "description" : "requestID as an idempotent key",
          "minLength" : 0,
          "maxLength" : 37
        },
        "name" : {
          "type" : "string",
          "example" : "Victor",
          "description" : "The name which would be preferred in the account name"
        },
        "phoneNumber" : {
          "type" : "string",
          "example" : "+919876543210",
          "description" : "The phone number to be assosciated with the account and the card",
          "pattern" : "([+]\\d{1,3})?\\d{10}"
        },
        "targetAccount" : {
          "type" : "string",
          "example" : "account://account-num-1",
          "description" : "The account number to be assosciated with the card"
        },
        "accountHolderID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "ID of the individual being issued with the account."
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which you would like to provide",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "IssueBundleResponse" : {
      "type" : "object",
      "properties" : {
        "requestID" : {
          "type" : "string",
          "example" : "ba3673211-g586-4acb-859e-bb9c60d3qu72",
          "description" : "requestID as an idempotent key"
        },
        "bundleID" : {
          "type" : "string"
        },
        "accounts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IssueAccountArtifactResponse"
          }
        },
        "paymentInstruments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IssuePaymentProductResponse"
          }
        }
      }
    },
    "IssueFormFactorRequest" : {
      "type" : "object",
      "properties" : {
        "requestID" : {
          "type" : "string",
          "example" : "ba3673211-g586-4acb-859e-bb9c60d3qu72",
          "description" : "requestID as an idempotent key"
        },
        "formFactorProductID" : {
          "type" : "string",
          "example" : "9d7ae299",
          "description" : "ID of the form factor/card which is being issued"
        },
        "resourceID" : {
          "type" : "string",
          "example" : "9d7ae299",
          "description" : "ID of the resource which is being issued and is part of the bundle"
        },
        "targetAccountID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "ID of the individual's account which is to be linked to the resource/card"
        },
        "accountHolderID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "ID of the individual being issued with the form factor."
        },
        "orderDetails" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "IssueFormFactorResponse" : {
      "type" : "object",
      "properties" : {
        "requestID" : {
          "type" : "string",
          "example" : "ba3673211-g586-4acb-859e-bb9c60d3qu72",
          "description" : "requestID as an idempotent key"
        },
        "bundleID" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "formFactorID" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "targetUri" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which you would like to provide",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "IssueFormFactorStandardRequest" : {
      "type" : "object",
      "properties" : {
        "requestID" : {
          "type" : "string",
          "example" : "ba3673211-g586-4acb-859e-bb9c60d3qu72",
          "description" : "requestID as an idempotent key"
        },
        "formFactorProductID" : {
          "type" : "string",
          "example" : "9d7ae299",
          "description" : "ID of the form factor/card which is being issued"
        },
        "resourceID" : {
          "type" : "string",
          "example" : "9d7ae299",
          "description" : "ID of the resource which is being issued and is part of the bundle"
        },
        "accountID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "ID of the individual's account which is to be linked to the resource/card"
        },
        "accountHolderID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "ID of the individual being issued with the form factor."
        },
        "orderDetails" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "IssuePaymentProductRequest" : {
      "type" : "object",
      "properties" : {
        "requestID" : {
          "type" : "string",
          "example" : "ba3673211-g586-4acb-859e-bb9c60d3qu72",
          "description" : "requestID as an idempotent key",
          "minLength" : 0,
          "maxLength" : 37
        },
        "targetAccountID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "ID of the individual's account which is to be linked to the resource/card"
        },
        "phoneNumber" : {
          "type" : "string",
          "example" : "+919876543210",
          "description" : "The phone number to be assosciated with the account and the card",
          "pattern" : "([+]\\d{1,3})?\\d{10}"
        },
        "paymentProductID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "ID of the account product ID which is part of the issuing bundle"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "IssuePaymentProductResponse" : {
      "type" : "object",
      "properties" : {
        "bundleID" : {
          "type" : "string"
        },
        "resourceID" : {
          "type" : "string"
        },
        "formFactorID" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "targetAccount" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which you would like to provide",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "IssuePaymentProductsRequest" : {
      "type" : "object",
      "properties" : {
        "requestID" : {
          "type" : "string",
          "example" : "ba3673211-g586-4acb-859e-bb9c60d3qu72",
          "description" : "requestID as an idempotent key",
          "minLength" : 0,
          "maxLength" : 37
        },
        "accountHolderID" : {
          "type" : "string",
          "example" : "ba3673211-g586-4acb-859e-bb9c60d3qu72",
          "description" : "Account Holder to whom the bundle is being issued"
        },
        "issuePaymentProductRequests" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IssuePaymentProductRequest"
          }
        }
      }
    },
    "IssueResourceRequest" : {
      "type" : "object",
      "properties" : {
        "requestID" : {
          "type" : "string",
          "example" : "ba3673211-g586-4acb-859e-bb9c60d3qu72",
          "description" : "requestID as an idempotent key",
          "minLength" : 0,
          "maxLength" : 37
        },
        "targetAccountID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "ID of the individual's account which is to be linked to the resource/card"
        },
        "phoneNumber" : {
          "type" : "string",
          "example" : "+919876543210",
          "description" : "The phone number to be assosciated with the account and the card",
          "pattern" : "([+]\\d{1,3})?\\d{10}"
        },
        "resourceProductID" : {
          "type" : "string",
          "example" : "9d7ae299",
          "description" : "ID of the resource product which is being issued and is part of the bundle"
        },
        "accountHolderID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "ID of the individual being issued with the resource."
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "IssueResourceResponse" : {
      "type" : "object",
      "properties" : {
        "bundleID" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "resourceID" : {
          "type" : "string"
        },
        "targetUri" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which you would like to provide",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "IssueResourceStandardRequest" : {
      "type" : "object",
      "properties" : {
        "requestID" : {
          "type" : "string",
          "example" : "ba3673211-g586-4acb-859e-bb9c60d3qu72",
          "description" : "requestID as an idempotent key",
          "minLength" : 0,
          "maxLength" : 37
        },
        "accountID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "ID of the individual's account which is to be linked to the resource/card"
        },
        "phoneNumber" : {
          "type" : "string",
          "example" : "+919876543210",
          "description" : "The phone number to be assosciated with the account and the card",
          "pattern" : "([+]\\d{1,3})?\\d{10}"
        },
        "resourceProductID" : {
          "type" : "string",
          "example" : "9d7ae299",
          "description" : "ID of the resource product which is being issued and is part of the bundle"
        },
        "accountHolderID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "ID of the individual being issued with the resource."
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "JID" : {
      "type" : "object",
      "properties" : {
        "appDomain" : {
          "type" : "string"
        },
        "serviceName" : {
          "type" : "string"
        },
        "nodeId" : {
          "type" : "string"
        },
        "resource" : {
          "type" : "string"
        },
        "serviceInstanceJID" : {
          "type" : "boolean"
        },
        "primaryServiceName" : {
          "type" : "string"
        },
        "serviceViewName" : {
          "type" : "string"
        },
        "bareJID" : {
          "$ref" : "#/definitions/JID"
        },
        "serviceViewJID" : {
          "type" : "boolean"
        },
        "defaultServiceNode" : {
          "type" : "boolean"
        },
        "jidOfAGroup" : {
          "type" : "boolean"
        },
        "proxyServiceJID" : {
          "type" : "boolean"
        }
      }
    },
    "JsonArray" : {
      "type" : "object",
      "properties" : {
        "asBoolean" : {
          "type" : "boolean"
        },
        "asNumber" : {
          "$ref" : "#/definitions/Number"
        },
        "asDouble" : {
          "type" : "number",
          "format" : "double"
        },
        "asFloat" : {
          "type" : "number",
          "format" : "float"
        },
        "asLong" : {
          "type" : "integer",
          "format" : "int64"
        },
        "asInt" : {
          "type" : "integer",
          "format" : "int32"
        },
        "asByte" : {
          "type" : "string",
          "format" : "byte"
        },
        "asCharacter" : {
          "type" : "string"
        },
        "asBigDecimal" : {
          "type" : "number"
        },
        "asBigInteger" : {
          "type" : "integer"
        },
        "asShort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "asString" : {
          "type" : "string"
        },
        "asJsonNull" : {
          "$ref" : "#/definitions/JsonNull"
        },
        "asJsonPrimitive" : {
          "$ref" : "#/definitions/JsonPrimitive"
        },
        "asJsonArray" : {
          "$ref" : "#/definitions/JsonArray"
        },
        "asJsonObject" : {
          "$ref" : "#/definitions/JsonObject"
        },
        "jsonArray" : {
          "type" : "boolean"
        },
        "jsonObject" : {
          "type" : "boolean"
        },
        "jsonPrimitive" : {
          "type" : "boolean"
        },
        "jsonNull" : {
          "type" : "boolean"
        }
      }
    },
    "JsonElement" : {
      "type" : "object",
      "properties" : {
        "asBoolean" : {
          "type" : "boolean"
        },
        "asJsonNull" : {
          "$ref" : "#/definitions/JsonNull"
        },
        "asNumber" : {
          "$ref" : "#/definitions/Number"
        },
        "asJsonPrimitive" : {
          "$ref" : "#/definitions/JsonPrimitive"
        },
        "asJsonArray" : {
          "$ref" : "#/definitions/JsonArray"
        },
        "asJsonObject" : {
          "$ref" : "#/definitions/JsonObject"
        },
        "jsonArray" : {
          "type" : "boolean"
        },
        "jsonObject" : {
          "type" : "boolean"
        },
        "jsonPrimitive" : {
          "type" : "boolean"
        },
        "jsonNull" : {
          "type" : "boolean"
        },
        "asDouble" : {
          "type" : "number",
          "format" : "double"
        },
        "asFloat" : {
          "type" : "number",
          "format" : "float"
        },
        "asLong" : {
          "type" : "integer",
          "format" : "int64"
        },
        "asInt" : {
          "type" : "integer",
          "format" : "int32"
        },
        "asByte" : {
          "type" : "string",
          "format" : "byte"
        },
        "asCharacter" : {
          "type" : "string"
        },
        "asBigDecimal" : {
          "type" : "number"
        },
        "asBigInteger" : {
          "type" : "integer"
        },
        "asShort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "asString" : {
          "type" : "string"
        }
      }
    },
    "JsonNull" : {
      "type" : "object",
      "properties" : {
        "asBoolean" : {
          "type" : "boolean"
        },
        "asJsonNull" : {
          "$ref" : "#/definitions/JsonNull"
        },
        "asNumber" : {
          "$ref" : "#/definitions/Number"
        },
        "asJsonPrimitive" : {
          "$ref" : "#/definitions/JsonPrimitive"
        },
        "asJsonArray" : {
          "$ref" : "#/definitions/JsonArray"
        },
        "asJsonObject" : {
          "$ref" : "#/definitions/JsonObject"
        },
        "jsonArray" : {
          "type" : "boolean"
        },
        "jsonObject" : {
          "type" : "boolean"
        },
        "jsonPrimitive" : {
          "type" : "boolean"
        },
        "jsonNull" : {
          "type" : "boolean"
        },
        "asDouble" : {
          "type" : "number",
          "format" : "double"
        },
        "asFloat" : {
          "type" : "number",
          "format" : "float"
        },
        "asLong" : {
          "type" : "integer",
          "format" : "int64"
        },
        "asInt" : {
          "type" : "integer",
          "format" : "int32"
        },
        "asByte" : {
          "type" : "string",
          "format" : "byte"
        },
        "asCharacter" : {
          "type" : "string"
        },
        "asBigDecimal" : {
          "type" : "number"
        },
        "asBigInteger" : {
          "type" : "integer"
        },
        "asShort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "asString" : {
          "type" : "string"
        }
      }
    },
    "JsonObject" : {
      "type" : "object",
      "properties" : {
        "asBoolean" : {
          "type" : "boolean"
        },
        "asJsonNull" : {
          "$ref" : "#/definitions/JsonNull"
        },
        "asNumber" : {
          "$ref" : "#/definitions/Number"
        },
        "asJsonPrimitive" : {
          "$ref" : "#/definitions/JsonPrimitive"
        },
        "asJsonArray" : {
          "$ref" : "#/definitions/JsonArray"
        },
        "asJsonObject" : {
          "$ref" : "#/definitions/JsonObject"
        },
        "jsonArray" : {
          "type" : "boolean"
        },
        "jsonObject" : {
          "type" : "boolean"
        },
        "jsonPrimitive" : {
          "type" : "boolean"
        },
        "jsonNull" : {
          "type" : "boolean"
        },
        "asDouble" : {
          "type" : "number",
          "format" : "double"
        },
        "asFloat" : {
          "type" : "number",
          "format" : "float"
        },
        "asLong" : {
          "type" : "integer",
          "format" : "int64"
        },
        "asInt" : {
          "type" : "integer",
          "format" : "int32"
        },
        "asByte" : {
          "type" : "string",
          "format" : "byte"
        },
        "asCharacter" : {
          "type" : "string"
        },
        "asBigDecimal" : {
          "type" : "number"
        },
        "asBigInteger" : {
          "type" : "integer"
        },
        "asShort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "asString" : {
          "type" : "string"
        }
      }
    },
    "JsonPrimitive" : {
      "type" : "object",
      "properties" : {
        "number" : {
          "type" : "boolean"
        },
        "boolean" : {
          "type" : "boolean"
        },
        "asBoolean" : {
          "type" : "boolean"
        },
        "asNumber" : {
          "$ref" : "#/definitions/Number"
        },
        "asDouble" : {
          "type" : "number",
          "format" : "double"
        },
        "asFloat" : {
          "type" : "number",
          "format" : "float"
        },
        "asLong" : {
          "type" : "integer",
          "format" : "int64"
        },
        "asInt" : {
          "type" : "integer",
          "format" : "int32"
        },
        "asByte" : {
          "type" : "string",
          "format" : "byte"
        },
        "asCharacter" : {
          "type" : "string"
        },
        "asBigDecimal" : {
          "type" : "number"
        },
        "asBigInteger" : {
          "type" : "integer"
        },
        "asShort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "string" : {
          "type" : "boolean"
        },
        "asString" : {
          "type" : "string"
        },
        "asJsonNull" : {
          "$ref" : "#/definitions/JsonNull"
        },
        "asJsonPrimitive" : {
          "$ref" : "#/definitions/JsonPrimitive"
        },
        "asJsonArray" : {
          "$ref" : "#/definitions/JsonArray"
        },
        "asJsonObject" : {
          "$ref" : "#/definitions/JsonObject"
        },
        "jsonArray" : {
          "type" : "boolean"
        },
        "jsonObject" : {
          "type" : "boolean"
        },
        "jsonPrimitive" : {
          "type" : "boolean"
        },
        "jsonNull" : {
          "type" : "boolean"
        }
      }
    },
    "KYCDetails" : {
      "type" : "object",
      "properties" : {
        "kycStatus" : {
          "type" : "string"
        },
        "updateTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "expiryTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "kycStatusPostExpiry" : {
          "type" : "string"
        },
        "authType" : {
          "type" : "string"
        },
        "authData" : {
          "$ref" : "#/definitions/JsonObject"
        },
        "kycAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "KYCDetailsStandardResponse" : {
      "type" : "object",
      "properties" : {
        "kycStatus" : {
          "type" : "string"
        },
        "updateTime" : {
          "type" : "string"
        },
        "expiryTime" : {
          "type" : "string"
        },
        "kycStatusPostExpiry" : {
          "type" : "string"
        },
        "kycAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "KYCStatus" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountHolderID" : {
          "type" : "string"
        },
        "kycStatus" : {
          "type" : "string"
        },
        "updateTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "expiryTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "standardUpdateTime" : {
          "type" : "string"
        },
        "standardExpiryTime" : {
          "type" : "string"
        },
        "kycStatusPostExpiry" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "ListEntityGroupResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "entityGroupList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EntityGroup"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "ListInterceptorResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "interceptors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Interceptor"
          }
        }
      }
    },
    "ListPaymentProductResponse" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "paymentProducts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PaymentProduct"
          }
        }
      }
    },
    "ListPaymentResponse" : {
      "type" : "object",
      "properties" : {
        "payments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Payment"
          }
        }
      }
    },
    "ListTransactionPoliciesResponse" : {
      "type" : "object",
      "properties" : {
        "transactionPolicies" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TransactionPolicyResponse"
          }
        }
      }
    },
    "Money" : {
      "type" : "object",
      "properties" : {
        "currency" : {
          "type" : "string"
        },
        "amount" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Number" : {
      "type" : "object"
    },
    "OrderDetails" : {
      "type" : "object",
      "properties" : {
        "orderID" : {
          "type" : "string"
        },
        "cardSkuID" : {
          "type" : "string"
        },
        "cardSku" : {
          "$ref" : "#/definitions/CardSku"
        },
        "plasticCode" : {
          "type" : "string"
        },
        "thirdLineEmbossing" : {
          "type" : "string"
        },
        "fourthLineEmbossing" : {
          "type" : "string"
        },
        "expiry" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "deliveryAddress" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "tenantAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "vendorAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "orderStatus" : {
          "type" : "string"
        },
        "embossedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "orderedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "OrderSummary" : {
      "type" : "object",
      "properties" : {
        "quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "orderID" : {
          "type" : "string"
        },
        "cardSkuID" : {
          "type" : "string"
        },
        "plasticCode" : {
          "type" : "string"
        },
        "expiry" : {
          "$ref" : "#/definitions/Expiry"
        },
        "thirdLineEmbossing" : {
          "type" : "string"
        },
        "fourthLineEmbossing" : {
          "type" : "string"
        },
        "deliveryAddress" : {
          "$ref" : "#/definitions/Address"
        },
        "tenantAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "vendorAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "additionalAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "orderStatus" : {
          "type" : "string"
        },
        "orderedAt" : {
          "type" : "string"
        }
      }
    },
    "OverrideIssuanceRequest" : {
      "type" : "object",
      "properties" : {
        "requestID" : {
          "type" : "string",
          "example" : "ba3673211-g586-4acb-859e-bb9c60d3qu72",
          "description" : "The request-id of the request that needs to be overriden"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "remarks" : {
          "type" : "string",
          "example" : "Different than SDN",
          "description" : "Operator provided remarks/reasons for issuance"
        },
        "action" : {
          "type" : "string",
          "example" : "Different than SDN",
          "description" : "Operator provided remarks/reasons for issuance",
          "pattern" : "APPROVE|DECLINE"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "POP" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "label" : {
          "type" : "string"
        },
        "entityID" : {
          "type" : "string"
        },
        "entityType" : {
          "type" : "string"
        },
        "address" : {
          "$ref" : "#/definitions/Address"
        },
        "contactList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Contact"
          }
        },
        "status" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "default" : {
          "type" : "boolean"
        }
      }
    },
    "POPResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountHolderID" : {
          "type" : "string"
        },
        "label" : {
          "type" : "string"
        },
        "address" : {
          "$ref" : "#/definitions/Address"
        },
        "contactList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContactResponse"
          }
        },
        "status" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "createdAt" : {
          "type" : "string"
        },
        "updatedAt" : {
          "type" : "string"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "default" : {
          "type" : "boolean"
        }
      }
    },
    "PageMetadata" : {
      "type" : "object",
      "properties" : {
        "size" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int64"
        },
        "number" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "PagedModel" : {
      "type" : "object",
      "properties" : {
        "content" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        },
        "metadata" : {
          "$ref" : "#/definitions/PageMetadata"
        }
      }
    },
    "Payment" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "requestChannelType" : {
          "type" : "string",
          "enum" : [ "ZETA_POS", "SUPER_CARD", "COLLECT_CARD", "COLLECT_CALL", "ZETA_PAYMENT_PAGE", "ZETA_USER_APP", "ZETA_API", "ZETA_EXPRESS_REMOTE", "ZETA_EXPRESS_KIOSK", "ZETA_SHADOW_CARD", "ZETA_UNKNOWN", "UPI", "VOID", "IMPS", "NEFT" ]
        },
        "state" : {
          "type" : "string",
          "enum" : [ "VOID", "PAYMENT_REQUESTED", "PAYMENT_AUTHORIZATION_REQUESTED", "CHALLENGE_REQUIRED", "CHALLENGE_SUBMITTED", "PAYMENT_AUTHORIZATION_RECEIVED", "PAYMENT_EFFECTED", "PAYMENT_CAPTURED", "REVERSAL_INITIATED", "PAYMENT_REVERSED", "PAYMENT_REQUEST_CANCELLED", "PAYMENT_REQUEST_DECLINED", "PAYMENT_REQUEST_FAILED", "PAYMENT_DECLINED", "PAYMENT_FAILED" ]
        },
        "value" : {
          "$ref" : "#/definitions/Money"
        },
        "stateTransitions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "payer" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "payee" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "paymentRequest" : {
          "$ref" : "#/definitions/PublicPaymentRequestWrapper"
        },
        "receipts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Receipt"
          }
        },
        "error" : {
          "$ref" : "#/definitions/Error"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "PaymentProduct" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "id" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "channels" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Channel"
          }
        },
        "resourceProduct" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ACTIVE", "INACTIVE", "DELETED" ]
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "PersonalizedOrderRequest" : {
      "type" : "object",
      "properties" : {
        "orderID" : {
          "type" : "string"
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "cardSkuID" : {
          "type" : "string"
        },
        "expiry" : {
          "$ref" : "#/definitions/Expiry"
        },
        "records" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PersonalizedOrderRequestRecord"
          }
        }
      }
    },
    "PersonalizedOrderRequestRecord" : {
      "type" : "object",
      "properties" : {
        "recordID" : {
          "type" : "integer",
          "format" : "int32"
        },
        "deliveryAddress" : {
          "$ref" : "#/definitions/Address"
        },
        "plasticCode" : {
          "type" : "string"
        },
        "thirdLineEmbossing" : {
          "type" : "string"
        },
        "fourthLineEmbossing" : {
          "type" : "string"
        },
        "vendorAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "tenantAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "additionalAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "Policies" : {
      "type" : "object",
      "properties" : {
        "issuancePolicies" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "paymentPolicies" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Policy" : {
      "type" : "object",
      "properties" : {
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "code" : {
          "type" : "string"
        },
        "desc" : {
          "type" : "string"
        },
        "scope" : {
          "type" : "string",
          "enum" : [ "AGGREGATE_OF_ALL_ACCOUNTS_OF_ACCOUNT_HOLDER", "EACH_ACCOUNT_OF_ACCOUNT_HOLDER" ]
        },
        "coaID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "txnConstraints" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyTxnConstraint"
          }
        },
        "policyTxnRules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyTxnRule"
          }
        },
        "policyBalanceRules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyBalanceRule"
          }
        },
        "policyAggregateRules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyAggregateRule"
          }
        },
        "effectiveFrom" : {
          "type" : "integer",
          "format" : "int64"
        },
        "expiresAt" : {
          "type" : "integer",
          "format" : "int64"
        },
        "createdAt" : {
          "type" : "integer",
          "format" : "int64"
        },
        "updatedAt" : {
          "type" : "integer",
          "format" : "int64"
        },
        "policyViolationAction" : {
          "type" : "string",
          "enum" : [ "DECLINE_AND_NOTIFY", "DECLINE", "NOTIFY" ]
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "state" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED" ]
        }
      }
    },
    "PolicyAggregateRule" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "policyVersionID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "action" : {
          "type" : "string",
          "enum" : [ "DEBIT", "CREDIT", "DEBIT_REVERSAL", "CREDIT_REVERSAL" ]
        },
        "categoryCode" : {
          "type" : "string"
        },
        "aggExpressionID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "aggExpressionCode" : {
          "type" : "string"
        },
        "dailyLimit" : {
          "type" : "integer",
          "format" : "int64"
        },
        "weeklyLimit" : {
          "type" : "integer",
          "format" : "int64"
        },
        "monthlyLimit" : {
          "type" : "integer",
          "format" : "int64"
        },
        "quarterlyLimit" : {
          "type" : "integer",
          "format" : "int64"
        },
        "yearlyLimit" : {
          "type" : "integer",
          "format" : "int64"
        },
        "errorCode" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "VELOCITY", "VOLUME" ]
        }
      }
    },
    "PolicyBalanceRule" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "policyVersionID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "action" : {
          "type" : "string",
          "enum" : [ "DEBIT", "CREDIT", "DEBIT_REVERSAL", "CREDIT_REVERSAL" ]
        },
        "minRequiredBalance" : {
          "type" : "integer",
          "format" : "int64"
        },
        "maxAllowedBalance" : {
          "type" : "integer",
          "format" : "int64"
        },
        "minRequiredBalanceBeforeTxn" : {
          "type" : "integer",
          "format" : "int64"
        },
        "maxAllowedBalanceBeforeTxn" : {
          "type" : "integer",
          "format" : "int64"
        },
        "transactionCategory" : {
          "type" : "string"
        },
        "errorCode" : {
          "type" : "string"
        }
      }
    },
    "PolicyError" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "errorCode" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "createdAt" : {
          "type" : "string"
        },
        "updatedAt" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "PolicyErrorCodeResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "97b93d25-7883-4745-ab10-cc084898393a",
          "description" : "unique identifier"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 140793,
          "description" : "ID of the on-boarded organization"
        },
        "code" : {
          "type" : "string",
          "example" : "ERCIN0012345",
          "description" : "Code given to a policy error code"
        },
        "errorCode" : {
          "type" : "string",
          "example" : "TRANSACTION_OUTSIDE_TIME_RANGE",
          "description" : "ErrorCode given to a policy "
        },
        "description" : {
          "type" : "string",
          "description" : "Description of policy error"
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information that you would like to associate with the transaction policy",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "PolicyMappingStandardResponse" : {
      "type" : "object"
    },
    "PolicyResponse" : {
      "type" : "object",
      "properties" : {
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "code" : {
          "type" : "string"
        },
        "desc" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "txnConstraints" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyTxnConstraint"
          }
        },
        "policyTxnRules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyTxnRule"
          }
        },
        "policyBalanceRules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyBalanceRule"
          }
        },
        "policyAggregateRules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyAggregateRule"
          }
        },
        "effectiveFrom" : {
          "type" : "string"
        },
        "expiresAt" : {
          "type" : "string"
        },
        "createdAt" : {
          "type" : "string"
        },
        "updatedAt" : {
          "type" : "string"
        },
        "policyViolationAction" : {
          "type" : "string",
          "enum" : [ "DECLINE_AND_NOTIFY", "DECLINE", "NOTIFY" ]
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "state" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED" ]
        }
      }
    },
    "PolicyTxnConstraint" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "policyVersionID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "action" : {
          "type" : "string",
          "enum" : [ "DEBIT", "CREDIT", "DEBIT_REVERSAL", "CREDIT_REVERSAL" ]
        },
        "allowedTxnCategoryCodes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "disallowedTxnCategoryCodes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "allowedTimeSlices" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "disallowedTimeSlices" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "errorCode" : {
          "type" : "string"
        }
      }
    },
    "PolicyTxnRule" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "policyVersionID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "action" : {
          "type" : "string",
          "enum" : [ "DEBIT", "CREDIT", "DEBIT_REVERSAL", "CREDIT_REVERSAL" ]
        },
        "categoryCode" : {
          "type" : "string"
        },
        "minRequiredAmount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "maxAllowedAmount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "errorCode" : {
          "type" : "string"
        }
      }
    },
    "Posting" : {
      "type" : "object",
      "properties" : {
        "postingID" : {
          "type" : "string"
        },
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "value" : {
          "$ref" : "#/definitions/Money"
        },
        "newBalance" : {
          "$ref" : "#/definitions/Money"
        },
        "instrumentType" : {
          "type" : "string"
        },
        "productType" : {
          "type" : "string"
        },
        "cardProgramID" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "coupons" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/JsonObject"
          }
        }
      }
    },
    "Product" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "ENABLED", "BLOCKED" ]
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "coaID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "productFamilyID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "ACCOUNT_BASED", "WALLET_BASED" ]
        },
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "coaNodeID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "auraAccountGroupID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        }
      }
    },
    "ProductFamily" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "ENABLED", "BLOCKED" ]
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "coaID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "parentCoaNodeID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountingType" : {
          "type" : "string",
          "enum" : [ "ASSET", "LIABILITY", "INCOME", "EXPENSE", "EQUITY" ]
        },
        "type" : {
          "type" : "string",
          "enum" : [ "WALLET_BASED", "ACCOUNT_BASED" ]
        },
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "coaNodeID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "auraAccountGroupID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "ProductFamilyResponse" : {
      "type" : "object"
    },
    "ProductInfoRequest" : {
      "type" : "object",
      "properties" : {
        "productID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "The UUID of the account product which will be a part of the bundle"
        },
        "productFamilyID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "The UUID of the product's family which will be a part of the bundle"
        },
        "programIDs" : {
          "type" : "array",
          "description" : "The UUIDs of the programs which will be associated to the account product at the time of issuance",
          "items" : {
            "type" : "string"
          }
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which is specific to the product info",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "ProductMappingRequest" : {
      "type" : "object",
      "properties" : {
        "accountProductInfoRequest" : {
          "$ref" : "#/definitions/ProductInfoRequest"
        },
        "paymentProductInfoRequest" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProductInfoRequest"
          }
        }
      }
    },
    "ProductResponse" : {
      "type" : "object"
    },
    "PublicPaymentRequestWrapper" : {
      "type" : "object",
      "properties" : {
        "paymentRequestID" : {
          "type" : "string"
        },
        "requestFrom" : {
          "type" : "string"
        },
        "requestTo" : {
          "type" : "string"
        },
        "value" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Money"
          }
        },
        "dueBy" : {
          "type" : "integer",
          "format" : "int64"
        },
        "towards" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "Receipt" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "receiptType" : {
          "type" : "string",
          "enum" : [ "AUTHORIZATION", "PAYMENT", "REVERSAL" ]
        },
        "paymentID" : {
          "type" : "string"
        },
        "paymentRequestID" : {
          "type" : "string"
        },
        "receiptID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "transactionHash" : {
          "type" : "string"
        },
        "transactionCode" : {
          "type" : "string"
        },
        "paymentFrom" : {
          "type" : "string"
        },
        "paymentTo" : {
          "type" : "string"
        },
        "time" : {
          "type" : "integer",
          "format" : "int64"
        },
        "debits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Posting"
          }
        },
        "credits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Posting"
          }
        },
        "towards" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "value" : {
          "$ref" : "#/definitions/Money"
        },
        "payerInfo" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "payeeInfo" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "reversedReceiptID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "type" : "string"
        },
        "signatoryJID" : {
          "$ref" : "#/definitions/JID"
        },
        "zetaSignature" : {
          "$ref" : "#/definitions/ZetaSignature"
        },
        "payloadVersion" : {
          "type" : "integer",
          "format" : "int32"
        },
        "signed" : {
          "type" : "boolean"
        },
        "signature" : {
          "type" : "string"
        }
      }
    },
    "ReplacePolicyRequestPayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "txnConstraints" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyTxnConstraint"
          }
        },
        "policyTxnRules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyTxnRule"
          }
        },
        "policyBalanceRules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyBalanceRule"
          }
        },
        "policyAggregateRules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyAggregateRule"
          }
        },
        "effectiveFrom" : {
          "type" : "integer",
          "format" : "int64"
        },
        "expiresAt" : {
          "type" : "integer",
          "format" : "int64"
        },
        "policyViolationAction" : {
          "type" : "string",
          "enum" : [ "DECLINE_AND_NOTIFY", "DECLINE", "NOTIFY" ]
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "ReplacePolicyResponsePayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "policyVersionID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "code" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "ReplaceTransactionPolicyRequest" : {
      "type" : "object",
      "required" : [ "coaID" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "Description of transaction policy"
        },
        "coaID" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Coa ID of issuer to which the transaction policy would be associated"
        },
        "transactionConstraints" : {
          "type" : "array",
          "description" : "Transaction Constraints containing allowed/disallowed transaction categories and time slices",
          "items" : {
            "$ref" : "#/definitions/TransactionConstraint"
          }
        },
        "transactionRules" : {
          "type" : "array",
          "description" : "Transaction rules to be applied on a particular posting",
          "items" : {
            "$ref" : "#/definitions/TransactionRule"
          }
        },
        "balanceRules" : {
          "type" : "array",
          "description" : "Balance rules to be applied either on transacting account or group of accounts of account holder based on applicability criteria and policy scope ",
          "items" : {
            "$ref" : "#/definitions/BalanceRule"
          }
        },
        "aggregateRules" : {
          "type" : "array",
          "description" : "Aggregate rules (daily, weekly, monthly, quarterly, yearly) to be applied based on applicability criteria and transaction category",
          "items" : {
            "$ref" : "#/definitions/AggregateRule"
          }
        },
        "effectiveFrom" : {
          "type" : "string",
          "example" : "2020-02-18T06:24:14.000Z",
          "description" : "Effective date (epoch time in milliseconds) from when the transaction policy will be applied"
        },
        "expiresAt" : {
          "type" : "string",
          "example" : "2020-02-18T06:24:14.000Z",
          "description" : "Expiry date (epoch time in milliseconds) for the transaction policy post which it will not be applied"
        },
        "policyViolationAction" : {
          "type" : "string",
          "example" : "DECLINE, NOTIFY, DECLINE_AND_NOTIFY",
          "description" : "Transaction policy violation action",
          "enum" : [ "DECLINE_AND_NOTIFY", "DECLINE", "NOTIFY" ]
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information that you would like to associate with the transaction policy",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "ReplaceTransactionPolicyRequestPayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifiId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "id" : {
          "type" : "string"
        },
        "txnConstraints" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyTxnConstraint"
          }
        },
        "txnLimits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyTxnRule"
          }
        },
        "balanceLimits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyBalanceRule"
          }
        },
        "volumeLimits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyAggregateRule"
          }
        },
        "velocityLimits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyAggregateRule"
          }
        },
        "policyViolationAction" : {
          "type" : "string",
          "enum" : [ "DECLINE_AND_NOTIFY", "DECLINE", "NOTIFY" ]
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "validFrom" : {
          "type" : "integer",
          "format" : "int64"
        },
        "validUntil" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Resource" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "requestId" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "resourceProductId" : {
          "type" : "string"
        },
        "resourceProduct" : {
          "$ref" : "#/definitions/ResourceProduct"
        },
        "targetURI" : {
          "type" : "string"
        },
        "formFactors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FormFactor"
          }
        },
        "authProfileId" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "vectors" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "policies" : {
          "$ref" : "#/definitions/Policies"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ACTIVE", "INACTIVE", "DELETED" ]
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "ResourceProduct" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "id" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "formFactorProducts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FormFactorProduct"
          }
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "policies" : {
          "$ref" : "#/definitions/Policies"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ACTIVE", "INACTIVE", "DELETED" ]
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "ReversalRequest" : {
      "type" : "object",
      "required" : [ "amount", "currency", "remarks", "requestID", "transferCode" ],
      "properties" : {
        "requestID" : {
          "type" : "string",
          "example" : "93480e72-b883-46fa-8f3f-abe326ab9df7",
          "description" : "Request id for A2A Reversal"
        },
        "currency" : {
          "type" : "string",
          "example" : "INR",
          "description" : "Currency for which reversal is required"
        },
        "amount" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1,
          "description" : "Amount for which reversal is required"
        },
        "transferCode" : {
          "type" : "string",
          "example" : "ATLAS_P2M_AUTH-REVERSAL",
          "description" : "Denotes reversal transfer code"
        },
        "doPartialReversal" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Pass this as true or false for partial reversal of transaction"
        },
        "remarks" : {
          "type" : "string",
          "example" : "Reversal of vbo1",
          "description" : "Remark of the reversal"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "SensitiveCardView" : {
      "type" : "object",
      "properties" : {
        "algo" : {
          "type" : "string",
          "enum" : [ "ECDH" ]
        },
        "value" : {
          "$ref" : "#/definitions/ECDHEncryptedCardPayload"
        }
      }
    },
    "SignatureAlgorithm" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "StatusReason" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "enum" : [ "LOST_OR_STOLEN", "DAMAGED", "HOTLISTED", "OFAC_BLOCKED", "OTHER" ]
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "Tag" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "TransactionCategoryStructure" : {
      "type" : "object",
      "properties" : {
        "txnCategoryComparator" : {
          "type" : "string",
          "enum" : [ "EQUALS", "CONTAINS" ]
        },
        "attrVal" : {
          "type" : "string"
        },
        "attrKey" : {
          "type" : "string"
        }
      }
    },
    "TransactionConstraint" : {
      "type" : "object",
      "properties" : {
        "action" : {
          "type" : "string",
          "enum" : [ "DEBIT", "CREDIT", "DEBIT_REVERSAL", "CREDIT_REVERSAL" ]
        },
        "allowedTransactionCategoryCodes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "disallowedTransactionCategoryCodes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "allowedTimeSlices" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "disallowedTimeSlices" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "errorCode" : {
          "type" : "string"
        }
      }
    },
    "TransactionPolicyResponse" : {
      "type" : "object",
      "properties" : {
        "ifiID" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 123123,
          "description" : "ID of the on-boarded organization"
        },
        "accountHolderID" : {
          "type" : "string",
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db",
          "description" : "ID of the account holder"
        },
        "coaID" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "POLIN0012345",
          "description" : "Code given to a transaction policy"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Policy ID"
        },
        "code" : {
          "type" : "string",
          "description" : "Coa ID of issuer to which the transaction policy would be associated"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of transaction policy"
        },
        "state" : {
          "type" : "string",
          "example" : "ENABLED or DISABLED",
          "description" : "State of the transaction policy",
          "enum" : [ "ENABLED", "DISABLED" ]
        },
        "scope" : {
          "type" : "string",
          "example" : "AGGREGATE_OF_ALL_ACCOUNTS_OF_ACCOUNT_HOLDER or EACH_ACCOUNT_OF_ACCOUNT_HOLDER",
          "description" : "Scope of transaction policy",
          "enum" : [ "AGGREGATE_OF_ALL_ACCOUNTS_OF_ACCOUNT_HOLDER", "EACH_ACCOUNT_OF_ACCOUNT_HOLDER" ]
        },
        "transactionConstraints" : {
          "type" : "array",
          "description" : "Transaction Constraints containing allowed/disallowed transaction categories and time slices",
          "items" : {
            "$ref" : "#/definitions/TransactionConstraint"
          }
        },
        "transactionRules" : {
          "type" : "array",
          "description" : "Transaction rules to be applied on a particular posting",
          "items" : {
            "$ref" : "#/definitions/TransactionRule"
          }
        },
        "balanceRules" : {
          "type" : "array",
          "description" : "Balance rules to be applied either on transacting account or group of accounts of account holder based on applicability criteria and policy scope ",
          "items" : {
            "$ref" : "#/definitions/BalanceRule"
          }
        },
        "aggregateRules" : {
          "type" : "array",
          "description" : "Aggregate rules (daily, weekly, monthly, quarterly, yearly) to be applied based on applicability criteria and transaction category",
          "items" : {
            "$ref" : "#/definitions/AggregateRule"
          }
        },
        "effectiveFrom" : {
          "type" : "string",
          "example" : "2020-02-18T06:24:14.000Z",
          "description" : "Effective date from when the transaction policy will be applied"
        },
        "expiresAt" : {
          "type" : "string",
          "example" : "2020-02-18T06:24:14.000Z",
          "description" : "Expiry date for the transaction policy post which it will not be applied"
        },
        "createdAt" : {
          "type" : "string",
          "example" : "2020-02-18T06:24:14.000Z",
          "description" : "Creation date of the transaction policy"
        },
        "updatedAt" : {
          "type" : "string",
          "example" : "2020-02-18T06:24:14.000Z",
          "description" : "Last updated date of the transaction policy"
        },
        "violationAction" : {
          "type" : "string",
          "example" : "DECLINE, NOTIFY, DECLINE_AND_NOTIFY",
          "description" : "Transaction policy violation action",
          "enum" : [ "DECLINE_AND_NOTIFY", "DECLINE", "NOTIFY" ]
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information that you would like to associate with the transaction policy",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "TransactionPolicyStandardResponse" : {
      "type" : "object"
    },
    "TransactionRule" : {
      "type" : "object",
      "properties" : {
        "action" : {
          "type" : "string",
          "enum" : [ "DEBIT", "CREDIT", "DEBIT_REVERSAL", "CREDIT_REVERSAL" ]
        },
        "transactionCategoryCode" : {
          "type" : "string"
        },
        "minRequiredAmount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "maxAllowedAmount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "errorCode" : {
          "type" : "string"
        }
      }
    },
    "TransferRequest" : {
      "type" : "object",
      "required" : [ "amount", "currency", "transferTime" ],
      "properties" : {
        "requestID" : {
          "type" : "string"
        },
        "currency" : {
          "type" : "string",
          "enum" : [ "INR", "USD", "EUR", "IDR", "VND" ]
        },
        "amount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "transferCode" : {
          "type" : "string"
        },
        "debitAccountID" : {
          "type" : "string"
        },
        "creditAccountID" : {
          "type" : "string"
        },
        "transferTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "remarks" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which you would like to provide",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "TransferRequestV1" : {
      "type" : "object",
      "required" : [ "amount", "transferTime" ],
      "properties" : {
        "requestID" : {
          "type" : "string"
        },
        "amount" : {
          "$ref" : "#/definitions/Money"
        },
        "transferCode" : {
          "type" : "string"
        },
        "debitAccountID" : {
          "type" : "string"
        },
        "creditAccountID" : {
          "type" : "string"
        },
        "transferTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "remarks" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which you would like to provide",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "TransferResponse" : {
      "type" : "object",
      "properties" : {
        "requestID" : {
          "type" : "string"
        },
        "transferID" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "isRetriableFailure" : {
          "type" : "string"
        }
      }
    },
    "TxnCategory" : {
      "type" : "object",
      "properties" : {
        "ifi" : {
          "type" : "integer",
          "format" : "int64"
        },
        "code" : {
          "type" : "string"
        },
        "desc" : {
          "type" : "string"
        },
        "attrs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TxnCategoryAttrs"
          }
        }
      }
    },
    "TxnCategoryAttrs" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "code" : {
          "type" : "string"
        },
        "attrKey" : {
          "type" : "string"
        },
        "attrVal" : {
          "type" : "string"
        },
        "txnCategoryComparator" : {
          "type" : "string",
          "enum" : [ "EQUALS", "CONTAINS" ]
        }
      }
    },
    "UpdateAccountHolderApplicationRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "applicationID" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "salutation" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "profilePicURL" : {
          "type" : "string"
        },
        "dob" : {
          "type" : "string",
          "format" : "date"
        },
        "gender" : {
          "type" : "string"
        },
        "mothersMaidenName" : {
          "type" : "string"
        }
      }
    },
    "UpdateAccountHolderApplicationStandardRequest" : {
      "type" : "object",
      "properties" : {
        "applicationID" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "salutation" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "profilePicURL" : {
          "type" : "string"
        },
        "dob" : {
          "type" : "string"
        },
        "gender" : {
          "type" : "string"
        },
        "mothersMaidenName" : {
          "type" : "string"
        }
      }
    },
    "UpdateAccountStatusRequest" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "string",
          "description" : "Status of the account to be changed"
        }
      }
    },
    "UpdateAccountStatusResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "UpdateBeneficiaryAccountFusionRequest" : {
      "type" : "object",
      "properties" : {
        "nickname" : {
          "type" : "string"
        },
        "accountInfo" : {
          "$ref" : "#/definitions/BeneficiaryAccountInfo"
        },
        "status" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "type" : {
          "type" : "string"
        },
        "verified" : {
          "type" : "boolean"
        },
        "default" : {
          "type" : "boolean"
        }
      }
    },
    "UpdateBeneficiaryAccountRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "beneficiaryID" : {
          "type" : "string"
        },
        "parentAccountHolderID" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "nickname" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "accountInfo" : {
          "$ref" : "#/definitions/BeneficiaryAccountInfo"
        },
        "status" : {
          "type" : "string"
        },
        "isVerified" : {
          "type" : "boolean"
        },
        "isDefault" : {
          "type" : "boolean"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "UpdateBeneficiaryRequest" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "ifiID" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountHolderID" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "gender" : {
          "type" : "string"
        },
        "salutation" : {
          "type" : "string"
        },
        "profilePicURL" : {
          "type" : "string"
        },
        "relationship" : {
          "type" : "string"
        },
        "dob" : {
          "type" : "string",
          "format" : "date-time"
        },
        "status" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "REAL", "LEGAL", "HEADLESS" ]
        },
        "customFields" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "UpdateBundleRequest" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Savings Bundle",
          "description" : "The name which would be assigned to the bundle"
        },
        "picURL" : {
          "type" : "string",
          "description" : "The URL to get the bundle's display pic"
        },
        "description" : {
          "type" : "string",
          "example" : "Bundle related to savings accounts. Consists of a savings account product and a related debit card",
          "description" : "The detailed description of the bundle"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "UpdateCorporateBeneficiaryAccountRequest" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "string",
          "example" : "ENABLED",
          "description" : "Status of the Beneficiary Account"
        },
        "nickname" : {
          "type" : "string",
          "example" : "true",
          "description" : "Nickname of the Beneficiary Account"
        },
        "accountInfo" : {
          "$ref" : "#/definitions/BeneficiaryAccountInfo"
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information which you would like to provide",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "type" : {
          "type" : "string",
          "description" : "Type of beneficiary ie NEFT or IMPS or ZETA"
        },
        "verified" : {
          "type" : "boolean"
        },
        "default" : {
          "type" : "boolean"
        }
      }
    },
    "UpdateCorporateBeneficiaryRequest" : {
      "type" : "object",
      "properties" : {
        "firstName" : {
          "type" : "string",
          "example" : "Chandler",
          "description" : "First name of the beneficiary being created"
        },
        "middleName" : {
          "type" : "string",
          "example" : "Muriel",
          "description" : "Middle name of the beneficiary being created"
        },
        "lastName" : {
          "type" : "string",
          "example" : "Bing",
          "description" : "Last name of the beneficiary being created"
        },
        "gender" : {
          "type" : "string",
          "example" : "Male",
          "description" : "Gender of the beneficiary being created"
        },
        "salutation" : {
          "type" : "string",
          "example" : "Mr",
          "description" : "Salutation of the beneficiary being created"
        },
        "relationship" : {
          "type" : "string",
          "example" : "Brother",
          "description" : "Relation of the beneficiary being created with the individual"
        },
        "profilePicURL" : {
          "type" : "string",
          "example" : "http://abc.com",
          "description" : "Profile pic URL of the beneficiary being created"
        },
        "dob" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "01/01/1990",
          "description" : "Date of Birth of the account holder being created"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "REAL", "LEGAL", "HEADLESS" ]
        },
        "customFields" : {
          "type" : "object",
          "description" : "Any additional information which you would like to provide",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "UpdateFusionConfigRequest" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string",
          "example" : "123123",
          "description" : "The key of the key-value pair"
        },
        "value" : {
          "type" : "string",
          "example" : "test",
          "description" : "The value of the key-value pair"
        },
        "type" : {
          "type" : "string",
          "example" : "SANDBOX_VBO_MAPPING",
          "description" : "The type for the key-value config"
        },
        "description" : {
          "type" : "string",
          "example" : "Description of the key",
          "description" : "The type for the key-value config"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "UpdateKycStatusRequest" : {
      "type" : "object",
      "properties" : {
        "kycStatus" : {
          "type" : "string"
        },
        "expiryTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "kycStatusPostExpiry" : {
          "type" : "string"
        },
        "kycAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "authType" : {
          "type" : "string"
        },
        "authData" : {
          "$ref" : "#/definitions/JsonObject"
        }
      }
    },
    "UpdateKycStatusStandardRequest" : {
      "type" : "object",
      "properties" : {
        "kycStatus" : {
          "type" : "string"
        },
        "expiryTime" : {
          "type" : "string"
        },
        "kycStatusPostExpiry" : {
          "type" : "string"
        },
        "kycAttributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "authType" : {
          "type" : "string"
        },
        "authData" : {
          "$ref" : "#/definitions/JsonObject"
        }
      }
    },
    "UpdatePolicyErrorCodeRequest" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "Description of policy error"
        },
        "attributes" : {
          "type" : "object",
          "description" : "Any additional information that you would like to associate with the transaction policy",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "UpdatePolicyStateRequestPayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "policyId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ifiId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED" ]
        }
      }
    },
    "UpdateProductForAllAccountsRequest" : {
      "type" : "object",
      "properties" : {
        "accountHolderType" : {
          "type" : "string",
          "enum" : [ "REAL", "LEGAL", "HEADLESS" ]
        },
        "accountHolderID" : {
          "type" : "string"
        },
        "subject" : {
          "type" : "string"
        },
        "object" : {
          "type" : "string"
        }
      }
    },
    "UpdateTransactionPolicyState" : {
      "type" : "object",
      "required" : [ "coaID" ],
      "properties" : {
        "coaID" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Coa ID of issuer to which the transaction policy would be associated"
        }
      }
    },
    "UpdateTransactionPolicyStateRequestPayload" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "transactionPolicyID" : {
          "type" : "string"
        },
        "ifiId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "ENABLED", "DISABLED" ]
        }
      }
    },
    "Vector" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "VectorRequest" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "verified" : {
          "type" : "boolean"
        }
      }
    },
    "Void" : {
      "type" : "object"
    },
    "ZetaSignature" : {
      "type" : "object",
      "properties" : {
        "publicKeyID" : {
          "type" : "string"
        },
        "algoID" : {
          "type" : "integer",
          "format" : "int32"
        },
        "signatureAlgorithm" : {
          "$ref" : "#/definitions/SignatureAlgorithm"
        },
        "signature" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "byte"
          }
        }
      }
    }
  }
}