{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "API Reference",
    "version" : "v1"
  },
  "tags" : [ {
    "name" : "Account Management"
  } ],
  "paths" : {
    "/api/v1/ifi/{ifiID}/accounts" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get all accounts of IFI",
        "operationId" : "getAccounts",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the accounts exist",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "sortBy",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "enum" : [ "asc", "desc" ]
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastFetchedId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetAccountListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/update" : {
      "post" : {
        "tags" : [ "Account Management" ],
        "summary" : "Update all Accounts for a given real or headless account holder",
        "operationId" : "accountHolderUpdated",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ifiID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateProductForAllAccountsRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyPayload"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/accessors" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get all accessors for a given accountID",
        "operationId" : "getAccountAccessors",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account accessors exist",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose accessor details are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetAccountAccessorListResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Account Management" ],
        "summary" : "Create accessors for the given accountID",
        "operationId" : "createAccountAccessor",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account accessor is being created",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account for which the accessor is being created",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddAccountAccessorRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accessor"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/accessors/{accessorID}" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get accessor for a given accountID by the ID",
        "operationId" : "getAccountAccessorByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account accessor exists",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose accessor details are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "accessorID",
          "in" : "path",
          "description" : "ID of the accessor whose details are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accessor"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/relations" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get all relations of the given accountID",
        "operationId" : "getAccountRelations",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account relations exist",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose relation details are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetAccountRelationListResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Account Management" ],
        "summary" : "Create relation for the given accountID",
        "operationId" : "createAccountRelation",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account relation is being created",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account for which relation is being created",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddAccountRelationRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountRelation"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/relations/{relationID}" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get the relation of an account by the ID",
        "operationId" : "getAccountRelationByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account relation exists",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose relation details are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "relationID",
          "in" : "path",
          "description" : "ID of the relation whose details are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountRelation"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/transactionPolicies" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "operationId" : "getTransactionPoliciesByAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the policies exist",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose policy details are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetAllTransactionPoliciesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/transactions" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get all transactions of an account",
        "operationId" : "getTransactions",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account transactions exist",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose transaction details are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "integer",
                "format" : "int64"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetAccountTransactionListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/transactions/{transactionID}" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get information of a specific transaction as per ID",
        "operationId" : "getTransaction",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account transaction exists",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose transaction details are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "transactionID",
          "in" : "path",
          "description" : "ID of the transaction whose details are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/vectors" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get all vectors of the given accountID",
        "operationId" : "getAccountVectors",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account vector exists",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose vector details are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetAccountVectorListResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Account Management" ],
        "summary" : "Create vector for the given accountID",
        "operationId" : "createAccountVector",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account vector is being created",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose vector details are being created",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddAccountVectorRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountVector"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/vectors/{vectorID}" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get the vector of an account by ID",
        "operationId" : "getAccountVectorByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account vector exists",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose vector details are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "vectorID",
          "in" : "path",
          "description" : "ID of the vector whose details are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountVector"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accountsInfo/{accountID}" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "operationId" : "getAccountInfo",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the account whose details are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/accounts" : {
      "get" : {
        "tags" : [ "Account Management" ],
        "summary" : "Get all accounts of an individual",
        "operationId" : "getAccounts",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the accounts exist",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual whose accounts are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "integer",
                "format" : "int64"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetAccountListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/transfers" : {
      "post" : {
        "tags" : [ "Account Management" ],
        "summary" : "Transfer from one account to another",
        "operationId" : "transfer",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the account transfer is being performed",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/TransferRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransferResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Accessor" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "accountHolderID" : {
            "type" : "string"
          },
          "accountID" : {
            "type" : "string"
          },
          "transactionPolicyIDs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "status" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "Account" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          },
          "vectors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountVector"
            }
          },
          "accessors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Accessor"
            }
          },
          "relationships" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountRelation"
            }
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "ownerAccountHolderID" : {
            "type" : "string"
          },
          "accountProviderID" : {
            "type" : "string"
          },
          "cardID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "productFamilyID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "productID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "programIDs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "ledgerID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "status" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tag"
            }
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "AccountInfo" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          },
          "vectors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountVector"
            }
          },
          "accessors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Accessor"
            }
          },
          "relationships" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountRelation"
            }
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "ownerAccountHolderID" : {
            "type" : "string"
          },
          "accountProviderID" : {
            "type" : "string"
          },
          "cardID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "productFamilyID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "productFamilyName" : {
            "type" : "string"
          },
          "productID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "productName" : {
            "type" : "string"
          },
          "programIDs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "balance" : {
            "type" : "integer",
            "format" : "int64"
          },
          "currency" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "accountingType" : {
            "type" : "string",
            "enum" : [ "ASSET", "LIABILITY", "INCOME", "EXPENSE", "EQUITY" ]
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "AccountRelation" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "accountID" : {
            "type" : "string"
          },
          "relatedAccountID" : {
            "type" : "string"
          },
          "relationshipType" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "AccountTransaction" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "accountID" : {
            "type" : "string"
          },
          "ledgerID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "transactionID" : {
            "type" : "string"
          },
          "reversedTransactionID" : {
            "type" : "string"
          },
          "reversalTransactionIDs" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "previousBalance" : {
            "type" : "integer",
            "format" : "int64"
          },
          "newBalance" : {
            "type" : "integer",
            "format" : "int64"
          },
          "timestamp" : {
            "type" : "integer",
            "format" : "int64"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "currency" : {
            "type" : "string"
          },
          "recordType" : {
            "type" : "string"
          },
          "remarks" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "AccountVector" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "accountID" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "AddAccountAccessorRequest" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "accountID" : {
            "type" : "string"
          },
          "accountHolderID" : {
            "type" : "string"
          },
          "transactionPolicyIDs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "status" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "AddAccountRelationRequest" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "accountID" : {
            "type" : "string"
          },
          "relationshipType" : {
            "type" : "string"
          },
          "relatedAccountID" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "AddAccountVectorRequest" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "accountID" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "EmptyPayload" : {
        "type" : "object"
      },
      "GetAccountAccessorListResponse" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "accessors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Accessor"
            }
          }
        }
      },
      "GetAccountListResponse" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "accounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Account"
            }
          }
        }
      },
      "GetAccountRelationListResponse" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "accountRelations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountRelation"
            }
          }
        }
      },
      "GetAccountTransactionListResponse" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "accountTransactionList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountTransaction"
            }
          },
          "totalRecord" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "GetAccountVectorListResponse" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "accountVectors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountVector"
            }
          }
        }
      },
      "GetAllTransactionPoliciesResponse" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "policies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TransactionPolicyResponse"
            }
          }
        }
      },
      "Money" : {
        "type" : "object",
        "properties" : {
          "currency" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PolicyAggregateRule" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "policyVersionID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "action" : {
            "type" : "string",
            "enum" : [ "DEBIT", "CREDIT", "DEBIT_REVERSAL", "CREDIT_REVERSAL" ]
          },
          "categoryCode" : {
            "type" : "string"
          },
          "aggExpressionID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "aggExpressionCode" : {
            "type" : "string"
          },
          "dailyLimit" : {
            "type" : "integer",
            "format" : "int64"
          },
          "weeklyLimit" : {
            "type" : "integer",
            "format" : "int64"
          },
          "monthlyLimit" : {
            "type" : "integer",
            "format" : "int64"
          },
          "quarterlyLimit" : {
            "type" : "integer",
            "format" : "int64"
          },
          "yearlyLimit" : {
            "type" : "integer",
            "format" : "int64"
          },
          "errorCode" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "VELOCITY", "VOLUME" ]
          }
        }
      },
      "PolicyBalanceRule" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "policyVersionID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "action" : {
            "type" : "string",
            "enum" : [ "DEBIT", "CREDIT", "DEBIT_REVERSAL", "CREDIT_REVERSAL" ]
          },
          "minRequiredBalance" : {
            "type" : "integer",
            "format" : "int64"
          },
          "maxAllowedBalance" : {
            "type" : "integer",
            "format" : "int64"
          },
          "minRequiredBalanceBeforeTxn" : {
            "type" : "integer",
            "format" : "int64"
          },
          "maxAllowedBalanceBeforeTxn" : {
            "type" : "integer",
            "format" : "int64"
          },
          "transactionCategory" : {
            "type" : "string"
          },
          "errorCode" : {
            "type" : "string"
          }
        }
      },
      "PolicyTxnConstraint" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "policyVersionID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "action" : {
            "type" : "string",
            "enum" : [ "DEBIT", "CREDIT", "DEBIT_REVERSAL", "CREDIT_REVERSAL" ]
          },
          "allowedTxnCategoryCodes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "disallowedTxnCategoryCodes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "allowedTimeSlices" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "disallowedTimeSlices" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "errorCode" : {
            "type" : "string"
          }
        }
      },
      "PolicyTxnRule" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "policyVersionID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "action" : {
            "type" : "string",
            "enum" : [ "DEBIT", "CREDIT", "DEBIT_REVERSAL", "CREDIT_REVERSAL" ]
          },
          "categoryCode" : {
            "type" : "string"
          },
          "minRequiredAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "maxAllowedAmount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "errorCode" : {
            "type" : "string"
          }
        }
      },
      "Tag" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "TransactionPolicyResponse" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          },
          "ifiId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "code" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ENABLED", "DISABLED" ]
          },
          "description" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "validFrom" : {
            "type" : "integer",
            "format" : "int64"
          },
          "validUntil" : {
            "type" : "integer",
            "format" : "int64"
          },
          "policyViolationAction" : {
            "type" : "string",
            "enum" : [ "DECLINE_AND_NOTIFY", "DECLINE", "NOTIFY" ]
          },
          "txnConstraints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyTxnConstraint"
            }
          },
          "txnLimits" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyTxnRule"
            }
          },
          "balanceLimits" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyBalanceRule"
            }
          },
          "volumeLimits" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyAggregateRule"
            }
          },
          "velocityLimits" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyAggregateRule"
            }
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "updatedAt" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "TransferRequest" : {
        "required" : [ "amount", "creditAccountID", "debitAccountID", "remarks", "requestID", "transferCode", "transferTime" ],
        "type" : "object",
        "properties" : {
          "requestID" : {
            "type" : "string"
          },
          "amount" : {
            "$ref" : "#/components/schemas/Money"
          },
          "transferCode" : {
            "type" : "string"
          },
          "debitAccountID" : {
            "type" : "string"
          },
          "creditAccountID" : {
            "type" : "string"
          },
          "transferTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "remarks" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Any additional information which you would like to provide"
          }
        }
      },
      "TransferResponse" : {
        "type" : "object",
        "properties" : {
          "requestID" : {
            "type" : "string"
          },
          "transferID" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "isRetriableFailure" : {
            "type" : "string"
          }
        }
      },
      "UpdateProductForAllAccountsRequest" : {
        "type" : "object",
        "properties" : {
          "accountHolderType" : {
            "type" : "string",
            "enum" : [ "REAL", "LEGAL", "HEADLESS" ]
          },
          "accountHolderID" : {
            "type" : "string"
          },
          "subject" : {
            "type" : "string"
          },
          "object" : {
            "type" : "string"
          }
        }
      }
    }
  }
}
