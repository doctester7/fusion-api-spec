{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "API Reference",
    "version" : "v1"
  },
  "tags" : [ {
    "name" : "Default"
  } ],
  "paths" : {
    "/api/v1/ifi/{ifiID}/applications/addCorporate" : {
      "post" : {
        "summary" : "Create an application for creating a new corporate",
        "operationId" : "createCorporateApplication",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateAddCorporateApplicationRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateApplicationResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "",
            "content" : { }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/applications/editCorporate" : {
      "post" : {
        "summary" : "Create an application for editing an existing corporate",
        "operationId" : "createEditCorporateApplication",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateEditCorporateApplicationRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericCreateApplicationResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "",
            "content" : { }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles" : {
      "get" : {
        "operationId" : "getAllBundles",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundles are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BundleResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "operationId" : "createBundle",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundle is being created",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddBundleRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BundleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles/{bundleID}" : {
      "get" : {
        "operationId" : "getBundleByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundles are being retrieved by bundleID",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose details are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BundleResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "operationId" : "updateBundle",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundle is being updated",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose details are being updated",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateBundleRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BundleResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "operationId" : "deleteBundle",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundle is being deleted",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle which is being deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BundleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles/{bundleID}/accountProducts" : {
      "post" : {
        "operationId" : "addAccountProductToBundle",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundle is being updated",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose details are being updated",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddAccountProductInBundleRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BundleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles/{bundleID}/accountProducts/{accountProductID}" : {
      "delete" : {
        "operationId" : "deleteAccountProductFromBundle",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundle is being updated",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose details are being updated",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountProductID",
          "in" : "path",
          "description" : "ID for the account product which is to be removed from the bundle",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BundleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles/{bundleID}/issueAccount" : {
      "post" : {
        "summary" : "Issue specific Account from a bundle ",
        "operationId" : "issueAccountProduct",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the Account is being issued",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose account product is being issued",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/IssueAccountArtifactRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueAccountArtifactResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles/{bundleID}/issueBundle" : {
      "post" : {
        "summary" : "Issue bundle to a specific individual/company",
        "operationId" : "issueBundle",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundle is being issued",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle which is being issued",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/IssueBundleRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueBundleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles/{bundleID}/issueFormFactor" : {
      "post" : {
        "summary" : "Issue specific form factor of a resource to a specific individual/company",
        "operationId" : "issueFormFactor",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the form factor is being issued",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose form factor/card is being issued",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/IssueFormFactorRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueFormFactorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles/{bundleID}/issueResource" : {
      "post" : {
        "summary" : "Issue specific resource of a bundle to a specific individual/company",
        "operationId" : "issueResource",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the resource is being issued",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose resource is being issued",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/IssueResourceRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueResourceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles/{bundleID}/paymentProducts" : {
      "post" : {
        "operationId" : "addPaymentProductToBundle",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundle is being updated",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose details are being updated",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddPaymentProductInBundleRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BundleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/bundles/{bundleID}/paymentProducts/{paymentProductID}" : {
      "delete" : {
        "operationId" : "deletePaymentProductFromBundle",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the bundle is being updated",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "bundleID",
          "in" : "path",
          "description" : "ID of the bundle whose details are being updated",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "paymentProductID",
          "in" : "path",
          "description" : "ID for the payment product to be removed from the bundle",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BundleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/cards/orders/{orderID}" : {
      "get" : {
        "summary" : "Get order details by ID",
        "operationId" : "getOrder",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderSummary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/cards/{cardID}/setPin" : {
      "post" : {
        "summary" : "Set Pin to the card details",
        "operationId" : "setPin",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cardID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json;charset=UTF-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SetPinRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/cards/{cguid}" : {
      "get" : {
        "summary" : "Get card details by ID",
        "operationId" : "getCard",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cguid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Zeta-JWS",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CardView"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/companies" : {
      "get" : {
        "summary" : "Get all the companies of a specific IFI",
        "operationId" : "getCompaniesByIFI",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : { }
                  }
                }
              }
            }
          },
          "201" : {
            "description" : "",
            "content" : { }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/companies/{companyID}" : {
      "get" : {
        "summary" : "Get details of a specific company by ID",
        "operationId" : "getCompanyById",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "companyID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Company"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/corporate/applications" : {
      "get" : {
        "summary" : "Get all the applications of an IFI of a specific applicationType ",
        "operationId" : "getApplicationsByIFI",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenericFetchApplicationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/corporate/applications/{applicationID}" : {
      "get" : {
        "summary" : "Get application details by ID",
        "operationId" : "getApplicationByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetApplicationDetailsResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "",
            "content" : { }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/corporate/applications/{applicationID}/action/{action}" : {
      "post" : {
        "summary" : "Perform action on the application",
        "operationId" : "actionOnApplication",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "action",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActionOnApplicationRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmptyPayload"
                }
              }
            }
          },
          "201" : {
            "description" : "",
            "content" : { }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/corporate/applications/{applicationID}/addCompanySection/{addCompanySectionID}" : {
      "put" : {
        "summary" : "Perform action on the company section of the application",
        "operationId" : "addCompanySection",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "addCompanySectionID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActionOnAddCompanySectionRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionOnSectionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/corporate/applications/{applicationID}/addCompanySections/{addCompanySectionID}" : {
      "get" : {
        "summary" : "Get the company section of an application by ID",
        "operationId" : "getCompanySectionByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "addCompanySectionID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddCompanyDataObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/corporate/applications/{applicationID}/addCorporateSection/{addCorporateSectionID}" : {
      "get" : {
        "summary" : "Get the corporate section of an application by ID",
        "operationId" : "getAddCorporateSectionByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "addCorporateSectionID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddCorporateDataObject"
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Perform action on the corporate section of the application",
        "operationId" : "addCorporateSection",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "addCorporateSectionID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActionOnAddCorporateSectionRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionOnSectionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/corporate/applications/{applicationID}/editCompanySection/{editCompanySectionID}" : {
      "put" : {
        "summary" : "Perform action on the company section of the application",
        "operationId" : "editCompanySection",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "editCompanySectionID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActionOnEditCompanySectionRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetApplicationDetailsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/corporate/applications/{applicationID}/editCompanySections/{editCompanySectionID}" : {
      "get" : {
        "summary" : "Get the company section of an application by ID",
        "operationId" : "getCompanySectionByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "editCompanySectionID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EditCompanySectionDataObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/corporate/applications/{applicationID}/editCorporateSection/{editCorporateSectionID}" : {
      "get" : {
        "summary" : "Get the corporate section of an application by ID",
        "operationId" : "getEditCorporateSectionByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "editCorporateSectionID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EditCorporateDataObject"
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Perform action on the corporate section of the application",
        "operationId" : "editCorporateSection",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "editCorporateSectionID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActionOnEditCorporateSectionRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetApplicationDetailsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/corporate/{corporateID}" : {
      "get" : {
        "summary" : "Get details of a specific corporate",
        "operationId" : "getCorporateById",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "corporateID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeferredResultCorporate"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/corporate/{corporateID}/companies" : {
      "get" : {
        "summary" : "Get details of all the companies of a specific corporate",
        "operationId" : "getAllCompaniesOfCorporate",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "corporateID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeferredResultListCompany"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/corporate/{corporateID}/companies/{companyID}" : {
      "get" : {
        "summary" : "Get details of a specific company of a specific corporate",
        "operationId" : "getCompanyOfCorporateById",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "corporateID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "companyID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeferredResultCompany"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/form_factor_products/{formFactorProductID}" : {
      "get" : {
        "summary" : "Get Form Factor Product details by ID",
        "operationId" : "getFormFactorProduct",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "formFactorProductID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FormFactorProduct"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaries" : {
      "get" : {
        "summary" : "Get all the beneficiaries of an individual",
        "operationId" : "getBeneficiaries",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary details are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiaries list are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BeneficiaryListResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a new beneficiary of an individual",
        "operationId" : "createBeneficiary",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary is being created",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary is being created",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateBeneficiaryRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Beneficiary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaries/{beneficiaryID}" : {
      "get" : {
        "summary" : "Get details of a beneficiary by ID",
        "operationId" : "getBeneficiaryByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary exists",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary details are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary whose details are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Beneficiary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaries/{beneficiaryID}/accounts" : {
      "get" : {
        "summary" : "Get all the accounts of a beneficiary",
        "operationId" : "getBeneficiaryAccounts",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary accounts are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary accounts are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BeneficiaryAccountListResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Creation of a beneficiary account",
        "operationId" : "createBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary account is being created",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary account is being created",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddBeneficiaryAccountForBeneficiaryRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BeneficiaryAccount"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaries/{beneficiaryID}/accounts/{accountID}" : {
      "get" : {
        "summary" : "Get details of a specific beneficiary account of an individual's beneficiary ",
        "operationId" : "getBeneficiaryAccountByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary account being retrieved exists",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary account being retrieved exists",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary whose beneficiary account details are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "accountID",
          "in" : "path",
          "description" : "ID of the beneficiary account whose details are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BeneficiaryAccount"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaries/{beneficiaryID}/accounts/{accountID}/transfers" : {
      "post" : {
        "summary" : "Perform transfer to a beneficiary account of an individual's beneficiary",
        "operationId" : "transferToBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary transfer is being performed",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual who is performing the beneficiary transfer",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary to whom the transfer is being performed",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/BeneficiaryAccountTransactionRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BeneficiaryTransactionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaries/{beneficiaryID}/transfers" : {
      "post" : {
        "summary" : "Perform transfer to an individual's beneficiary's default account",
        "operationId" : "transferToDefaultBeneficiaryAccount",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary transfer is being performed",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual who is performing the beneficiary transfer",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "beneficiaryID",
          "in" : "path",
          "description" : "ID of the beneficiary to whom the transfer is being performed",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/BeneficiaryTransactionRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BeneficiaryTransactionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaryTransfers" : {
      "get" : {
        "summary" : "Get all the beneficiary transfers of an individual",
        "operationId" : "getAllBeneficiaryTransfers",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary whose transfers are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary transfers are being retrieved",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetBeneficiaryTransactionListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/beneficiaryTransfers/{transferID}" : {
      "get" : {
        "summary" : "Get the details of a transfer by ID",
        "operationId" : "getBeneficiaryTransferByID",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "description" : "ID of the IFI (on-boarded organization) under which the beneficiary transfer exists",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 123123
        }, {
          "name" : "individualID",
          "in" : "path",
          "description" : "ID of the individual for whom the beneficiary transfer details are being fetched",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
        }, {
          "name" : "transferID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BeneficiaryTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/payment_products/{paymentProductID}" : {
      "get" : {
        "summary" : "Get Payment Product details by ID",
        "operationId" : "getPaymentProduct",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "paymentProductID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentProduct"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/resource_products/{resourceProductID}" : {
      "get" : {
        "summary" : "Get Resource Product details by ID",
        "operationId" : "getResourceProduct",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceProductID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceProduct"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/resource_products/{resourceProductID}/resources/list" : {
      "post" : {
        "operationId" : "filterResourceProductBasedResources",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceProductID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Builder"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListResourceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/resources/{resourceID}" : {
      "get" : {
        "summary" : "Get resource details by ID",
        "operationId" : "getResource",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Resource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/resources/{resourceID}/form_factors/{formFactorID}" : {
      "get" : {
        "summary" : "Get form factor details by ID",
        "operationId" : "getFormFactor",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "formFactorID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FormFactor"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/resources/{resourceID}/target" : {
      "patch" : {
        "summary" : "Change the resource target account",
        "operationId" : "updateResourceTarget",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Builder"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Resource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/applications" : {
      "get" : {
        "summary" : "Get All Applications",
        "operationId" : "getAllApplications",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/applications/editIndividual" : {
      "post" : {
        "summary" : "Edit Individual Application",
        "operationId" : "editApplication",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/EditIndividualApplicationRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/applications/newIndividual" : {
      "post" : {
        "summary" : "Create Individual Application",
        "operationId" : "createApplication",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateAccountHolderApplicationRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/applications/newIndividualWithAutoApproval" : {
      "post" : {
        "summary" : "Create Individual Application With Auto Approval",
        "operationId" : "createApplicationWithAutoApproval",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateAccountHolderApplicationWithAutoApprovalRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/applications/{applicationID}" : {
      "get" : {
        "summary" : "Get Individual Application",
        "operationId" : "getApplication",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Update Individual Application",
        "operationId" : "updateApplication",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateAccountHolderApplicationRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete Individual Application",
        "operationId" : "deleteApplication",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/applications/{applicationID}/kycStatus/{kycStatus}" : {
      "put" : {
        "summary" : "Update Application Status",
        "operationId" : "updateApplicationKYCStatus",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kycStatus",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateKycStatusRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/applications/{applicationID}/spool/{spoolID}" : {
      "put" : {
        "summary" : "Update Application Spool",
        "operationId" : "updateApplicationSpool",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "spoolID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/applications/{applicationID}/status/{newStatus}" : {
      "put" : {
        "summary" : "Update Application Status",
        "operationId" : "updateApplicationStatus",
        "parameters" : [ {
          "name" : "ifiID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "applicationID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "newStatus",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              }
            }
          }
        }
      }
    },
    "/health" : {
      "get" : {
        "operationId" : "healthCheck",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Accessor" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "accountHolderID" : {
            "type" : "string"
          },
          "accountID" : {
            "type" : "string"
          },
          "transactionPolicyIDs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "status" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "Account" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          },
          "vectors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountVector"
            }
          },
          "accessors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Accessor"
            }
          },
          "relationships" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountRelation"
            }
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "ownerAccountHolderID" : {
            "type" : "string"
          },
          "accountProviderID" : {
            "type" : "string"
          },
          "cardID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "productFamilyID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "productID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "programIDs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "ledgerID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "status" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tag"
            }
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "AccountHolderVector" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          },
          "accountHolderID" : {
            "type" : "string"
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "status" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "AccountRelation" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "accountID" : {
            "type" : "string"
          },
          "relatedAccountID" : {
            "type" : "string"
          },
          "relationshipType" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "AccountVector" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "accountID" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ActionOnAddCompanySectionRequest" : {
        "required" : [ "opsActionOnSection", "remarks", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the action being performed",
            "example" : "Contract Change"
          },
          "logoURL" : {
            "type" : "string",
            "description" : "URL for the logo of the company",
            "example" : "https://abc.com/logo.png"
          },
          "type" : {
            "type" : "string",
            "description" : "Identification for the type of company which is being created",
            "example" : "PRIVATE_LIMITED",
            "enum" : [ "LLP", "SOLE_PROPRIETOR", "TRUST", "PRIVATE_LIMITED", "PARTNER_FIRM", "PUBLIC", "NPO_NGO", "BRANCH_OFFICE", "LIAISON_OFFICE", "PUBLIC_COMPANY" ]
          },
          "pointsOfPresence" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/POP"
            }
          },
          "kycStatus" : {
            "$ref" : "#/components/schemas/KYCStatus"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            },
            "description" : "Additional information for this entity",
            "example" : "myCode : ABC"
          },
          "remarks" : {
            "type" : "string",
            "description" : "Additional remarks for the executing the action on the application",
            "example" : "Application looks good"
          },
          "opsActionOnSection" : {
            "type" : "string",
            "description" : "Action to be performed on this specific section",
            "example" : "SAVE",
            "enum" : [ "SAVE", "MARK_AS_COMPLETE", "REJECT", "ACCEPT" ]
          }
        }
      },
      "ActionOnAddCorporateSectionRequest" : {
        "required" : [ "opsActionOnSection", "remarks" ],
        "type" : "object",
        "properties" : {
          "corporateName" : {
            "type" : "string",
            "description" : "Name of the Corporate which needs to be added",
            "example" : "My Company"
          },
          "agreementNumber" : {
            "type" : "string",
            "description" : "Number of the agreement between the corporate and the issuer/VBO",
            "example" : "123456"
          },
          "agreementURL" : {
            "type" : "string",
            "description" : "URL of the agreement between the corporate and the issuer/VBO",
            "example" : "abc.com/agreement"
          },
          "agreementStartDate" : {
            "type" : "string",
            "description" : "Date from which the validity of the agreement starts",
            "example" : "01/01/2019"
          },
          "agreementEndDate" : {
            "type" : "string",
            "description" : "Date on which the validity of the agreement ends",
            "example" : "01/01/2019"
          },
          "signingAuthority" : {
            "$ref" : "#/components/schemas/SigningAuthority"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            },
            "description" : "Additional information for this entity",
            "example" : "myCode : ABC"
          },
          "remarks" : {
            "type" : "string",
            "description" : "Additional remarks for the executing the action on the application",
            "example" : "Application looks good"
          },
          "opsActionOnSection" : {
            "type" : "string",
            "description" : "Action to be performed on this specific section",
            "example" : "SAVE",
            "enum" : [ "SAVE", "MARK_AS_COMPLETE", "REJECT", "ACCEPT" ]
          }
        }
      },
      "ActionOnApplicationRequest" : {
        "required" : [ "moderatedApplicationType", "remarks" ],
        "type" : "object",
        "properties" : {
          "moderatedApplicationType" : {
            "type" : "string",
            "description" : "Type of the application on which the action is to be performed",
            "example" : "SIGN_UP",
            "enum" : [ "SIGN_UP", "EDIT_CORPORATE" ]
          },
          "remarks" : {
            "type" : "string",
            "description" : "Additional remarks for the executing the action on the application",
            "example" : "Application looks good"
          }
        }
      },
      "ActionOnEditCompanySectionRequest" : {
        "required" : [ "companyId", "opsActionOnSection", "remarks", "type" ],
        "type" : "object",
        "properties" : {
          "companyId" : {
            "type" : "string",
            "description" : "Identifier of the company which is being acted upon",
            "example" : "ee64c930-c06f-49cb-9443-84b132b9d4e2"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the action being performed",
            "example" : "Contract Change"
          },
          "logoURL" : {
            "type" : "string",
            "description" : "URL for the logo of the company",
            "example" : "https://abc.com/logo.png"
          },
          "shortCode" : {
            "type" : "string",
            "description" : "Short code to be used as identifier for the company",
            "example" : "ABCXYZ"
          },
          "type" : {
            "type" : "string",
            "description" : "Identification for the type of company which is being created",
            "example" : "PRIVATE_LIMITED",
            "enum" : [ "LLP", "SOLE_PROPRIETOR", "TRUST", "PRIVATE_LIMITED", "PARTNER_FIRM", "PUBLIC", "NPO_NGO", "BRANCH_OFFICE", "LIAISON_OFFICE", "PUBLIC_COMPANY" ]
          },
          "pointsOfPresence" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/POP"
            }
          },
          "kycStatus" : {
            "$ref" : "#/components/schemas/KYCStatus"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            },
            "description" : "Additional information for this entity",
            "example" : "myCode : ABC"
          },
          "remarks" : {
            "type" : "string",
            "description" : "Additional remarks for the executing the action on the application",
            "example" : "Application looks good"
          },
          "opsActionOnSection" : {
            "type" : "string",
            "description" : "Action to be performed on this specific section",
            "example" : "SAVE",
            "enum" : [ "SAVE", "MARK_AS_COMPLETE", "REJECT", "ACCEPT" ]
          }
        }
      },
      "ActionOnEditCorporateSectionRequest" : {
        "required" : [ "opsActionOnSection", "remarks" ],
        "type" : "object",
        "properties" : {
          "corporateId" : {
            "type" : "string",
            "description" : "Identifier of the corporate which is being edited",
            "example" : "4baf7564-f2c4-4300-b27b-cdee926146e6"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the action being performed",
            "example" : "Contract Change"
          },
          "agreementNumber" : {
            "type" : "string",
            "description" : "Number of the agreement between the corporate and the issuer/VBO",
            "example" : "123456"
          },
          "agreementURL" : {
            "type" : "string",
            "description" : "URL of the agreement between the corporate and the issuer/VBO",
            "example" : "abc.com/agreement"
          },
          "agreementStartDate" : {
            "type" : "string",
            "description" : "Date from which the validity of the agreement starts",
            "example" : "01/01/2019"
          },
          "agreementEndDate" : {
            "type" : "string",
            "description" : "Date on which the validity of the agreement ends",
            "example" : "01/01/2019"
          },
          "signingAuthority" : {
            "$ref" : "#/components/schemas/SigningAuthority"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            },
            "description" : "Additional information for this entity",
            "example" : "myCode : ABC"
          },
          "remarks" : {
            "type" : "string",
            "description" : "Additional remarks for the executing the action on the application",
            "example" : "Application looks good"
          },
          "opsActionOnSection" : {
            "type" : "string",
            "description" : "Action to be performed on this specific section",
            "example" : "SAVE",
            "enum" : [ "SAVE", "MARK_AS_COMPLETE", "REJECT", "ACCEPT" ]
          }
        }
      },
      "ActionOnSectionResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Current status of the section after action is perfromed",
            "example" : "TEMP_SUBMITTED"
          }
        }
      },
      "AddAccountProductInBundleRequest" : {
        "type" : "object",
        "properties" : {
          "accountProduct" : {
            "$ref" : "#/components/schemas/ProductInfoRequest"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "AddBeneficiaryAccountForBeneficiaryRequest" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "status" : {
            "type" : "string"
          },
          "beneficiaryID" : {
            "type" : "string"
          },
          "parentAccountHolderID" : {
            "type" : "string"
          },
          "nickname" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "accountInfo" : {
            "$ref" : "#/components/schemas/BeneficiaryAccountInfo"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "verified" : {
            "type" : "boolean"
          },
          "default" : {
            "type" : "boolean"
          }
        }
      },
      "AddBundleRequest" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name which would be assigned to the bundle",
            "example" : "Savings Bundle"
          },
          "shortCode" : {
            "type" : "string",
            "description" : "The short code to identify the bundle",
            "example" : "SVNG"
          },
          "picURL" : {
            "type" : "string",
            "description" : "The URL to get the bundle's display pic"
          },
          "description" : {
            "type" : "string",
            "description" : "The detailed description of the bundle",
            "example" : "Bundle related to savings accounts. Consists of a savings account product and a related debit card"
          },
          "accountProducts" : {
            "type" : "array",
            "description" : "The list of account products which will be a part of the bundle",
            "items" : {
              "$ref" : "#/components/schemas/ProductInfoRequest"
            }
          },
          "paymentProducts" : {
            "type" : "array",
            "description" : "The list of payment products which will be a part of the bundle",
            "items" : {
              "$ref" : "#/components/schemas/ProductInfoRequest"
            }
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            },
            "description" : "Any additional information which is specific to the bundle"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "AddCompanyDataObject" : {
        "required" : [ "remarks", "sectionStatus", "type" ],
        "type" : "object",
        "properties" : {
          "sectionId" : {
            "type" : "integer",
            "description" : "Identifier of the specific section",
            "format" : "int32",
            "example" : 143
          },
          "sectionType" : {
            "type" : "string",
            "description" : "Identifier of the specific section",
            "example" : "ADD_COMPANY",
            "enum" : [ "ADD_COMPANY", "ADD_CORPORATE", "EDIT_CORPORATE", "EDIT_COMPANY" ]
          },
          "entityId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the action being performed",
            "example" : "Contract Change"
          },
          "logoURL" : {
            "type" : "string",
            "description" : "URL for the logo of the company",
            "example" : "https://abc.com/logo.png"
          },
          "type" : {
            "type" : "string",
            "description" : "Identification for the type of company which is being created",
            "example" : "PRIVATE_LIMITED",
            "enum" : [ "LLP", "SOLE_PROPRIETOR", "TRUST", "PRIVATE_LIMITED", "PARTNER_FIRM", "PUBLIC", "NPO_NGO", "BRANCH_OFFICE", "LIAISON_OFFICE", "PUBLIC_COMPANY" ]
          },
          "pointsOfPresence" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/POP"
            }
          },
          "kycStatus" : {
            "$ref" : "#/components/schemas/KYCStatus"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            },
            "description" : "Additional information for this entity",
            "example" : "myCode : ABC"
          },
          "sectionStatus" : {
            "type" : "string",
            "description" : "Current status of the section",
            "example" : "IN_REVIEW",
            "enum" : [ "NEW", "PENDING", "TEMP_COMPLETED", "APPROVED", "REJECTED", "IN_REVIEW", "ACCEPTED" ]
          },
          "createdOn" : {
            "type" : "string",
            "description" : "Date on which this entity was created",
            "format" : "date-time"
          },
          "updatedOn" : {
            "type" : "string",
            "description" : "Latest date on which this entity was updated",
            "format" : "date-time"
          },
          "remarks" : {
            "type" : "string",
            "description" : "Additional remarks for the executing the action on the application",
            "example" : "Application looks good"
          },
          "revisionId" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AddCorporateDataObject" : {
        "required" : [ "remarks", "sectionStatus" ],
        "type" : "object",
        "properties" : {
          "sectionId" : {
            "type" : "integer",
            "description" : "Identifier of the specific section",
            "format" : "int32",
            "example" : 143
          },
          "sectionType" : {
            "type" : "string",
            "description" : "Identifier of the specific section",
            "example" : "ADD_COMPANY",
            "enum" : [ "ADD_COMPANY", "ADD_CORPORATE", "EDIT_CORPORATE", "EDIT_COMPANY" ]
          },
          "entityId" : {
            "type" : "string"
          },
          "revisionId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "corporateName" : {
            "type" : "string"
          },
          "agreementNumber" : {
            "type" : "string",
            "description" : "Number of the agreement between the corporate and the issuer/VBO",
            "example" : "123456"
          },
          "agreementURL" : {
            "type" : "string",
            "description" : "URL of the agreement between the corporate and the issuer/VBO",
            "example" : "abc.com/agreement"
          },
          "agreementStartDate" : {
            "type" : "string",
            "description" : "Date from which the validity of the agreement starts",
            "example" : "01/01/2019"
          },
          "agreementEndDate" : {
            "type" : "string",
            "description" : "Date on which the validity of the agreement ends",
            "example" : "01/01/2019"
          },
          "signingAuthority" : {
            "$ref" : "#/components/schemas/SigningAuthority"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            },
            "description" : "Additional information for this entity",
            "example" : "myCode : ABC"
          },
          "sectionStatus" : {
            "type" : "string",
            "description" : "Current status of the section",
            "example" : "IN_REVIEW",
            "enum" : [ "NEW", "PENDING", "TEMP_COMPLETED", "APPROVED", "REJECTED", "IN_REVIEW", "ACCEPTED" ]
          },
          "ifiId" : {
            "type" : "integer",
            "description" : "ID of the IFI (on-boarded organization) under which the corporate exists",
            "format" : "int64",
            "example" : 123456
          },
          "createdOn" : {
            "type" : "string",
            "description" : "Date on which this entity was created",
            "format" : "date-time"
          },
          "updatedOn" : {
            "type" : "string",
            "description" : "Latest date on which this entity was updated",
            "format" : "date-time"
          },
          "remarks" : {
            "type" : "string",
            "description" : "Additional remarks for adding the corporate data",
            "example" : "Application looks good"
          }
        }
      },
      "AddPaymentProductInBundleRequest" : {
        "type" : "object",
        "properties" : {
          "paymentProduct" : {
            "$ref" : "#/components/schemas/ProductInfoRequest"
          }
        }
      },
      "Address" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "accountHolderID" : {
            "type" : "string"
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "tag" : {
            "type" : "string"
          },
          "line1" : {
            "type" : "string"
          },
          "line2" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "postCode" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "accountHolderVectors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountHolderVector"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ENABLED", "DELETED" ]
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "default" : {
            "type" : "boolean"
          }
        }
      },
      "Beneficiary" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "requestID" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "accountHolderID" : {
            "type" : "string"
          },
          "salutation" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "middleName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "gender" : {
            "type" : "string"
          },
          "profilePicURL" : {
            "type" : "string"
          },
          "relationship" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "REAL", "LEGAL", "HEADLESS" ]
          },
          "dob" : {
            "type" : "string",
            "format" : "date-time"
          },
          "vectors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BeneficiaryVector"
            }
          },
          "accounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BeneficiaryAccount"
            }
          },
          "customFields" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "BeneficiaryAccount" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "status" : {
            "type" : "string"
          },
          "beneficiaryID" : {
            "type" : "string"
          },
          "parentAccountHolderID" : {
            "type" : "string"
          },
          "nickname" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "accountInfo" : {
            "$ref" : "#/components/schemas/BeneficiaryAccountInfo"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "verified" : {
            "type" : "boolean"
          },
          "default" : {
            "type" : "boolean"
          }
        }
      },
      "BeneficiaryAccountInfo" : {
        "type" : "object",
        "properties" : {
          "accountNumber" : {
            "type" : "string"
          },
          "accountProvider" : {
            "type" : "string"
          },
          "nameAtAccountProvider" : {
            "type" : "string"
          },
          "routingCode" : {
            "type" : "string"
          },
          "accountType" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "BeneficiaryAccountListResponse" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "beneficiaryAccountList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BeneficiaryAccount"
            }
          }
        }
      },
      "BeneficiaryAccountTransactionRequest" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "requestID" : {
            "type" : "string"
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "currency" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "transactionCode" : {
            "type" : "string"
          },
          "debitAccountID" : {
            "type" : "string"
          },
          "debitAccountHolderID" : {
            "type" : "string"
          },
          "beneficiaryID" : {
            "type" : "string"
          },
          "beneficiaryAccountID" : {
            "type" : "string"
          },
          "transactionTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "remarks" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "BeneficiaryListResponse" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "beneficiaryList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Beneficiary"
            }
          }
        }
      },
      "BeneficiaryTransaction" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          },
          "requestID" : {
            "type" : "string"
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "currency" : {
            "type" : "string"
          },
          "transactionCode" : {
            "type" : "string"
          },
          "debitAccountID" : {
            "type" : "string"
          },
          "debitAccountHolderID" : {
            "type" : "string"
          },
          "beneficiaryID" : {
            "type" : "string"
          },
          "beneficiaryAccountID" : {
            "type" : "string"
          },
          "transactionTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILED" ]
          },
          "transactionID" : {
            "type" : "string"
          },
          "remarks" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "BeneficiaryTransactionRequest" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "requestID" : {
            "type" : "string"
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "currency" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "transactionCode" : {
            "type" : "string"
          },
          "debitAccountHolderID" : {
            "type" : "string"
          },
          "debitAccountID" : {
            "type" : "string"
          },
          "beneficiaryID" : {
            "type" : "string"
          },
          "transactionTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "remarks" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "BeneficiaryTransactionResponse" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "requestID" : {
            "type" : "string"
          },
          "transactionID" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          }
        }
      },
      "BeneficiaryVector" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "beneficiaryID" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "Builder" : {
        "type" : "object",
        "properties" : {
          "tenantID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "object" : {
            "$ref" : "#/components/schemas/JID"
          }
        }
      },
      "BundleResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "vboID" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "accountProducts" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProductInfoResponse"
            }
          },
          "paymentProducts" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProductInfoResponse"
            }
          },
          "status" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "shortCode" : {
            "type" : "string"
          },
          "picURL" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "CardBinRange" : {
        "type" : "object",
        "properties" : {
          "bin" : {
            "type" : "string"
          },
          "range" : {
            "type" : "string"
          }
        }
      },
      "CardView" : {
        "type" : "object",
        "properties" : {
          "account" : {
            "$ref" : "#/components/schemas/Account"
          },
          "cardID" : {
            "type" : "string"
          },
          "crn" : {
            "type" : "string"
          },
          "cardType" : {
            "type" : "string"
          },
          "maskedPan" : {
            "type" : "string"
          },
          "cardStatus" : {
            "type" : "string"
          },
          "associatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "orderDetails" : {
            "$ref" : "#/components/schemas/OrderDetails"
          },
          "tenantAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "binRange" : {
            "$ref" : "#/components/schemas/CardBinRange"
          },
          "ifi" : {
            "type" : "integer",
            "format" : "int64"
          },
          "sensitiveView" : {
            "$ref" : "#/components/schemas/SensitiveCardView"
          }
        }
      },
      "Channel" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "ifi" : {
            "type" : "integer",
            "format" : "int64"
          },
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "paymentCodes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "INACTIVE", "DELETED" ]
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "modifiedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "Company" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "corporateId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ifiId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "companyLogoURL" : {
            "type" : "string"
          },
          "pointsOfPresence" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/POP"
            }
          },
          "kycStatus" : {
            "$ref" : "#/components/schemas/KYCStatus"
          },
          "companyType" : {
            "type" : "string",
            "enum" : [ "LLP", "SOLE_PROPRIETOR", "TRUST", "PRIVATE_LIMITED", "PARTNER_FIRM", "PUBLIC", "NPO_NGO", "BRANCH_OFFICE", "LIAISON_OFFICE", "PUBLIC_COMPANY" ]
          },
          "createdOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedOn" : {
            "type" : "string",
            "format" : "date-time"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          }
        }
      },
      "Contact" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "vectors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountHolderVector"
            }
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "CreateAccountHolderApplicationRequest" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "formID" : {
            "type" : "string"
          },
          "spoolID" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "individualType" : {
            "type" : "string"
          },
          "applicationType" : {
            "type" : "string",
            "enum" : [ "KYC", "CREATE_ACCOUNT_HOLDER", "EDIT_ACCOUNT_HOLDER" ]
          },
          "individualID" : {
            "type" : "string"
          },
          "salutation" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "middleName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "profilePicURL" : {
            "type" : "string"
          },
          "dob" : {
            "type" : "string",
            "format" : "date"
          },
          "gender" : {
            "type" : "string"
          },
          "mothersMaidenName" : {
            "type" : "string"
          },
          "kycDetails" : {
            "$ref" : "#/components/schemas/KYCDetails"
          },
          "vectors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Vector"
            }
          },
          "pops" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/POP"
            }
          },
          "customFields" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tag"
            }
          },
          "source" : {
            "type" : "string"
          }
        }
      },
      "CreateAccountHolderApplicationWithAutoApprovalRequest" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "formID" : {
            "type" : "string"
          },
          "spoolID" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "individualType" : {
            "type" : "string"
          },
          "applicationType" : {
            "type" : "string",
            "enum" : [ "KYC", "CREATE_ACCOUNT_HOLDER", "EDIT_ACCOUNT_HOLDER" ]
          },
          "individualID" : {
            "type" : "string"
          },
          "salutation" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "middleName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "profilePicURL" : {
            "type" : "string"
          },
          "dob" : {
            "type" : "string",
            "format" : "date"
          },
          "gender" : {
            "type" : "string"
          },
          "mothersMaidenName" : {
            "type" : "string"
          },
          "kycDetails" : {
            "$ref" : "#/components/schemas/KYCDetails"
          },
          "vectors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Vector"
            }
          },
          "pops" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/POP"
            }
          },
          "customFields" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tag"
            }
          },
          "source" : {
            "type" : "string"
          }
        }
      },
      "CreateAddCorporateApplicationRequest" : {
        "type" : "object",
        "properties" : {
          "ifiParams" : {
            "$ref" : "#/components/schemas/JsonObject"
          }
        }
      },
      "CreateApplicationResponse" : {
        "type" : "object",
        "properties" : {
          "applicationId" : {
            "type" : "integer",
            "description" : "Identifier of the application that has been created",
            "format" : "int32",
            "example" : 142
          },
          "applicationType" : {
            "type" : "string",
            "description" : "Type of the application that has been created",
            "example" : "SIGN_UP",
            "enum" : [ "SIGN_UP", "EDIT_CORPORATE" ]
          }
        }
      },
      "CreateBeneficiaryRequest" : {
        "type" : "object"
      },
      "CreateEditCorporateApplicationRequest" : {
        "type" : "object",
        "properties" : {
          "corporateId" : {
            "type" : "integer",
            "description" : "Identifier of the corporate which is being edited",
            "format" : "int32"
          }
        }
      },
      "DeferredResultCompany" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "object",
            "properties" : { }
          },
          "setOrExpired" : {
            "type" : "boolean"
          }
        }
      },
      "DeferredResultCorporate" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "object",
            "properties" : { }
          },
          "setOrExpired" : {
            "type" : "boolean"
          }
        }
      },
      "DeferredResultListCompany" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "object",
            "properties" : { }
          },
          "setOrExpired" : {
            "type" : "boolean"
          }
        }
      },
      "ECDHEncryptedCardPayload" : {
        "type" : "object",
        "properties" : {
          "serverPublicKey" : {
            "type" : "string"
          },
          "encryptedData" : {
            "type" : "string"
          },
          "iv" : {
            "type" : "string"
          }
        }
      },
      "EditCompanySectionDataObject" : {
        "required" : [ "companyId", "remarks", "sectionStatus", "type" ],
        "type" : "object",
        "properties" : {
          "sectionId" : {
            "type" : "integer",
            "description" : "Identifier of the specific section",
            "format" : "int32",
            "example" : 143
          },
          "sectionType" : {
            "type" : "string",
            "description" : "Identifier of the specific section",
            "example" : "ADD_COMPANY",
            "enum" : [ "ADD_COMPANY", "ADD_CORPORATE", "EDIT_CORPORATE", "EDIT_COMPANY" ]
          },
          "entityId" : {
            "type" : "string"
          },
          "companyId" : {
            "type" : "string",
            "description" : "Identifier of the company which is being edited",
            "example" : "ee64c930-c06f-49cb-9443-84b132b9d4e2"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the action being performed",
            "example" : "Contract Change"
          },
          "logoURL" : {
            "type" : "string",
            "description" : "URL for the logo of the company",
            "example" : "https://abc.com/logo.png"
          },
          "shortCode" : {
            "type" : "string",
            "description" : "Short code to be used as identifier for the company",
            "example" : "ABCXYZ"
          },
          "type" : {
            "type" : "string",
            "description" : "Identification for the type of company which is being edited",
            "example" : "PRIVATE_LIMITED",
            "enum" : [ "LLP", "SOLE_PROPRIETOR", "TRUST", "PRIVATE_LIMITED", "PARTNER_FIRM", "PUBLIC", "NPO_NGO", "BRANCH_OFFICE", "LIAISON_OFFICE", "PUBLIC_COMPANY" ]
          },
          "pointsOfPresence" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/POP"
            }
          },
          "kycStatus" : {
            "$ref" : "#/components/schemas/KYCStatus"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            },
            "description" : "Additional information for this entity",
            "example" : "myCode : ABC"
          },
          "sectionStatus" : {
            "type" : "string",
            "description" : "Current status of the section",
            "example" : "IN_REVIEW",
            "enum" : [ "EDIT_INITIATED", "PENDING", "TEMP_COMPLETED", "APPROVED", "REJECTED", "IN_REVIEW", "ACCEPTED" ]
          },
          "createdOn" : {
            "type" : "string",
            "description" : "Date on which this entity was created",
            "format" : "date-time"
          },
          "updatedOn" : {
            "type" : "string",
            "description" : "Latest date on which this entity was updated",
            "format" : "date-time"
          },
          "remarks" : {
            "type" : "string",
            "description" : "Additional remarks for the executing the action on the application",
            "example" : "Application looks good"
          },
          "revisionId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "company" : {
            "$ref" : "#/components/schemas/Company"
          }
        }
      },
      "EditCorporateDataObject" : {
        "required" : [ "corporateId", "remarks", "sectionStatus" ],
        "type" : "object",
        "properties" : {
          "sectionId" : {
            "type" : "integer",
            "description" : "Identifier of the specific section",
            "format" : "int32",
            "example" : 143
          },
          "sectionType" : {
            "type" : "string",
            "description" : "Identifier of the specific section",
            "example" : "ADD_COMPANY",
            "enum" : [ "ADD_COMPANY", "ADD_CORPORATE", "EDIT_CORPORATE", "EDIT_COMPANY" ]
          },
          "entityId" : {
            "type" : "string"
          },
          "corporateId" : {
            "type" : "integer",
            "description" : "Identifier of the corporate which is being edited",
            "format" : "int32"
          },
          "revisionId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ifiId" : {
            "type" : "integer",
            "description" : "ID of the IFI (on-boarded organization) under which the corporate exists",
            "format" : "int64",
            "example" : 123456
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the corporate",
            "example" : "MYCOMPANY"
          },
          "agreementNumber" : {
            "type" : "string",
            "description" : "Number of the agreement between the corporate and the issuer/VBO",
            "example" : "123456"
          },
          "agreementURL" : {
            "type" : "string",
            "description" : "URL of the agreement between the corporate and the issuer/VBO",
            "example" : "abc.com/agreement"
          },
          "agreementStartDate" : {
            "type" : "string",
            "description" : "Date from which the validity of the agreement starts",
            "example" : "01/01/2019"
          },
          "agreementEndDate" : {
            "type" : "string",
            "description" : "Date on which the validity of the agreement ends",
            "example" : "01/01/2019"
          },
          "signingAuthority" : {
            "$ref" : "#/components/schemas/SigningAuthority"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            },
            "description" : "Additional information for this entity",
            "example" : "myCode : ABC"
          },
          "sectionStatus" : {
            "type" : "string",
            "description" : "Current status of the section",
            "example" : "IN_REVIEW",
            "enum" : [ "EDIT_INITIATED", "PENDING", "TEMP_COMPLETED", "APPROVED", "REJECTED", "IN_REVIEW", "ACCEPTED" ]
          },
          "createdOn" : {
            "type" : "string",
            "description" : "Date on which this entity was created",
            "format" : "date-time"
          },
          "updatedOn" : {
            "type" : "string",
            "description" : "Latest date on which this entity was updated",
            "format" : "date-time"
          },
          "remarks" : {
            "type" : "string",
            "description" : "Additional remarks for the executing the action on the application",
            "example" : "Application looks good"
          }
        }
      },
      "EditIndividualApplicationRequest" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "formID" : {
            "type" : "string"
          },
          "spoolID" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "individualID" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tag"
            }
          },
          "source" : {
            "type" : "string"
          }
        }
      },
      "EmptyPayload" : {
        "type" : "object"
      },
      "Expiry" : {
        "type" : "object",
        "properties" : {
          "month" : {
            "type" : "integer",
            "format" : "int32"
          },
          "year" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "FormFactor" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          },
          "ifi" : {
            "type" : "integer",
            "format" : "int64"
          },
          "formFactorProductID" : {
            "type" : "string"
          },
          "formFactorID" : {
            "type" : "string"
          },
          "targetURI" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "policies" : {
            "$ref" : "#/components/schemas/Policies"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "INACTIVE", "DELETED" ]
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "modifiedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "FormFactorProduct" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "ifi" : {
            "type" : "integer",
            "format" : "int64"
          },
          "id" : {
            "type" : "string"
          },
          "code" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "policies" : {
            "$ref" : "#/components/schemas/Policies"
          },
          "provider" : {
            "type" : "string"
          },
          "skuID" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "issuanceStatus" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "INACTIVE", "DELETED" ]
          },
          "paymentStatus" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "INACTIVE", "DELETED" ]
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "modifiedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "GenericCreateApplicationResponse" : {
        "type" : "object",
        "properties" : {
          "applicationID" : {
            "type" : "integer",
            "description" : "Identifier of the application that has been created",
            "format" : "int32",
            "example" : 142
          },
          "applicationType" : {
            "type" : "string",
            "description" : "Type of the application that has been created",
            "example" : "SIGN_UP",
            "enum" : [ "SIGN_UP", "EDIT_CORPORATE" ]
          }
        }
      },
      "GenericFetchApplicationResponse" : {
        "type" : "object",
        "properties" : {
          "signUpRequests" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "totalRequestCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "GetApplicationDetailsResponse" : {
        "type" : "object",
        "properties" : {
          "applicationDetails" : {
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "GetBeneficiaryTransactionListResponse" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "transactions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BeneficiaryTransaction"
            }
          }
        }
      },
      "IssueAccountArtifactRequest" : {
        "required" : [ "accountHolderID", "accountProductID" ],
        "type" : "object",
        "properties" : {
          "accountHolderID" : {
            "type" : "string",
            "description" : "ID of the individual being issued with the account.",
            "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
          },
          "accountProductID" : {
            "type" : "string",
            "description" : "ID of the account product ID which is part of the issuing bundle",
            "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
          },
          "name" : {
            "type" : "string",
            "description" : "The name which would be preferred in the account name",
            "example" : "Victor"
          },
          "vectors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountVector"
            }
          },
          "accessors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Accessor"
            }
          },
          "relationships" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountRelation"
            }
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "IssueAccountArtifactResponse" : {
        "required" : [ "accountHolderID", "bundleID" ],
        "type" : "object",
        "properties" : {
          "bundleID" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "accountHolderID" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "accountID" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          }
        }
      },
      "IssueBundleRequest" : {
        "required" : [ "accountHolderID", "name", "phoneNumber" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name which would be preferred in the account name",
            "example" : "Victor"
          },
          "phoneNumber" : {
            "maxLength" : 15,
            "minLength" : 10,
            "type" : "string",
            "description" : "The phone number to be assosciated with the account and the card",
            "example" : "+919876543210"
          },
          "accountHolderID" : {
            "type" : "string",
            "description" : "ID of the individual being issued with the account.",
            "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Any additional information which you would like to provide"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "IssueBundleResponse" : {
        "type" : "object",
        "properties" : {
          "bundleID" : {
            "type" : "string"
          },
          "accounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IssueAccountArtifactResponse"
            }
          },
          "paymentInstruments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IssuePaymentProductResponse"
            }
          }
        }
      },
      "IssueFormFactorRequest" : {
        "required" : [ "formFactorProductID", "resourceID", "targetAccountID" ],
        "type" : "object",
        "properties" : {
          "formFactorProductID" : {
            "type" : "string",
            "description" : "ID of the form factor/card which is being issued",
            "example" : "9d7ae299"
          },
          "resourceID" : {
            "type" : "string",
            "description" : "ID of the resource which is being issued and is part of the bundle",
            "example" : "9d7ae299"
          },
          "targetAccountID" : {
            "type" : "string",
            "description" : "ID of the individual's account which is to be linked to the resource/card",
            "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
          },
          "orderDetails" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "IssueFormFactorResponse" : {
        "type" : "object",
        "properties" : {
          "bundleID" : {
            "type" : "string"
          },
          "formFactorID" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "targetUri" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Any additional information which you would like to provide"
          }
        }
      },
      "IssuePaymentProductResponse" : {
        "type" : "object",
        "properties" : {
          "bundleID" : {
            "type" : "string"
          },
          "resourceID" : {
            "type" : "string"
          },
          "formFactorID" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "targetAccount" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Any additional information which you would like to provide"
          }
        }
      },
      "IssueResourceRequest" : {
        "required" : [ "phoneNumber", "resourceProductID", "targetAccountID" ],
        "type" : "object",
        "properties" : {
          "targetAccountID" : {
            "type" : "string",
            "description" : "ID of the individual's account which is to be linked to the resource/card",
            "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
          },
          "phoneNumber" : {
            "type" : "string",
            "description" : "The phone number to be assosciated with the account and the card",
            "example" : "+919876543210"
          },
          "resourceProductID" : {
            "type" : "string",
            "description" : "ID of the resource product which is being issued and is part of the bundle",
            "example" : "9d7ae299"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "IssueResourceResponse" : {
        "type" : "object",
        "properties" : {
          "bundleID" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "resourceID" : {
            "type" : "string"
          },
          "targetUri" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Any additional information which you would like to provide"
          }
        }
      },
      "JID" : {
        "type" : "object",
        "properties" : {
          "appDomain" : {
            "type" : "string"
          },
          "serviceName" : {
            "type" : "string"
          },
          "nodeId" : {
            "type" : "string"
          },
          "resource" : {
            "type" : "string"
          },
          "serviceInstanceJID" : {
            "type" : "boolean"
          },
          "primaryServiceName" : {
            "type" : "string"
          },
          "serviceViewName" : {
            "type" : "string"
          },
          "bareJID" : {
            "$ref" : "#/components/schemas/JID"
          },
          "serviceViewJID" : {
            "type" : "boolean"
          },
          "defaultServiceNode" : {
            "type" : "boolean"
          },
          "jidOfAGroup" : {
            "type" : "boolean"
          },
          "proxyServiceJID" : {
            "type" : "boolean"
          }
        }
      },
      "JsonArray" : {
        "type" : "object",
        "properties" : {
          "asBoolean" : {
            "type" : "boolean"
          },
          "asNumber" : {
            "$ref" : "#/components/schemas/Number"
          },
          "asDouble" : {
            "type" : "number",
            "format" : "double"
          },
          "asFloat" : {
            "type" : "number",
            "format" : "float"
          },
          "asLong" : {
            "type" : "integer",
            "format" : "int64"
          },
          "asInt" : {
            "type" : "integer",
            "format" : "int32"
          },
          "asByte" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "format" : "byte"
          },
          "asCharacter" : {
            "type" : "string"
          },
          "asBigDecimal" : {
            "type" : "number"
          },
          "asBigInteger" : {
            "type" : "integer"
          },
          "asShort" : {
            "type" : "integer",
            "format" : "int32"
          },
          "asString" : {
            "type" : "string"
          },
          "jsonNull" : {
            "type" : "boolean"
          },
          "asJsonArray" : {
            "$ref" : "#/components/schemas/JsonArray"
          },
          "asJsonObject" : {
            "$ref" : "#/components/schemas/JsonObject"
          },
          "asJsonPrimitive" : {
            "$ref" : "#/components/schemas/JsonPrimitive"
          },
          "jsonArray" : {
            "type" : "boolean"
          },
          "jsonObject" : {
            "type" : "boolean"
          },
          "jsonPrimitive" : {
            "type" : "boolean"
          },
          "asJsonNull" : {
            "$ref" : "#/components/schemas/JsonNull"
          }
        }
      },
      "JsonNull" : {
        "type" : "object",
        "properties" : {
          "asBoolean" : {
            "type" : "boolean"
          },
          "jsonNull" : {
            "type" : "boolean"
          },
          "asJsonArray" : {
            "$ref" : "#/components/schemas/JsonArray"
          },
          "asJsonObject" : {
            "$ref" : "#/components/schemas/JsonObject"
          },
          "asJsonPrimitive" : {
            "$ref" : "#/components/schemas/JsonPrimitive"
          },
          "jsonArray" : {
            "type" : "boolean"
          },
          "jsonObject" : {
            "type" : "boolean"
          },
          "jsonPrimitive" : {
            "type" : "boolean"
          },
          "asJsonNull" : {
            "$ref" : "#/components/schemas/JsonNull"
          },
          "asNumber" : {
            "$ref" : "#/components/schemas/Number"
          },
          "asDouble" : {
            "type" : "number",
            "format" : "double"
          },
          "asFloat" : {
            "type" : "number",
            "format" : "float"
          },
          "asLong" : {
            "type" : "integer",
            "format" : "int64"
          },
          "asInt" : {
            "type" : "integer",
            "format" : "int32"
          },
          "asByte" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "format" : "byte"
          },
          "asCharacter" : {
            "type" : "string"
          },
          "asBigDecimal" : {
            "type" : "number"
          },
          "asBigInteger" : {
            "type" : "integer"
          },
          "asShort" : {
            "type" : "integer",
            "format" : "int32"
          },
          "asString" : {
            "type" : "string"
          }
        }
      },
      "JsonObject" : {
        "type" : "object",
        "properties" : {
          "asBoolean" : {
            "type" : "boolean"
          },
          "jsonNull" : {
            "type" : "boolean"
          },
          "asJsonArray" : {
            "$ref" : "#/components/schemas/JsonArray"
          },
          "asJsonObject" : {
            "$ref" : "#/components/schemas/JsonObject"
          },
          "asJsonPrimitive" : {
            "$ref" : "#/components/schemas/JsonPrimitive"
          },
          "jsonArray" : {
            "type" : "boolean"
          },
          "jsonObject" : {
            "type" : "boolean"
          },
          "jsonPrimitive" : {
            "type" : "boolean"
          },
          "asJsonNull" : {
            "$ref" : "#/components/schemas/JsonNull"
          },
          "asNumber" : {
            "$ref" : "#/components/schemas/Number"
          },
          "asDouble" : {
            "type" : "number",
            "format" : "double"
          },
          "asFloat" : {
            "type" : "number",
            "format" : "float"
          },
          "asLong" : {
            "type" : "integer",
            "format" : "int64"
          },
          "asInt" : {
            "type" : "integer",
            "format" : "int32"
          },
          "asByte" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "format" : "byte"
          },
          "asCharacter" : {
            "type" : "string"
          },
          "asBigDecimal" : {
            "type" : "number"
          },
          "asBigInteger" : {
            "type" : "integer"
          },
          "asShort" : {
            "type" : "integer",
            "format" : "int32"
          },
          "asString" : {
            "type" : "string"
          }
        }
      },
      "JsonPrimitive" : {
        "type" : "object",
        "properties" : {
          "number" : {
            "type" : "boolean"
          },
          "boolean" : {
            "type" : "boolean"
          },
          "asBoolean" : {
            "type" : "boolean"
          },
          "string" : {
            "type" : "boolean"
          },
          "asNumber" : {
            "$ref" : "#/components/schemas/Number"
          },
          "asDouble" : {
            "type" : "number",
            "format" : "double"
          },
          "asFloat" : {
            "type" : "number",
            "format" : "float"
          },
          "asLong" : {
            "type" : "integer",
            "format" : "int64"
          },
          "asInt" : {
            "type" : "integer",
            "format" : "int32"
          },
          "asByte" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "format" : "byte"
          },
          "asCharacter" : {
            "type" : "string"
          },
          "asBigDecimal" : {
            "type" : "number"
          },
          "asBigInteger" : {
            "type" : "integer"
          },
          "asShort" : {
            "type" : "integer",
            "format" : "int32"
          },
          "asString" : {
            "type" : "string"
          },
          "jsonNull" : {
            "type" : "boolean"
          },
          "asJsonArray" : {
            "$ref" : "#/components/schemas/JsonArray"
          },
          "asJsonObject" : {
            "$ref" : "#/components/schemas/JsonObject"
          },
          "asJsonPrimitive" : {
            "$ref" : "#/components/schemas/JsonPrimitive"
          },
          "jsonArray" : {
            "type" : "boolean"
          },
          "jsonObject" : {
            "type" : "boolean"
          },
          "jsonPrimitive" : {
            "type" : "boolean"
          },
          "asJsonNull" : {
            "$ref" : "#/components/schemas/JsonNull"
          }
        }
      },
      "KYCDetails" : {
        "type" : "object",
        "properties" : {
          "kycStatus" : {
            "type" : "string"
          },
          "updateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "expiryTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "kycStatusPostExpiry" : {
            "type" : "string"
          },
          "authType" : {
            "type" : "string"
          },
          "authData" : {
            "$ref" : "#/components/schemas/JsonObject"
          },
          "kycAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "KYCStatus" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "accountHolderID" : {
            "type" : "string"
          },
          "kycStatus" : {
            "type" : "string"
          },
          "updateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "expiryTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "kycStatusPostExpiry" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "ListResourceResponse" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "resources" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Resource"
            }
          }
        }
      },
      "Number" : {
        "type" : "object"
      },
      "OrderDetails" : {
        "type" : "object",
        "properties" : {
          "orderID" : {
            "type" : "string"
          },
          "cardSkuID" : {
            "type" : "string"
          },
          "plasticCode" : {
            "type" : "string"
          },
          "thirdLineEmbossing" : {
            "type" : "string"
          },
          "fourthLineEmbossing" : {
            "type" : "string"
          },
          "expiry" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "deliveryAddress" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "tenantAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "vendorAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "orderStatus" : {
            "type" : "string"
          },
          "embossedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "orderedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "OrderSummary" : {
        "type" : "object",
        "properties" : {
          "quantity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "orderID" : {
            "type" : "string"
          },
          "cardSkuID" : {
            "type" : "string"
          },
          "plasticCode" : {
            "type" : "string"
          },
          "expiry" : {
            "$ref" : "#/components/schemas/Expiry"
          },
          "thirdLineEmbossing" : {
            "type" : "string"
          },
          "fourthLineEmbossing" : {
            "type" : "string"
          },
          "deliveryAddress" : {
            "$ref" : "#/components/schemas/Address"
          },
          "tenantAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "vendorAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "additionalAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "orderStatus" : {
            "type" : "string"
          },
          "orderedAt" : {
            "type" : "string"
          }
        }
      },
      "POP" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "label" : {
            "type" : "string"
          },
          "entityID" : {
            "type" : "string"
          },
          "entityType" : {
            "type" : "string"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "contactList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Contact"
            }
          },
          "status" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "modifiedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "default" : {
            "type" : "boolean"
          }
        }
      },
      "PaymentProduct" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "ifi" : {
            "type" : "integer",
            "format" : "int64"
          },
          "id" : {
            "type" : "string"
          },
          "code" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "channels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Channel"
            }
          },
          "resourceProduct" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "INACTIVE", "DELETED" ]
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "modifiedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "Policies" : {
        "type" : "object",
        "properties" : {
          "issuancePolicies" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "paymentPolicies" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ProductInfoRequest" : {
        "required" : [ "productID" ],
        "type" : "object",
        "properties" : {
          "productID" : {
            "type" : "string",
            "description" : "The UUID of the account product which will be a part of the bundle",
            "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
          },
          "productFamilyID" : {
            "type" : "string",
            "description" : "The UUID of the product's family which will be a part of the bundle",
            "example" : "aa267641-f475-4acb-859e-bb9c60d3e9db"
          },
          "programIDs" : {
            "type" : "array",
            "description" : "The UUIDs of the programs which will be associated to the account product at the time of issuance",
            "items" : {
              "type" : "string"
            }
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            },
            "description" : "Any additional information which is specific to the product info"
          }
        }
      },
      "ProductInfoResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "productID" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "ACCOUNT", "PAYMENT" ]
          },
          "programIDs" : {
            "type" : "string"
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "shortCode" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          }
        }
      },
      "Resource" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "ifi" : {
            "type" : "integer",
            "format" : "int64"
          },
          "id" : {
            "type" : "string"
          },
          "resourceProduct" : {
            "$ref" : "#/components/schemas/ResourceProduct"
          },
          "targetURI" : {
            "type" : "string"
          },
          "formFactors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FormFactor"
            }
          },
          "policies" : {
            "$ref" : "#/components/schemas/Policies"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "INACTIVE", "DELETED" ]
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "modifiedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ResourceProduct" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "ifi" : {
            "type" : "integer",
            "format" : "int64"
          },
          "id" : {
            "type" : "string"
          },
          "code" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "formFactorProducts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FormFactorProduct"
            }
          },
          "policies" : {
            "$ref" : "#/components/schemas/Policies"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "INACTIVE", "DELETED" ]
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "modifiedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "SensitiveCardView" : {
        "type" : "object",
        "properties" : {
          "algo" : {
            "type" : "string",
            "enum" : [ "ECDH" ]
          },
          "value" : {
            "$ref" : "#/components/schemas/ECDHEncryptedCardPayload"
          }
        }
      },
      "SetPinRequest" : {
        "type" : "object",
        "properties" : {
          "newPin" : {
            "type" : "string"
          },
          "nonce" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "SigningAuthority" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the signing authority",
            "example" : "Victor"
          },
          "email" : {
            "type" : "string",
            "description" : "Email ID of the signing authority",
            "example" : "Victor@victor.com"
          },
          "phoneNumber" : {
            "type" : "string",
            "description" : "Phone number of the signing authority",
            "example" : "+919876543210"
          }
        }
      },
      "Tag" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "UpdateAccountHolderApplicationRequest" : {
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "applicationID" : {
            "type" : "string"
          },
          "ifiID" : {
            "type" : "integer",
            "format" : "int64"
          },
          "salutation" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "middleName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "profilePicURL" : {
            "type" : "string"
          },
          "dob" : {
            "type" : "string",
            "format" : "date"
          },
          "gender" : {
            "type" : "string"
          },
          "mothersMaidenName" : {
            "type" : "string"
          }
        }
      },
      "UpdateBundleRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name which would be assigned to the bundle",
            "example" : "Savings Bundle"
          },
          "accountProducts" : {
            "type" : "array",
            "description" : "The list of account products which will be a part of the bundle",
            "items" : {
              "$ref" : "#/components/schemas/ProductInfoRequest"
            }
          },
          "paymentProducts" : {
            "type" : "array",
            "description" : "The list of payment products which will be a part of the bundle",
            "items" : {
              "$ref" : "#/components/schemas/ProductInfoRequest"
            }
          },
          "status" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            },
            "description" : "Any additional information which is specific to the bundle"
          },
          "shortCode" : {
            "type" : "string",
            "description" : "The short code to identify the bundle",
            "example" : "SVNG"
          },
          "picURL" : {
            "type" : "string",
            "description" : "The URL to get the bundle's display pic"
          },
          "description" : {
            "type" : "string",
            "description" : "The detailed description of the bundle",
            "example" : "Bundle related to savings accounts. Consists of a savings account product and a related debit card"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "UpdateKycStatusRequest" : {
        "type" : "object",
        "properties" : {
          "kycStatus" : {
            "type" : "string"
          },
          "expiryTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "kycStatusPostExpiry" : {
            "type" : "string"
          },
          "kycAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "authType" : {
            "type" : "string"
          },
          "authData" : {
            "$ref" : "#/components/schemas/JsonObject"
          }
        }
      },
      "Vector" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "aetherID" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "verified" : {
            "type" : "boolean"
          }
        }
      },
      "Void" : {
        "type" : "object"
      }
    }
  }
}
